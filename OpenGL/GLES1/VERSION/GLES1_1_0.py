'''OpenGL extension VERSION.GLES1_1_0

This module customises the behaviour of the 
OpenGL.raw.GLES1.VERSION.GLES1_1_0 to provide a more 
Python-friendly API

The official definition of this extension is available here:
http://www.opengl.org/registry/specs/VERSION/GLES1_1_0.txt
'''
from OpenGL import platform, constant, arrays
from OpenGL import extensions, wrapper
import ctypes
from OpenGL.raw.GLES1 import _types, _glgets
from OpenGL.raw.GLES1.VERSION.GLES1_1_0 import *
from OpenGL.raw.GLES1.VERSION.GLES1_1_0 import _EXTENSION_NAME

def glInitGles110VERSION():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( _EXTENSION_NAME )

glGetFloatv=wrapper.wrapper(glGetFloatv).setOutput(#
    'data',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetLightfv=wrapper.wrapper(glGetLightfv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetMaterialfv=wrapper.wrapper(glGetMaterialfv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetTexEnvfv=wrapper.wrapper(glGetTexEnvfv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetTexParameterfv=wrapper.wrapper(glGetTexParameterfv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetBooleanv=wrapper.wrapper(glGetBooleanv).setOutput(#
    'data',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetBufferParameteriv=wrapper.wrapper(glGetBufferParameteriv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGenBuffers=wrapper.wrapper(glGenBuffers).setOutput(#
    'buffers',size=lambda x:(x,),pnameArg='n',orPassIn=True
)
glGenTextures=wrapper.wrapper(glGenTextures).setOutput(#
    'textures',size=lambda x:(x,),pnameArg='n',orPassIn=True
)
glGetIntegerv=wrapper.wrapper(glGetIntegerv).setOutput(#
    'data',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetPointerv=wrapper.wrapper(glGetPointerv).setOutput(#
    'params',size=(1,),orPassIn=True
)
glGetTexEnviv=wrapper.wrapper(glGetTexEnviv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetTexParameteriv=wrapper.wrapper(glGetTexParameteriv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
# COMPSIZE(format,type,width,height) glReadPixels=wrapper.wrapper(glReadPixels)
### END AUTOGENERATED SECTION