'''OpenGL extension PGI.misc_hints

Overview (from the spec)
	
	The extension allows the app to give various hints regarding 
	desired level of conformance, performance, features, etc.

The official definition of this extension is available here:
	http://oss.sgi.com/projects/ogl-sample/registry/PGI/misc_hints.txt

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_PGI_misc_hints'
GL_PREFER_DOUBLEBUFFER_HINT_PGI = constant.Constant( 'GL_PREFER_DOUBLEBUFFER_HINT_PGI', 0x1A1F8 )
GL_CONSERVE_MEMORY_HINT_PGI = constant.Constant( 'GL_CONSERVE_MEMORY_HINT_PGI', 0x1A1FD )
GL_RECLAIM_MEMORY_HINT_PGI = constant.Constant( 'GL_RECLAIM_MEMORY_HINT_PGI', 0x1A1FE )
GL_NATIVE_GRAPHICS_HANDLE_PGI = constant.Constant( 'GL_NATIVE_GRAPHICS_HANDLE_PGI', 0x1A202 )
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI = constant.Constant( 'GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI', 0x1A203 )
GL_NATIVE_GRAPHICS_END_HINT_PGI = constant.Constant( 'GL_NATIVE_GRAPHICS_END_HINT_PGI', 0x1A204 )
GL_ALWAYS_FAST_HINT_PGI = constant.Constant( 'GL_ALWAYS_FAST_HINT_PGI', 0x1A20C )
GL_ALWAYS_SOFT_HINT_PGI = constant.Constant( 'GL_ALWAYS_SOFT_HINT_PGI', 0x1A20D )
GL_ALLOW_DRAW_OBJ_HINT_PGI = constant.Constant( 'GL_ALLOW_DRAW_OBJ_HINT_PGI', 0x1A20E )
GL_ALLOW_DRAW_WIN_HINT_PGI = constant.Constant( 'GL_ALLOW_DRAW_WIN_HINT_PGI', 0x1A20F )
GL_ALLOW_DRAW_FRG_HINT_PGI = constant.Constant( 'GL_ALLOW_DRAW_FRG_HINT_PGI', 0x1A210 )
GL_ALLOW_DRAW_MEM_HINT_PGI = constant.Constant( 'GL_ALLOW_DRAW_MEM_HINT_PGI', 0x1A211 )
GL_STRICT_DEPTHFUNC_HINT_PGI = constant.Constant( 'GL_STRICT_DEPTHFUNC_HINT_PGI', 0x1A216 )
GL_STRICT_LIGHTING_HINT_PGI = constant.Constant( 'GL_STRICT_LIGHTING_HINT_PGI', 0x1A217 )
GL_STRICT_SCISSOR_HINT_PGI = constant.Constant( 'GL_STRICT_SCISSOR_HINT_PGI', 0x1A218 )
GL_FULL_STIPPLE_HINT_PGI = constant.Constant( 'GL_FULL_STIPPLE_HINT_PGI', 0x1A219 )
GL_CLIP_NEAR_HINT_PGI = constant.Constant( 'GL_CLIP_NEAR_HINT_PGI', 0x1A220 )
GL_CLIP_FAR_HINT_PGI = constant.Constant( 'GL_CLIP_FAR_HINT_PGI', 0x1A221 )
GL_WIDE_LINE_HINT_PGI = constant.Constant( 'GL_WIDE_LINE_HINT_PGI', 0x1A222 )
GL_BACK_NORMALS_HINT_PGI = constant.Constant( 'GL_BACK_NORMALS_HINT_PGI', 0x1A223 )
glHintPGI = platform.createExtensionFunction( 
	'glHintPGI', dll=platform.GL,
	extension=EXTENSION_NAME,
	resultType=None, 
	argTypes=(constants.GLenum, constants.GLint,),
	doc = 'glHintPGI( GLenum(target), GLint(mode) ) -> None',
	argNames = ('target', 'mode',),
)


def glInitMiscHintsPGI():
	'''Return boolean indicating whether this extension is available'''
	return extensions.hasGLExtension( EXTENSION_NAME )
