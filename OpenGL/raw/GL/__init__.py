# -*- coding: iso-8859-1 -*-
"""Raw (C-style) API for OpenGL.GL

Automatically generated by the generateraw script, do not edit!
"""
from OpenGL.raw.GL.constants import *

from ctypes import *
from OpenGL import platform, arrays
from OpenGL.constant import Constant
from OpenGL import constants as GLconstants
GLvoid = GLconstants.GLvoid

from OpenGL.constants import GL_BYTE
from OpenGL.constants import GL_DOUBLE
from OpenGL.constants import GL_FALSE
from OpenGL.constants import GL_FLOAT
from OpenGL.constants import GL_INT
from OpenGL.constants import GL_SHORT
from OpenGL.constants import GL_TRUE
from OpenGL.constants import GL_UNSIGNED_BYTE
from OpenGL.constants import GL_UNSIGNED_INT
from OpenGL.constants import GL_UNSIGNED_SHORT
from OpenGL.constants import GLenum
from OpenGL.constants import GLfloat
from OpenGL.constants import GLclampf
from OpenGL.constants import GLboolean
from OpenGL.constants import GLsizei
from OpenGL.constants import GLuint
from OpenGL.constants import GLint
from OpenGL.constants import GLubyte
from OpenGL.constants import GLbitfield
from OpenGL.constants import GLclampd
from OpenGL.constants import GLdouble
from OpenGL.constants import GLbyte
from OpenGL.constants import GLshort
from OpenGL.constants import GLushort


GL_BLEND_EQUATION_RGB = GL_BLEND_EQUATION # alias
GL_BLEND_EQUATION_RGB_EXT = GL_BLEND_EQUATION # alias
GL_CURRENT_FOG_COORD = GL_CURRENT_FOG_COORDINATE # alias
GL_FOG_COORD = GL_FOG_COORDINATE # alias
GL_FOG_COORD_ARRAY = GL_FOG_COORDINATE_ARRAY # alias
GL_FOG_COORD_ARRAY_BUFFER_BINDING = GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING # alias
GL_FOG_COORD_ARRAY_POINTER = GL_FOG_COORDINATE_ARRAY_POINTER # alias
GL_FOG_COORD_ARRAY_STRIDE = GL_FOG_COORDINATE_ARRAY_STRIDE # alias
GL_FOG_COORD_ARRAY_TYPE = GL_FOG_COORDINATE_ARRAY_TYPE # alias
GL_FOG_COORD_SRC = GL_FOG_COORDINATE_SOURCE # alias
GL_LINE_WIDTH_GRANULARITY = GL_SMOOTH_LINE_WIDTH_GRANULARITY # alias
GL_LINE_WIDTH_RANGE = GL_SMOOTH_LINE_WIDTH_RANGE # alias
GL_LOGIC_OP = GL_INDEX_LOGIC_OP # alias
GL_MODELVIEW0_EXT = GL_MODELVIEW # alias
GL_MODELVIEW0_MATRIX_EXT = GL_MODELVIEW_MATRIX # alias
GL_MODELVIEW0_STACK_DEPTH_EXT = GL_MODELVIEW_STACK_DEPTH # alias
GL_OFFSET_TEXTURE_2D_BIAS_NV = GL_OFFSET_TEXTURE_BIAS_NV # alias
GL_OFFSET_TEXTURE_2D_MATRIX_NV = GL_OFFSET_TEXTURE_MATRIX_NV # alias
GL_OFFSET_TEXTURE_2D_SCALE_NV = GL_OFFSET_TEXTURE_SCALE_NV # alias
GL_POINT_SIZE_GRANULARITY = GL_SMOOTH_POINT_SIZE_GRANULARITY # alias
GL_POINT_SIZE_RANGE = GL_SMOOTH_POINT_SIZE_RANGE # alias
GL_SRC0_ALPHA = GL_SOURCE0_ALPHA # alias
GL_SRC0_RGB = GL_SOURCE0_RGB # alias
GL_SRC1_ALPHA = GL_SOURCE1_ALPHA # alias
GL_SRC1_RGB = GL_SOURCE1_RGB # alias
GL_SRC2_ALPHA = GL_SOURCE2_ALPHA # alias
GL_SRC2_RGB = GL_SOURCE2_RGB # alias
GL_TEXTURE_COMPONENTS = GL_TEXTURE_INTERNAL_FORMAT # alias


# /usr/include/GL/gl.h 1291
glAccum = platform.createBaseFunction( 
	'glAccum', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLfloat],
	doc='glAccum( GLenum(op), GLfloat(value) ) -> None', 
	argNames=('op', 'value'),
)


# /usr/include/GL/gl.h 1292
glAlphaFunc = platform.createBaseFunction( 
	'glAlphaFunc', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLclampf],
	doc='glAlphaFunc( GLenum(func), GLclampf(ref) ) -> None', 
	argNames=('func', 'ref'),
)


# /usr/include/GL/gl.h 1293
glAreTexturesResident = platform.createBaseFunction( 
	'glAreTexturesResident', dll=platform.GL, resultType=GLboolean, 
	argTypes=[GLsizei,arrays.GLuintArray,POINTER(GLboolean)],
	doc='glAreTexturesResident( GLsizei(n), arrays.GLuintArray(textures), POINTER(GLboolean)(residences) ) -> GLboolean', 
	argNames=('n', 'textures', 'residences'),
)


# /usr/include/GL/gl.h 1294
glArrayElement = platform.createBaseFunction( 
	'glArrayElement', dll=platform.GL, resultType=None, 
	argTypes=[GLint],
	doc='glArrayElement( GLint(i) ) -> None', 
	argNames=('i',),
)


# /usr/include/GL/gl.h 1295
glBegin = platform.createBaseFunction( 
	'glBegin', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glBegin( GLenum(mode) ) -> None', 
	argNames=('mode',),
)


# /usr/include/GL/gl.h 1296
glBindTexture = platform.createBaseFunction( 
	'glBindTexture', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLuint],
	doc='glBindTexture( GLenum(target), GLuint(texture) ) -> None', 
	argNames=('target', 'texture'),
)


# /usr/include/GL/gl.h 1297
glBitmap = platform.createBaseFunction( 
	'glBitmap', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei,GLsizei,GLfloat,GLfloat,GLfloat,GLfloat,arrays.GLubyteArray],
	doc='glBitmap( GLsizei(width), GLsizei(height), GLfloat(xorig), GLfloat(yorig), GLfloat(xmove), GLfloat(ymove), arrays.GLubyteArray(bitmap) ) -> None', 
	argNames=('width', 'height', 'xorig', 'yorig', 'xmove', 'ymove', 'bitmap'),
)


# /usr/include/GL/gl.h 1298
glBlendFunc = platform.createBaseFunction( 
	'glBlendFunc', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum],
	doc='glBlendFunc( GLenum(sfactor), GLenum(dfactor) ) -> None', 
	argNames=('sfactor', 'dfactor'),
)


# /usr/include/GL/gl.h 1299
glCallList = platform.createBaseFunction( 
	'glCallList', dll=platform.GL, resultType=None, 
	argTypes=[GLuint],
	doc='glCallList( GLuint(list) ) -> None', 
	argNames=('list',),
)

GLvoid = None
# /usr/include/GL/gl.h 1300
glCallLists = platform.createBaseFunction( 
	'glCallLists', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei,GLenum,POINTER(GLvoid)],
	doc='glCallLists( GLsizei(n), GLenum(type), POINTER(GLvoid)(lists) ) -> None', 
	argNames=('n', 'type', 'lists'),
)


# /usr/include/GL/gl.h 1301
glClear = platform.createBaseFunction( 
	'glClear', dll=platform.GL, resultType=None, 
	argTypes=[GLbitfield],
	doc='glClear( GLbitfield(mask) ) -> None', 
	argNames=('mask',),
)


# /usr/include/GL/gl.h 1302
glClearAccum = platform.createBaseFunction( 
	'glClearAccum', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat,GLfloat,GLfloat],
	doc='glClearAccum( GLfloat(red), GLfloat(green), GLfloat(blue), GLfloat(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)


# /usr/include/GL/gl.h 1303
glClearColor = platform.createBaseFunction( 
	'glClearColor', dll=platform.GL, resultType=None, 
	argTypes=[GLclampf,GLclampf,GLclampf,GLclampf],
	doc='glClearColor( GLclampf(red), GLclampf(green), GLclampf(blue), GLclampf(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)


# /usr/include/GL/gl.h 1304
glClearDepth = platform.createBaseFunction( 
	'glClearDepth', dll=platform.GL, resultType=None, 
	argTypes=[GLclampd],
	doc='glClearDepth( GLclampd(depth) ) -> None', 
	argNames=('depth',),
)


# /usr/include/GL/gl.h 1305
glClearIndex = platform.createBaseFunction( 
	'glClearIndex', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat],
	doc='glClearIndex( GLfloat(c) ) -> None', 
	argNames=('c',),
)


# /usr/include/GL/gl.h 1306
glClearStencil = platform.createBaseFunction( 
	'glClearStencil', dll=platform.GL, resultType=None, 
	argTypes=[GLint],
	doc='glClearStencil( GLint(s) ) -> None', 
	argNames=('s',),
)


# /usr/include/GL/gl.h 1307
glClipPlane = platform.createBaseFunction( 
	'glClipPlane', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,arrays.GLdoubleArray],
	doc='glClipPlane( GLenum(plane), arrays.GLdoubleArray(equation) ) -> None', 
	argNames=('plane', 'equation'),
)


# /usr/include/GL/gl.h 1308
glColor3b = platform.createBaseFunction( 
	'glColor3b', dll=platform.GL, resultType=None, 
	argTypes=[GLbyte,GLbyte,GLbyte],
	doc='glColor3b( GLbyte(red), GLbyte(green), GLbyte(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)


# /usr/include/GL/gl.h 1309
glColor3bv = platform.createBaseFunction( 
	'glColor3bv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLbyteArray],
	doc='glColor3bv( arrays.GLbyteArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1310
glColor3d = platform.createBaseFunction( 
	'glColor3d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble,GLdouble],
	doc='glColor3d( GLdouble(red), GLdouble(green), GLdouble(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)


# /usr/include/GL/gl.h 1311
glColor3dv = platform.createBaseFunction( 
	'glColor3dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glColor3dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1312
glColor3f = platform.createBaseFunction( 
	'glColor3f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat,GLfloat],
	doc='glColor3f( GLfloat(red), GLfloat(green), GLfloat(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)


# /usr/include/GL/gl.h 1313
glColor3fv = platform.createBaseFunction( 
	'glColor3fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glColor3fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1314
glColor3i = platform.createBaseFunction( 
	'glColor3i', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint,GLint],
	doc='glColor3i( GLint(red), GLint(green), GLint(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)


# /usr/include/GL/gl.h 1315
glColor3iv = platform.createBaseFunction( 
	'glColor3iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glColor3iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1316
glColor3s = platform.createBaseFunction( 
	'glColor3s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort,GLshort,GLshort],
	doc='glColor3s( GLshort(red), GLshort(green), GLshort(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)


# /usr/include/GL/gl.h 1317
glColor3sv = platform.createBaseFunction( 
	'glColor3sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glColor3sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1318
glColor3ub = platform.createBaseFunction( 
	'glColor3ub', dll=platform.GL, resultType=None, 
	argTypes=[GLubyte,GLubyte,GLubyte],
	doc='glColor3ub( GLubyte(red), GLubyte(green), GLubyte(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)


# /usr/include/GL/gl.h 1319
glColor3ubv = platform.createBaseFunction( 
	'glColor3ubv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLubyteArray],
	doc='glColor3ubv( arrays.GLubyteArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1320
glColor3ui = platform.createBaseFunction( 
	'glColor3ui', dll=platform.GL, resultType=None, 
	argTypes=[GLuint,GLuint,GLuint],
	doc='glColor3ui( GLuint(red), GLuint(green), GLuint(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)


# /usr/include/GL/gl.h 1321
glColor3uiv = platform.createBaseFunction( 
	'glColor3uiv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLuintArray],
	doc='glColor3uiv( arrays.GLuintArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1322
glColor3us = platform.createBaseFunction( 
	'glColor3us', dll=platform.GL, resultType=None, 
	argTypes=[GLushort,GLushort,GLushort],
	doc='glColor3us( GLushort(red), GLushort(green), GLushort(blue) ) -> None', 
	argNames=('red', 'green', 'blue'),
)


# /usr/include/GL/gl.h 1323
glColor3usv = platform.createBaseFunction( 
	'glColor3usv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLushortArray],
	doc='glColor3usv( arrays.GLushortArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1324
glColor4b = platform.createBaseFunction( 
	'glColor4b', dll=platform.GL, resultType=None, 
	argTypes=[GLbyte,GLbyte,GLbyte,GLbyte],
	doc='glColor4b( GLbyte(red), GLbyte(green), GLbyte(blue), GLbyte(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)


# /usr/include/GL/gl.h 1325
glColor4bv = platform.createBaseFunction( 
	'glColor4bv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLbyteArray],
	doc='glColor4bv( arrays.GLbyteArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1326
glColor4d = platform.createBaseFunction( 
	'glColor4d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble,GLdouble,GLdouble],
	doc='glColor4d( GLdouble(red), GLdouble(green), GLdouble(blue), GLdouble(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)


# /usr/include/GL/gl.h 1327
glColor4dv = platform.createBaseFunction( 
	'glColor4dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glColor4dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1328
glColor4f = platform.createBaseFunction( 
	'glColor4f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat,GLfloat,GLfloat],
	doc='glColor4f( GLfloat(red), GLfloat(green), GLfloat(blue), GLfloat(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)


# /usr/include/GL/gl.h 1329
glColor4fv = platform.createBaseFunction( 
	'glColor4fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glColor4fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1330
glColor4i = platform.createBaseFunction( 
	'glColor4i', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint,GLint,GLint],
	doc='glColor4i( GLint(red), GLint(green), GLint(blue), GLint(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)


# /usr/include/GL/gl.h 1331
glColor4iv = platform.createBaseFunction( 
	'glColor4iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glColor4iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1332
glColor4s = platform.createBaseFunction( 
	'glColor4s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort,GLshort,GLshort,GLshort],
	doc='glColor4s( GLshort(red), GLshort(green), GLshort(blue), GLshort(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)


# /usr/include/GL/gl.h 1333
glColor4sv = platform.createBaseFunction( 
	'glColor4sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glColor4sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1334
glColor4ub = platform.createBaseFunction( 
	'glColor4ub', dll=platform.GL, resultType=None, 
	argTypes=[GLubyte,GLubyte,GLubyte,GLubyte],
	doc='glColor4ub( GLubyte(red), GLubyte(green), GLubyte(blue), GLubyte(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)


# /usr/include/GL/gl.h 1335
glColor4ubv = platform.createBaseFunction( 
	'glColor4ubv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLubyteArray],
	doc='glColor4ubv( arrays.GLubyteArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1336
glColor4ui = platform.createBaseFunction( 
	'glColor4ui', dll=platform.GL, resultType=None, 
	argTypes=[GLuint,GLuint,GLuint,GLuint],
	doc='glColor4ui( GLuint(red), GLuint(green), GLuint(blue), GLuint(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)


# /usr/include/GL/gl.h 1337
glColor4uiv = platform.createBaseFunction( 
	'glColor4uiv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLuintArray],
	doc='glColor4uiv( arrays.GLuintArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1338
glColor4us = platform.createBaseFunction( 
	'glColor4us', dll=platform.GL, resultType=None, 
	argTypes=[GLushort,GLushort,GLushort,GLushort],
	doc='glColor4us( GLushort(red), GLushort(green), GLushort(blue), GLushort(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)


# /usr/include/GL/gl.h 1339
glColor4usv = platform.createBaseFunction( 
	'glColor4usv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLushortArray],
	doc='glColor4usv( arrays.GLushortArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1340
glColorMask = platform.createBaseFunction( 
	'glColorMask', dll=platform.GL, resultType=None, 
	argTypes=[GLboolean,GLboolean,GLboolean,GLboolean],
	doc='glColorMask( GLboolean(red), GLboolean(green), GLboolean(blue), GLboolean(alpha) ) -> None', 
	argNames=('red', 'green', 'blue', 'alpha'),
)


# /usr/include/GL/gl.h 1341
glColorMaterial = platform.createBaseFunction( 
	'glColorMaterial', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum],
	doc='glColorMaterial( GLenum(face), GLenum(mode) ) -> None', 
	argNames=('face', 'mode'),
)


# /usr/include/GL/gl.h 1342
glColorPointer = platform.createBaseFunction( 
	'glColorPointer', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLenum,GLsizei,POINTER(GLvoid)],
	doc='glColorPointer( GLint(size), GLenum(type), GLsizei(stride), POINTER(GLvoid)(pointer) ) -> None', 
	argNames=('size', 'type', 'stride', 'pointer'),
)


# /usr/include/GL/gl.h 1343
glCopyPixels = platform.createBaseFunction( 
	'glCopyPixels', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint,GLsizei,GLsizei,GLenum],
	doc='glCopyPixels( GLint(x), GLint(y), GLsizei(width), GLsizei(height), GLenum(type) ) -> None', 
	argNames=('x', 'y', 'width', 'height', 'type'),
)


# /usr/include/GL/gl.h 1344
glCopyTexImage1D = platform.createBaseFunction( 
	'glCopyTexImage1D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLint],
	doc='glCopyTexImage1D( GLenum(target), GLint(level), GLenum(internalFormat), GLint(x), GLint(y), GLsizei(width), GLint(border) ) -> None', 
	argNames=('target', 'level', 'internalFormat', 'x', 'y', 'width', 'border'),
)


# /usr/include/GL/gl.h 1345
glCopyTexImage2D = platform.createBaseFunction( 
	'glCopyTexImage2D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLsizei,GLint],
	doc='glCopyTexImage2D( GLenum(target), GLint(level), GLenum(internalFormat), GLint(x), GLint(y), GLsizei(width), GLsizei(height), GLint(border) ) -> None', 
	argNames=('target', 'level', 'internalFormat', 'x', 'y', 'width', 'height', 'border'),
)


# /usr/include/GL/gl.h 1346
glCopyTexSubImage1D = platform.createBaseFunction( 
	'glCopyTexSubImage1D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint,GLint,GLint,GLint,GLsizei],
	doc='glCopyTexSubImage1D( GLenum(target), GLint(level), GLint(xoffset), GLint(x), GLint(y), GLsizei(width) ) -> None', 
	argNames=('target', 'level', 'xoffset', 'x', 'y', 'width'),
)


# /usr/include/GL/gl.h 1347
glCopyTexSubImage2D = platform.createBaseFunction( 
	'glCopyTexSubImage2D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei],
	doc='glCopyTexSubImage2D( GLenum(target), GLint(level), GLint(xoffset), GLint(yoffset), GLint(x), GLint(y), GLsizei(width), GLsizei(height) ) -> None', 
	argNames=('target', 'level', 'xoffset', 'yoffset', 'x', 'y', 'width', 'height'),
)


# /usr/include/GL/gl.h 1348
glCullFace = platform.createBaseFunction( 
	'glCullFace', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glCullFace( GLenum(mode) ) -> None', 
	argNames=('mode',),
)


# /usr/include/GL/gl.h 1349
glDeleteLists = platform.createBaseFunction( 
	'glDeleteLists', dll=platform.GL, resultType=None, 
	argTypes=[GLuint,GLsizei],
	doc='glDeleteLists( GLuint(list), GLsizei(range) ) -> None', 
	argNames=('list', 'range'),
)


# /usr/include/GL/gl.h 1350
glDeleteTextures = platform.createBaseFunction( 
	'glDeleteTextures', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei,arrays.GLuintArray],
	doc='glDeleteTextures( GLsizei(n), arrays.GLuintArray(textures) ) -> None', 
	argNames=('n', 'textures'),
)


# /usr/include/GL/gl.h 1351
glDepthFunc = platform.createBaseFunction( 
	'glDepthFunc', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glDepthFunc( GLenum(func) ) -> None', 
	argNames=('func',),
)


# /usr/include/GL/gl.h 1352
glDepthMask = platform.createBaseFunction( 
	'glDepthMask', dll=platform.GL, resultType=None, 
	argTypes=[GLboolean],
	doc='glDepthMask( GLboolean(flag) ) -> None', 
	argNames=('flag',),
)


# /usr/include/GL/gl.h 1353
glDepthRange = platform.createBaseFunction( 
	'glDepthRange', dll=platform.GL, resultType=None, 
	argTypes=[GLclampd,GLclampd],
	doc='glDepthRange( GLclampd(zNear), GLclampd(zFar) ) -> None', 
	argNames=('zNear', 'zFar'),
)


# /usr/include/GL/gl.h 1354
glDisable = platform.createBaseFunction( 
	'glDisable', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glDisable( GLenum(cap) ) -> None', 
	argNames=('cap',),
)


# /usr/include/GL/gl.h 1355
glDisableClientState = platform.createBaseFunction( 
	'glDisableClientState', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glDisableClientState( GLenum(array) ) -> None', 
	argNames=('array',),
)


# /usr/include/GL/gl.h 1356
glDrawArrays = platform.createBaseFunction( 
	'glDrawArrays', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint,GLsizei],
	doc='glDrawArrays( GLenum(mode), GLint(first), GLsizei(count) ) -> None', 
	argNames=('mode', 'first', 'count'),
)


# /usr/include/GL/gl.h 1357
glDrawBuffer = platform.createBaseFunction( 
	'glDrawBuffer', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glDrawBuffer( GLenum(mode) ) -> None', 
	argNames=('mode',),
)


# /usr/include/GL/gl.h 1358
glDrawElements = platform.createBaseFunction( 
	'glDrawElements', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLsizei,GLenum,POINTER(GLvoid)],
	doc='glDrawElements( GLenum(mode), GLsizei(count), GLenum(type), POINTER(GLvoid)(indices) ) -> None', 
	argNames=('mode', 'count', 'type', 'indices'),
)


# /usr/include/GL/gl.h 1359
glDrawPixels = platform.createBaseFunction( 
	'glDrawPixels', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei,GLsizei,GLenum,GLenum,POINTER(GLvoid)],
	doc='glDrawPixels( GLsizei(width), GLsizei(height), GLenum(format), GLenum(type), POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('width', 'height', 'format', 'type', 'pixels'),
)


# /usr/include/GL/gl.h 1360
glEdgeFlag = platform.createBaseFunction( 
	'glEdgeFlag', dll=platform.GL, resultType=None, 
	argTypes=[GLboolean],
	doc='glEdgeFlag( GLboolean(flag) ) -> None', 
	argNames=('flag',),
)


# /usr/include/GL/gl.h 1361
glEdgeFlagPointer = platform.createBaseFunction( 
	'glEdgeFlagPointer', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei,POINTER(GLvoid)],
	doc='glEdgeFlagPointer( GLsizei(stride), POINTER(GLvoid)(pointer) ) -> None', 
	argNames=('stride', 'pointer'),
)


# /usr/include/GL/gl.h 1362
glEdgeFlagv = platform.createBaseFunction( 
	'glEdgeFlagv', dll=platform.GL, resultType=None, 
	argTypes=[POINTER(GLboolean)],
	doc='glEdgeFlagv( POINTER(GLboolean)(flag) ) -> None', 
	argNames=('flag',),
)


# /usr/include/GL/gl.h 1363
glEnable = platform.createBaseFunction( 
	'glEnable', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glEnable( GLenum(cap) ) -> None', 
	argNames=('cap',),
)


# /usr/include/GL/gl.h 1364
glEnableClientState = platform.createBaseFunction( 
	'glEnableClientState', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glEnableClientState( GLenum(array) ) -> None', 
	argNames=('array',),
)


# /usr/include/GL/gl.h 1365
glEnd = platform.createBaseFunction( 
	'glEnd', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glEnd(  ) -> None', 
	argNames=(),
)


# /usr/include/GL/gl.h 1366
glEndList = platform.createBaseFunction( 
	'glEndList', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glEndList(  ) -> None', 
	argNames=(),
)


# /usr/include/GL/gl.h 1367
glEvalCoord1d = platform.createBaseFunction( 
	'glEvalCoord1d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble],
	doc='glEvalCoord1d( GLdouble(u) ) -> None', 
	argNames=('u',),
)


# /usr/include/GL/gl.h 1368
glEvalCoord1dv = platform.createBaseFunction( 
	'glEvalCoord1dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glEvalCoord1dv( arrays.GLdoubleArray(u) ) -> None', 
	argNames=('u',),
)


# /usr/include/GL/gl.h 1369
glEvalCoord1f = platform.createBaseFunction( 
	'glEvalCoord1f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat],
	doc='glEvalCoord1f( GLfloat(u) ) -> None', 
	argNames=('u',),
)


# /usr/include/GL/gl.h 1370
glEvalCoord1fv = platform.createBaseFunction( 
	'glEvalCoord1fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glEvalCoord1fv( arrays.GLfloatArray(u) ) -> None', 
	argNames=('u',),
)


# /usr/include/GL/gl.h 1371
glEvalCoord2d = platform.createBaseFunction( 
	'glEvalCoord2d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble],
	doc='glEvalCoord2d( GLdouble(u), GLdouble(v) ) -> None', 
	argNames=('u', 'v'),
)


# /usr/include/GL/gl.h 1372
glEvalCoord2dv = platform.createBaseFunction( 
	'glEvalCoord2dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glEvalCoord2dv( arrays.GLdoubleArray(u) ) -> None', 
	argNames=('u',),
)


# /usr/include/GL/gl.h 1373
glEvalCoord2f = platform.createBaseFunction( 
	'glEvalCoord2f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat],
	doc='glEvalCoord2f( GLfloat(u), GLfloat(v) ) -> None', 
	argNames=('u', 'v'),
)


# /usr/include/GL/gl.h 1374
glEvalCoord2fv = platform.createBaseFunction( 
	'glEvalCoord2fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glEvalCoord2fv( arrays.GLfloatArray(u) ) -> None', 
	argNames=('u',),
)


# /usr/include/GL/gl.h 1375
glEvalMesh1 = platform.createBaseFunction( 
	'glEvalMesh1', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint,GLint],
	doc='glEvalMesh1( GLenum(mode), GLint(i1), GLint(i2) ) -> None', 
	argNames=('mode', 'i1', 'i2'),
)


# /usr/include/GL/gl.h 1376
glEvalMesh2 = platform.createBaseFunction( 
	'glEvalMesh2', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint,GLint,GLint,GLint],
	doc='glEvalMesh2( GLenum(mode), GLint(i1), GLint(i2), GLint(j1), GLint(j2) ) -> None', 
	argNames=('mode', 'i1', 'i2', 'j1', 'j2'),
)


# /usr/include/GL/gl.h 1377
glEvalPoint1 = platform.createBaseFunction( 
	'glEvalPoint1', dll=platform.GL, resultType=None, 
	argTypes=[GLint],
	doc='glEvalPoint1( GLint(i) ) -> None', 
	argNames=('i',),
)


# /usr/include/GL/gl.h 1378
glEvalPoint2 = platform.createBaseFunction( 
	'glEvalPoint2', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint],
	doc='glEvalPoint2( GLint(i), GLint(j) ) -> None', 
	argNames=('i', 'j'),
)


# /usr/include/GL/gl.h 1379
glFeedbackBuffer = platform.createBaseFunction( 
	'glFeedbackBuffer', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei,GLenum,arrays.GLfloatArray],
	doc='glFeedbackBuffer( GLsizei(size), GLenum(type), arrays.GLfloatArray(buffer) ) -> None', 
	argNames=('size', 'type', 'buffer'),
)


# /usr/include/GL/gl.h 1380
glFinish = platform.createBaseFunction( 
	'glFinish', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glFinish(  ) -> None', 
	argNames=(),
)


# /usr/include/GL/gl.h 1381
glFlush = platform.createBaseFunction( 
	'glFlush', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glFlush(  ) -> None', 
	argNames=(),
)


# /usr/include/GL/gl.h 1382
glFogf = platform.createBaseFunction( 
	'glFogf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLfloat],
	doc='glFogf( GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('pname', 'param'),
)


# /usr/include/GL/gl.h 1383
glFogfv = platform.createBaseFunction( 
	'glFogfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,arrays.GLfloatArray],
	doc='glFogfv( GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('pname', 'params'),
)


# /usr/include/GL/gl.h 1384
glFogi = platform.createBaseFunction( 
	'glFogi', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint],
	doc='glFogi( GLenum(pname), GLint(param) ) -> None', 
	argNames=('pname', 'param'),
)


# /usr/include/GL/gl.h 1385
glFogiv = platform.createBaseFunction( 
	'glFogiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,arrays.GLintArray],
	doc='glFogiv( GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('pname', 'params'),
)


# /usr/include/GL/gl.h 1386
glFrontFace = platform.createBaseFunction( 
	'glFrontFace', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glFrontFace( GLenum(mode) ) -> None', 
	argNames=('mode',),
)


# /usr/include/GL/gl.h 1387
glFrustum = platform.createBaseFunction( 
	'glFrustum', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble],
	doc='glFrustum( GLdouble(left), GLdouble(right), GLdouble(bottom), GLdouble(top), GLdouble(zNear), GLdouble(zFar) ) -> None', 
	argNames=('left', 'right', 'bottom', 'top', 'zNear', 'zFar'),
)


# /usr/include/GL/gl.h 1388
glGenLists = platform.createBaseFunction( 
	'glGenLists', dll=platform.GL, resultType=GLuint, 
	argTypes=[GLsizei],
	doc='glGenLists( GLsizei(range) ) -> GLuint', 
	argNames=('range',),
)


# /usr/include/GL/gl.h 1389
glGenTextures = platform.createBaseFunction( 
	'glGenTextures', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei,arrays.GLuintArray],
	doc='glGenTextures( GLsizei(n), arrays.GLuintArray(textures) ) -> None', 
	argNames=('n', 'textures'),
)


# /usr/include/GL/gl.h 1390
glGetBooleanv = platform.createBaseFunction( 
	'glGetBooleanv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,POINTER(GLboolean)],
	doc='glGetBooleanv( GLenum(pname), POINTER(GLboolean)(params) ) -> None', 
	argNames=('pname', 'params'),
)


# /usr/include/GL/gl.h 1391
glGetClipPlane = platform.createBaseFunction( 
	'glGetClipPlane', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,arrays.GLdoubleArray],
	doc='glGetClipPlane( GLenum(plane), arrays.GLdoubleArray(equation) ) -> None', 
	argNames=('plane', 'equation'),
)


# /usr/include/GL/gl.h 1392
glGetDoublev = platform.createBaseFunction( 
	'glGetDoublev', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,arrays.GLdoubleArray],
	doc='glGetDoublev( GLenum(pname), arrays.GLdoubleArray(params) ) -> None', 
	argNames=('pname', 'params'),
)


# /usr/include/GL/gl.h 1393
glGetError = platform.createBaseFunction( 
	'glGetError', dll=platform.GL, resultType=GLenum, 
	argTypes=[],
	doc='glGetError(  ) -> GLenum', 
	argNames=(),
)


# /usr/include/GL/gl.h 1394
glGetFloatv = platform.createBaseFunction( 
	'glGetFloatv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,arrays.GLfloatArray],
	doc='glGetFloatv( GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('pname', 'params'),
)


# /usr/include/GL/gl.h 1395
glGetIntegerv = platform.createBaseFunction( 
	'glGetIntegerv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,arrays.GLintArray],
	doc='glGetIntegerv( GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('pname', 'params'),
)


# /usr/include/GL/gl.h 1396
glGetLightfv = platform.createBaseFunction( 
	'glGetLightfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLfloatArray],
	doc='glGetLightfv( GLenum(light), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('light', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1397
glGetLightiv = platform.createBaseFunction( 
	'glGetLightiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLintArray],
	doc='glGetLightiv( GLenum(light), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('light', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1398
glGetMapdv = platform.createBaseFunction( 
	'glGetMapdv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLdoubleArray],
	doc='glGetMapdv( GLenum(target), GLenum(query), arrays.GLdoubleArray(v) ) -> None', 
	argNames=('target', 'query', 'v'),
)


# /usr/include/GL/gl.h 1399
glGetMapfv = platform.createBaseFunction( 
	'glGetMapfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLfloatArray],
	doc='glGetMapfv( GLenum(target), GLenum(query), arrays.GLfloatArray(v) ) -> None', 
	argNames=('target', 'query', 'v'),
)


# /usr/include/GL/gl.h 1400
glGetMapiv = platform.createBaseFunction( 
	'glGetMapiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLintArray],
	doc='glGetMapiv( GLenum(target), GLenum(query), arrays.GLintArray(v) ) -> None', 
	argNames=('target', 'query', 'v'),
)


# /usr/include/GL/gl.h 1401
glGetMaterialfv = platform.createBaseFunction( 
	'glGetMaterialfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLfloatArray],
	doc='glGetMaterialfv( GLenum(face), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('face', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1402
glGetMaterialiv = platform.createBaseFunction( 
	'glGetMaterialiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLintArray],
	doc='glGetMaterialiv( GLenum(face), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('face', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1403
glGetPixelMapfv = platform.createBaseFunction( 
	'glGetPixelMapfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,arrays.GLfloatArray],
	doc='glGetPixelMapfv( GLenum(map), arrays.GLfloatArray(values) ) -> None', 
	argNames=('map', 'values'),
)


# /usr/include/GL/gl.h 1404
glGetPixelMapuiv = platform.createBaseFunction( 
	'glGetPixelMapuiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,arrays.GLuintArray],
	doc='glGetPixelMapuiv( GLenum(map), arrays.GLuintArray(values) ) -> None', 
	argNames=('map', 'values'),
)


# /usr/include/GL/gl.h 1405
glGetPixelMapusv = platform.createBaseFunction( 
	'glGetPixelMapusv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,arrays.GLushortArray],
	doc='glGetPixelMapusv( GLenum(map), arrays.GLushortArray(values) ) -> None', 
	argNames=('map', 'values'),
)


# /usr/include/GL/gl.h 1406
glGetPointerv = platform.createBaseFunction( 
	'glGetPointerv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,POINTER(POINTER(GLvoid))],
	doc='glGetPointerv( GLenum(pname), POINTER(POINTER(GLvoid))(params) ) -> None', 
	argNames=('pname', 'params'),
)


# /usr/include/GL/gl.h 1407
glGetPolygonStipple = platform.createBaseFunction( 
	'glGetPolygonStipple', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLubyteArray],
	doc='glGetPolygonStipple( arrays.GLubyteArray(mask) ) -> None', 
	argNames=('mask',),
)


# /usr/include/GL/gl.h 1408
glGetString = platform.createBaseFunction( 
	'glGetString', dll=platform.GL, resultType=POINTER(GLubyte), 
	argTypes=[GLenum],
	doc='glGetString( GLenum(name) ) -> POINTER(GLubyte)', 
	argNames=('name',),
)


# /usr/include/GL/gl.h 1409
glGetTexEnvfv = platform.createBaseFunction( 
	'glGetTexEnvfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLfloatArray],
	doc='glGetTexEnvfv( GLenum(target), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1410
glGetTexEnviv = platform.createBaseFunction( 
	'glGetTexEnviv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLintArray],
	doc='glGetTexEnviv( GLenum(target), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1411
glGetTexGendv = platform.createBaseFunction( 
	'glGetTexGendv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLdoubleArray],
	doc='glGetTexGendv( GLenum(coord), GLenum(pname), arrays.GLdoubleArray(params) ) -> None', 
	argNames=('coord', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1412
glGetTexGenfv = platform.createBaseFunction( 
	'glGetTexGenfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLfloatArray],
	doc='glGetTexGenfv( GLenum(coord), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('coord', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1413
glGetTexGeniv = platform.createBaseFunction( 
	'glGetTexGeniv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLintArray],
	doc='glGetTexGeniv( GLenum(coord), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('coord', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1414
glGetTexImage = platform.createBaseFunction( 
	'glGetTexImage', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint,GLenum,GLenum,POINTER(GLvoid)],
	doc='glGetTexImage( GLenum(target), GLint(level), GLenum(format), GLenum(type), POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('target', 'level', 'format', 'type', 'pixels'),
)


# /usr/include/GL/gl.h 1415
glGetTexLevelParameterfv = platform.createBaseFunction( 
	'glGetTexLevelParameterfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint,GLenum,arrays.GLfloatArray],
	doc='glGetTexLevelParameterfv( GLenum(target), GLint(level), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'level', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1416
glGetTexLevelParameteriv = platform.createBaseFunction( 
	'glGetTexLevelParameteriv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint,GLenum,arrays.GLintArray],
	doc='glGetTexLevelParameteriv( GLenum(target), GLint(level), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'level', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1417
glGetTexParameterfv = platform.createBaseFunction( 
	'glGetTexParameterfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLfloatArray],
	doc='glGetTexParameterfv( GLenum(target), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1418
glGetTexParameteriv = platform.createBaseFunction( 
	'glGetTexParameteriv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLintArray],
	doc='glGetTexParameteriv( GLenum(target), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1419
glHint = platform.createBaseFunction( 
	'glHint', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum],
	doc='glHint( GLenum(target), GLenum(mode) ) -> None', 
	argNames=('target', 'mode'),
)


# /usr/include/GL/gl.h 1420
glIndexMask = platform.createBaseFunction( 
	'glIndexMask', dll=platform.GL, resultType=None, 
	argTypes=[GLuint],
	doc='glIndexMask( GLuint(mask) ) -> None', 
	argNames=('mask',),
)


# /usr/include/GL/gl.h 1421
glIndexPointer = platform.createBaseFunction( 
	'glIndexPointer', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLsizei,POINTER(GLvoid)],
	doc='glIndexPointer( GLenum(type), GLsizei(stride), POINTER(GLvoid)(pointer) ) -> None', 
	argNames=('type', 'stride', 'pointer'),
)


# /usr/include/GL/gl.h 1422
glIndexd = platform.createBaseFunction( 
	'glIndexd', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble],
	doc='glIndexd( GLdouble(c) ) -> None', 
	argNames=('c',),
)


# /usr/include/GL/gl.h 1423
glIndexdv = platform.createBaseFunction( 
	'glIndexdv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glIndexdv( arrays.GLdoubleArray(c) ) -> None', 
	argNames=('c',),
)


# /usr/include/GL/gl.h 1424
glIndexf = platform.createBaseFunction( 
	'glIndexf', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat],
	doc='glIndexf( GLfloat(c) ) -> None', 
	argNames=('c',),
)


# /usr/include/GL/gl.h 1425
glIndexfv = platform.createBaseFunction( 
	'glIndexfv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glIndexfv( arrays.GLfloatArray(c) ) -> None', 
	argNames=('c',),
)


# /usr/include/GL/gl.h 1426
glIndexi = platform.createBaseFunction( 
	'glIndexi', dll=platform.GL, resultType=None, 
	argTypes=[GLint],
	doc='glIndexi( GLint(c) ) -> None', 
	argNames=('c',),
)


# /usr/include/GL/gl.h 1427
glIndexiv = platform.createBaseFunction( 
	'glIndexiv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glIndexiv( arrays.GLintArray(c) ) -> None', 
	argNames=('c',),
)


# /usr/include/GL/gl.h 1428
glIndexs = platform.createBaseFunction( 
	'glIndexs', dll=platform.GL, resultType=None, 
	argTypes=[GLshort],
	doc='glIndexs( GLshort(c) ) -> None', 
	argNames=('c',),
)


# /usr/include/GL/gl.h 1429
glIndexsv = platform.createBaseFunction( 
	'glIndexsv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glIndexsv( arrays.GLshortArray(c) ) -> None', 
	argNames=('c',),
)


# /usr/include/GL/gl.h 1430
glIndexub = platform.createBaseFunction( 
	'glIndexub', dll=platform.GL, resultType=None, 
	argTypes=[GLubyte],
	doc='glIndexub( GLubyte(c) ) -> None', 
	argNames=('c',),
)


# /usr/include/GL/gl.h 1431
glIndexubv = platform.createBaseFunction( 
	'glIndexubv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLubyteArray],
	doc='glIndexubv( arrays.GLubyteArray(c) ) -> None', 
	argNames=('c',),
)


# /usr/include/GL/gl.h 1432
glInitNames = platform.createBaseFunction( 
	'glInitNames', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glInitNames(  ) -> None', 
	argNames=(),
)


# /usr/include/GL/gl.h 1433
glInterleavedArrays = platform.createBaseFunction( 
	'glInterleavedArrays', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLsizei,POINTER(GLvoid)],
	doc='glInterleavedArrays( GLenum(format), GLsizei(stride), POINTER(GLvoid)(pointer) ) -> None', 
	argNames=('format', 'stride', 'pointer'),
)


# /usr/include/GL/gl.h 1434
glIsEnabled = platform.createBaseFunction( 
	'glIsEnabled', dll=platform.GL, resultType=GLboolean, 
	argTypes=[GLenum],
	doc='glIsEnabled( GLenum(cap) ) -> GLboolean', 
	argNames=('cap',),
)


# /usr/include/GL/gl.h 1435
glIsList = platform.createBaseFunction( 
	'glIsList', dll=platform.GL, resultType=GLboolean, 
	argTypes=[GLuint],
	doc='glIsList( GLuint(list) ) -> GLboolean', 
	argNames=('list',),
)


# /usr/include/GL/gl.h 1436
glIsTexture = platform.createBaseFunction( 
	'glIsTexture', dll=platform.GL, resultType=GLboolean, 
	argTypes=[GLuint],
	doc='glIsTexture( GLuint(texture) ) -> GLboolean', 
	argNames=('texture',),
)


# /usr/include/GL/gl.h 1437
glLightModelf = platform.createBaseFunction( 
	'glLightModelf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLfloat],
	doc='glLightModelf( GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('pname', 'param'),
)


# /usr/include/GL/gl.h 1438
glLightModelfv = platform.createBaseFunction( 
	'glLightModelfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,arrays.GLfloatArray],
	doc='glLightModelfv( GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('pname', 'params'),
)


# /usr/include/GL/gl.h 1439
glLightModeli = platform.createBaseFunction( 
	'glLightModeli', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint],
	doc='glLightModeli( GLenum(pname), GLint(param) ) -> None', 
	argNames=('pname', 'param'),
)


# /usr/include/GL/gl.h 1440
glLightModeliv = platform.createBaseFunction( 
	'glLightModeliv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,arrays.GLintArray],
	doc='glLightModeliv( GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('pname', 'params'),
)


# /usr/include/GL/gl.h 1441
glLightf = platform.createBaseFunction( 
	'glLightf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,GLfloat],
	doc='glLightf( GLenum(light), GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('light', 'pname', 'param'),
)


# /usr/include/GL/gl.h 1442
glLightfv = platform.createBaseFunction( 
	'glLightfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLfloatArray],
	doc='glLightfv( GLenum(light), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('light', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1443
glLighti = platform.createBaseFunction( 
	'glLighti', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,GLint],
	doc='glLighti( GLenum(light), GLenum(pname), GLint(param) ) -> None', 
	argNames=('light', 'pname', 'param'),
)


# /usr/include/GL/gl.h 1444
glLightiv = platform.createBaseFunction( 
	'glLightiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLintArray],
	doc='glLightiv( GLenum(light), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('light', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1445
glLineStipple = platform.createBaseFunction( 
	'glLineStipple', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLushort],
	doc='glLineStipple( GLint(factor), GLushort(pattern) ) -> None', 
	argNames=('factor', 'pattern'),
)


# /usr/include/GL/gl.h 1446
glLineWidth = platform.createBaseFunction( 
	'glLineWidth', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat],
	doc='glLineWidth( GLfloat(width) ) -> None', 
	argNames=('width',),
)


# /usr/include/GL/gl.h 1447
glListBase = platform.createBaseFunction( 
	'glListBase', dll=platform.GL, resultType=None, 
	argTypes=[GLuint],
	doc='glListBase( GLuint(base) ) -> None', 
	argNames=('base',),
)


# /usr/include/GL/gl.h 1448
glLoadIdentity = platform.createBaseFunction( 
	'glLoadIdentity', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glLoadIdentity(  ) -> None', 
	argNames=(),
)


# /usr/include/GL/gl.h 1449
glLoadMatrixd = platform.createBaseFunction( 
	'glLoadMatrixd', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glLoadMatrixd( arrays.GLdoubleArray(m) ) -> None', 
	argNames=('m',),
)


# /usr/include/GL/gl.h 1450
glLoadMatrixf = platform.createBaseFunction( 
	'glLoadMatrixf', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glLoadMatrixf( arrays.GLfloatArray(m) ) -> None', 
	argNames=('m',),
)


# /usr/include/GL/gl.h 1451
glLoadName = platform.createBaseFunction( 
	'glLoadName', dll=platform.GL, resultType=None, 
	argTypes=[GLuint],
	doc='glLoadName( GLuint(name) ) -> None', 
	argNames=('name',),
)


# /usr/include/GL/gl.h 1452
glLogicOp = platform.createBaseFunction( 
	'glLogicOp', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glLogicOp( GLenum(opcode) ) -> None', 
	argNames=('opcode',),
)


# /usr/include/GL/gl.h 1453
glMap1d = platform.createBaseFunction( 
	'glMap1d', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLdouble,GLdouble,GLint,GLint,arrays.GLdoubleArray],
	doc='glMap1d( GLenum(target), GLdouble(u1), GLdouble(u2), GLint(stride), GLint(order), arrays.GLdoubleArray(points) ) -> None', 
	argNames=('target', 'u1', 'u2', 'stride', 'order', 'points'),
)


# /usr/include/GL/gl.h 1454
glMap1f = platform.createBaseFunction( 
	'glMap1f', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLfloat,GLfloat,GLint,GLint,arrays.GLfloatArray],
	doc='glMap1f( GLenum(target), GLfloat(u1), GLfloat(u2), GLint(stride), GLint(order), arrays.GLfloatArray(points) ) -> None', 
	argNames=('target', 'u1', 'u2', 'stride', 'order', 'points'),
)


# /usr/include/GL/gl.h 1455
glMap2d = platform.createBaseFunction( 
	'glMap2d', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLdouble,GLdouble,GLint,GLint,GLdouble,GLdouble,GLint,GLint,arrays.GLdoubleArray],
	doc='glMap2d( GLenum(target), GLdouble(u1), GLdouble(u2), GLint(ustride), GLint(uorder), GLdouble(v1), GLdouble(v2), GLint(vstride), GLint(vorder), arrays.GLdoubleArray(points) ) -> None', 
	argNames=('target', 'u1', 'u2', 'ustride', 'uorder', 'v1', 'v2', 'vstride', 'vorder', 'points'),
)


# /usr/include/GL/gl.h 1456
glMap2f = platform.createBaseFunction( 
	'glMap2f', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLfloat,GLfloat,GLint,GLint,GLfloat,GLfloat,GLint,GLint,arrays.GLfloatArray],
	doc='glMap2f( GLenum(target), GLfloat(u1), GLfloat(u2), GLint(ustride), GLint(uorder), GLfloat(v1), GLfloat(v2), GLint(vstride), GLint(vorder), arrays.GLfloatArray(points) ) -> None', 
	argNames=('target', 'u1', 'u2', 'ustride', 'uorder', 'v1', 'v2', 'vstride', 'vorder', 'points'),
)


# /usr/include/GL/gl.h 1457
glMapGrid1d = platform.createBaseFunction( 
	'glMapGrid1d', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLdouble,GLdouble],
	doc='glMapGrid1d( GLint(un), GLdouble(u1), GLdouble(u2) ) -> None', 
	argNames=('un', 'u1', 'u2'),
)


# /usr/include/GL/gl.h 1458
glMapGrid1f = platform.createBaseFunction( 
	'glMapGrid1f', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLfloat,GLfloat],
	doc='glMapGrid1f( GLint(un), GLfloat(u1), GLfloat(u2) ) -> None', 
	argNames=('un', 'u1', 'u2'),
)


# /usr/include/GL/gl.h 1459
glMapGrid2d = platform.createBaseFunction( 
	'glMapGrid2d', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLdouble,GLdouble,GLint,GLdouble,GLdouble],
	doc='glMapGrid2d( GLint(un), GLdouble(u1), GLdouble(u2), GLint(vn), GLdouble(v1), GLdouble(v2) ) -> None', 
	argNames=('un', 'u1', 'u2', 'vn', 'v1', 'v2'),
)


# /usr/include/GL/gl.h 1460
glMapGrid2f = platform.createBaseFunction( 
	'glMapGrid2f', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLfloat,GLfloat,GLint,GLfloat,GLfloat],
	doc='glMapGrid2f( GLint(un), GLfloat(u1), GLfloat(u2), GLint(vn), GLfloat(v1), GLfloat(v2) ) -> None', 
	argNames=('un', 'u1', 'u2', 'vn', 'v1', 'v2'),
)


# /usr/include/GL/gl.h 1461
glMaterialf = platform.createBaseFunction( 
	'glMaterialf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,GLfloat],
	doc='glMaterialf( GLenum(face), GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('face', 'pname', 'param'),
)


# /usr/include/GL/gl.h 1462
glMaterialfv = platform.createBaseFunction( 
	'glMaterialfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLfloatArray],
	doc='glMaterialfv( GLenum(face), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('face', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1463
glMateriali = platform.createBaseFunction( 
	'glMateriali', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,GLint],
	doc='glMateriali( GLenum(face), GLenum(pname), GLint(param) ) -> None', 
	argNames=('face', 'pname', 'param'),
)


# /usr/include/GL/gl.h 1464
glMaterialiv = platform.createBaseFunction( 
	'glMaterialiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLintArray],
	doc='glMaterialiv( GLenum(face), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('face', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1465
glMatrixMode = platform.createBaseFunction( 
	'glMatrixMode', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glMatrixMode( GLenum(mode) ) -> None', 
	argNames=('mode',),
)


# /usr/include/GL/gl.h 1466
glMultMatrixd = platform.createBaseFunction( 
	'glMultMatrixd', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glMultMatrixd( arrays.GLdoubleArray(m) ) -> None', 
	argNames=('m',),
)


# /usr/include/GL/gl.h 1467
glMultMatrixf = platform.createBaseFunction( 
	'glMultMatrixf', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glMultMatrixf( arrays.GLfloatArray(m) ) -> None', 
	argNames=('m',),
)


# /usr/include/GL/gl.h 1468
glNewList = platform.createBaseFunction( 
	'glNewList', dll=platform.GL, resultType=None, 
	argTypes=[GLuint,GLenum],
	doc='glNewList( GLuint(list), GLenum(mode) ) -> None', 
	argNames=('list', 'mode'),
)


# /usr/include/GL/gl.h 1469
glNormal3b = platform.createBaseFunction( 
	'glNormal3b', dll=platform.GL, resultType=None, 
	argTypes=[GLbyte,GLbyte,GLbyte],
	doc='glNormal3b( GLbyte(nx), GLbyte(ny), GLbyte(nz) ) -> None', 
	argNames=('nx', 'ny', 'nz'),
)


# /usr/include/GL/gl.h 1470
glNormal3bv = platform.createBaseFunction( 
	'glNormal3bv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLbyteArray],
	doc='glNormal3bv( arrays.GLbyteArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1471
glNormal3d = platform.createBaseFunction( 
	'glNormal3d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble,GLdouble],
	doc='glNormal3d( GLdouble(nx), GLdouble(ny), GLdouble(nz) ) -> None', 
	argNames=('nx', 'ny', 'nz'),
)


# /usr/include/GL/gl.h 1472
glNormal3dv = platform.createBaseFunction( 
	'glNormal3dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glNormal3dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1473
glNormal3f = platform.createBaseFunction( 
	'glNormal3f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat,GLfloat],
	doc='glNormal3f( GLfloat(nx), GLfloat(ny), GLfloat(nz) ) -> None', 
	argNames=('nx', 'ny', 'nz'),
)


# /usr/include/GL/gl.h 1474
glNormal3fv = platform.createBaseFunction( 
	'glNormal3fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glNormal3fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1475
glNormal3i = platform.createBaseFunction( 
	'glNormal3i', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint,GLint],
	doc='glNormal3i( GLint(nx), GLint(ny), GLint(nz) ) -> None', 
	argNames=('nx', 'ny', 'nz'),
)


# /usr/include/GL/gl.h 1476
glNormal3iv = platform.createBaseFunction( 
	'glNormal3iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glNormal3iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1477
glNormal3s = platform.createBaseFunction( 
	'glNormal3s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort,GLshort,GLshort],
	doc='glNormal3s( GLshort(nx), GLshort(ny), GLshort(nz) ) -> None', 
	argNames=('nx', 'ny', 'nz'),
)


# /usr/include/GL/gl.h 1478
glNormal3sv = platform.createBaseFunction( 
	'glNormal3sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glNormal3sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1479
glNormalPointer = platform.createBaseFunction( 
	'glNormalPointer', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLsizei,POINTER(GLvoid)],
	doc='glNormalPointer( GLenum(type), GLsizei(stride), POINTER(GLvoid)(pointer) ) -> None', 
	argNames=('type', 'stride', 'pointer'),
)


# /usr/include/GL/gl.h 1480
glOrtho = platform.createBaseFunction( 
	'glOrtho', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble],
	doc='glOrtho( GLdouble(left), GLdouble(right), GLdouble(bottom), GLdouble(top), GLdouble(zNear), GLdouble(zFar) ) -> None', 
	argNames=('left', 'right', 'bottom', 'top', 'zNear', 'zFar'),
)


# /usr/include/GL/gl.h 1481
glPassThrough = platform.createBaseFunction( 
	'glPassThrough', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat],
	doc='glPassThrough( GLfloat(token) ) -> None', 
	argNames=('token',),
)


# /usr/include/GL/gl.h 1482
glPixelMapfv = platform.createBaseFunction( 
	'glPixelMapfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLsizei,arrays.GLfloatArray],
	doc='glPixelMapfv( GLenum(map), GLsizei(mapsize), arrays.GLfloatArray(values) ) -> None', 
	argNames=('map', 'mapsize', 'values'),
)


# /usr/include/GL/gl.h 1483
glPixelMapuiv = platform.createBaseFunction( 
	'glPixelMapuiv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLsizei,arrays.GLuintArray],
	doc='glPixelMapuiv( GLenum(map), GLsizei(mapsize), arrays.GLuintArray(values) ) -> None', 
	argNames=('map', 'mapsize', 'values'),
)


# /usr/include/GL/gl.h 1484
glPixelMapusv = platform.createBaseFunction( 
	'glPixelMapusv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLsizei,arrays.GLushortArray],
	doc='glPixelMapusv( GLenum(map), GLsizei(mapsize), arrays.GLushortArray(values) ) -> None', 
	argNames=('map', 'mapsize', 'values'),
)


# /usr/include/GL/gl.h 1485
glPixelStoref = platform.createBaseFunction( 
	'glPixelStoref', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLfloat],
	doc='glPixelStoref( GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('pname', 'param'),
)


# /usr/include/GL/gl.h 1486
glPixelStorei = platform.createBaseFunction( 
	'glPixelStorei', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint],
	doc='glPixelStorei( GLenum(pname), GLint(param) ) -> None', 
	argNames=('pname', 'param'),
)


# /usr/include/GL/gl.h 1487
glPixelTransferf = platform.createBaseFunction( 
	'glPixelTransferf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLfloat],
	doc='glPixelTransferf( GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('pname', 'param'),
)


# /usr/include/GL/gl.h 1488
glPixelTransferi = platform.createBaseFunction( 
	'glPixelTransferi', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint],
	doc='glPixelTransferi( GLenum(pname), GLint(param) ) -> None', 
	argNames=('pname', 'param'),
)


# /usr/include/GL/gl.h 1489
glPixelZoom = platform.createBaseFunction( 
	'glPixelZoom', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat],
	doc='glPixelZoom( GLfloat(xfactor), GLfloat(yfactor) ) -> None', 
	argNames=('xfactor', 'yfactor'),
)


# /usr/include/GL/gl.h 1490
glPointSize = platform.createBaseFunction( 
	'glPointSize', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat],
	doc='glPointSize( GLfloat(size) ) -> None', 
	argNames=('size',),
)


# /usr/include/GL/gl.h 1491
glPolygonMode = platform.createBaseFunction( 
	'glPolygonMode', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum],
	doc='glPolygonMode( GLenum(face), GLenum(mode) ) -> None', 
	argNames=('face', 'mode'),
)


# /usr/include/GL/gl.h 1492
glPolygonOffset = platform.createBaseFunction( 
	'glPolygonOffset', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat],
	doc='glPolygonOffset( GLfloat(factor), GLfloat(units) ) -> None', 
	argNames=('factor', 'units'),
)


# /usr/include/GL/gl.h 1493
glPolygonStipple = platform.createBaseFunction( 
	'glPolygonStipple', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLubyteArray],
	doc='glPolygonStipple( arrays.GLubyteArray(mask) ) -> None', 
	argNames=('mask',),
)


# /usr/include/GL/gl.h 1494
glPopAttrib = platform.createBaseFunction( 
	'glPopAttrib', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glPopAttrib(  ) -> None', 
	argNames=(),
)


# /usr/include/GL/gl.h 1495
glPopClientAttrib = platform.createBaseFunction( 
	'glPopClientAttrib', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glPopClientAttrib(  ) -> None', 
	argNames=(),
)


# /usr/include/GL/gl.h 1496
glPopMatrix = platform.createBaseFunction( 
	'glPopMatrix', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glPopMatrix(  ) -> None', 
	argNames=(),
)


# /usr/include/GL/gl.h 1497
glPopName = platform.createBaseFunction( 
	'glPopName', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glPopName(  ) -> None', 
	argNames=(),
)


# /usr/include/GL/gl.h 1498
glPrioritizeTextures = platform.createBaseFunction( 
	'glPrioritizeTextures', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei,arrays.GLuintArray,arrays.GLclampfArray],
	doc='glPrioritizeTextures( GLsizei(n), arrays.GLuintArray(textures), arrays.GLclampfArray(priorities) ) -> None', 
	argNames=('n', 'textures', 'priorities'),
)


# /usr/include/GL/gl.h 1499
glPushAttrib = platform.createBaseFunction( 
	'glPushAttrib', dll=platform.GL, resultType=None, 
	argTypes=[GLbitfield],
	doc='glPushAttrib( GLbitfield(mask) ) -> None', 
	argNames=('mask',),
)


# /usr/include/GL/gl.h 1500
glPushClientAttrib = platform.createBaseFunction( 
	'glPushClientAttrib', dll=platform.GL, resultType=None, 
	argTypes=[GLbitfield],
	doc='glPushClientAttrib( GLbitfield(mask) ) -> None', 
	argNames=('mask',),
)


# /usr/include/GL/gl.h 1501
glPushMatrix = platform.createBaseFunction( 
	'glPushMatrix', dll=platform.GL, resultType=None, 
	argTypes=[],
	doc='glPushMatrix(  ) -> None', 
	argNames=(),
)


# /usr/include/GL/gl.h 1502
glPushName = platform.createBaseFunction( 
	'glPushName', dll=platform.GL, resultType=None, 
	argTypes=[GLuint],
	doc='glPushName( GLuint(name) ) -> None', 
	argNames=('name',),
)


# /usr/include/GL/gl.h 1503
glRasterPos2d = platform.createBaseFunction( 
	'glRasterPos2d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble],
	doc='glRasterPos2d( GLdouble(x), GLdouble(y) ) -> None', 
	argNames=('x', 'y'),
)


# /usr/include/GL/gl.h 1504
glRasterPos2dv = platform.createBaseFunction( 
	'glRasterPos2dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glRasterPos2dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1505
glRasterPos2f = platform.createBaseFunction( 
	'glRasterPos2f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat],
	doc='glRasterPos2f( GLfloat(x), GLfloat(y) ) -> None', 
	argNames=('x', 'y'),
)


# /usr/include/GL/gl.h 1506
glRasterPos2fv = platform.createBaseFunction( 
	'glRasterPos2fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glRasterPos2fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1507
glRasterPos2i = platform.createBaseFunction( 
	'glRasterPos2i', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint],
	doc='glRasterPos2i( GLint(x), GLint(y) ) -> None', 
	argNames=('x', 'y'),
)


# /usr/include/GL/gl.h 1508
glRasterPos2iv = platform.createBaseFunction( 
	'glRasterPos2iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glRasterPos2iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1509
glRasterPos2s = platform.createBaseFunction( 
	'glRasterPos2s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort,GLshort],
	doc='glRasterPos2s( GLshort(x), GLshort(y) ) -> None', 
	argNames=('x', 'y'),
)


# /usr/include/GL/gl.h 1510
glRasterPos2sv = platform.createBaseFunction( 
	'glRasterPos2sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glRasterPos2sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1511
glRasterPos3d = platform.createBaseFunction( 
	'glRasterPos3d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble,GLdouble],
	doc='glRasterPos3d( GLdouble(x), GLdouble(y), GLdouble(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)


# /usr/include/GL/gl.h 1512
glRasterPos3dv = platform.createBaseFunction( 
	'glRasterPos3dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glRasterPos3dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1513
glRasterPos3f = platform.createBaseFunction( 
	'glRasterPos3f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat,GLfloat],
	doc='glRasterPos3f( GLfloat(x), GLfloat(y), GLfloat(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)


# /usr/include/GL/gl.h 1514
glRasterPos3fv = platform.createBaseFunction( 
	'glRasterPos3fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glRasterPos3fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1515
glRasterPos3i = platform.createBaseFunction( 
	'glRasterPos3i', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint,GLint],
	doc='glRasterPos3i( GLint(x), GLint(y), GLint(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)


# /usr/include/GL/gl.h 1516
glRasterPos3iv = platform.createBaseFunction( 
	'glRasterPos3iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glRasterPos3iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1517
glRasterPos3s = platform.createBaseFunction( 
	'glRasterPos3s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort,GLshort,GLshort],
	doc='glRasterPos3s( GLshort(x), GLshort(y), GLshort(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)


# /usr/include/GL/gl.h 1518
glRasterPos3sv = platform.createBaseFunction( 
	'glRasterPos3sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glRasterPos3sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1519
glRasterPos4d = platform.createBaseFunction( 
	'glRasterPos4d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble,GLdouble,GLdouble],
	doc='glRasterPos4d( GLdouble(x), GLdouble(y), GLdouble(z), GLdouble(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)


# /usr/include/GL/gl.h 1520
glRasterPos4dv = platform.createBaseFunction( 
	'glRasterPos4dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glRasterPos4dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1521
glRasterPos4f = platform.createBaseFunction( 
	'glRasterPos4f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat,GLfloat,GLfloat],
	doc='glRasterPos4f( GLfloat(x), GLfloat(y), GLfloat(z), GLfloat(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)


# /usr/include/GL/gl.h 1522
glRasterPos4fv = platform.createBaseFunction( 
	'glRasterPos4fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glRasterPos4fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1523
glRasterPos4i = platform.createBaseFunction( 
	'glRasterPos4i', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint,GLint,GLint],
	doc='glRasterPos4i( GLint(x), GLint(y), GLint(z), GLint(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)


# /usr/include/GL/gl.h 1524
glRasterPos4iv = platform.createBaseFunction( 
	'glRasterPos4iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glRasterPos4iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1525
glRasterPos4s = platform.createBaseFunction( 
	'glRasterPos4s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort,GLshort,GLshort,GLshort],
	doc='glRasterPos4s( GLshort(x), GLshort(y), GLshort(z), GLshort(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)


# /usr/include/GL/gl.h 1526
glRasterPos4sv = platform.createBaseFunction( 
	'glRasterPos4sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glRasterPos4sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1527
glReadBuffer = platform.createBaseFunction( 
	'glReadBuffer', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glReadBuffer( GLenum(mode) ) -> None', 
	argNames=('mode',),
)


# /usr/include/GL/gl.h 1528
glReadPixels = platform.createBaseFunction( 
	'glReadPixels', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,POINTER(GLvoid)],
	doc='glReadPixels( GLint(x), GLint(y), GLsizei(width), GLsizei(height), GLenum(format), GLenum(type), POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('x', 'y', 'width', 'height', 'format', 'type', 'pixels'),
)


# /usr/include/GL/gl.h 1529
glRectd = platform.createBaseFunction( 
	'glRectd', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble,GLdouble,GLdouble],
	doc='glRectd( GLdouble(x1), GLdouble(y1), GLdouble(x2), GLdouble(y2) ) -> None', 
	argNames=('x1', 'y1', 'x2', 'y2'),
)


# /usr/include/GL/gl.h 1530
glRectdv = platform.createBaseFunction( 
	'glRectdv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray,arrays.GLdoubleArray],
	doc='glRectdv( arrays.GLdoubleArray(v1), arrays.GLdoubleArray(v2) ) -> None', 
	argNames=('v1', 'v2'),
)


# /usr/include/GL/gl.h 1531
glRectf = platform.createBaseFunction( 
	'glRectf', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat,GLfloat,GLfloat],
	doc='glRectf( GLfloat(x1), GLfloat(y1), GLfloat(x2), GLfloat(y2) ) -> None', 
	argNames=('x1', 'y1', 'x2', 'y2'),
)


# /usr/include/GL/gl.h 1532
glRectfv = platform.createBaseFunction( 
	'glRectfv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray,arrays.GLfloatArray],
	doc='glRectfv( arrays.GLfloatArray(v1), arrays.GLfloatArray(v2) ) -> None', 
	argNames=('v1', 'v2'),
)


# /usr/include/GL/gl.h 1533
glRecti = platform.createBaseFunction( 
	'glRecti', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint,GLint,GLint],
	doc='glRecti( GLint(x1), GLint(y1), GLint(x2), GLint(y2) ) -> None', 
	argNames=('x1', 'y1', 'x2', 'y2'),
)


# /usr/include/GL/gl.h 1534
glRectiv = platform.createBaseFunction( 
	'glRectiv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray,arrays.GLintArray],
	doc='glRectiv( arrays.GLintArray(v1), arrays.GLintArray(v2) ) -> None', 
	argNames=('v1', 'v2'),
)


# /usr/include/GL/gl.h 1535
glRects = platform.createBaseFunction( 
	'glRects', dll=platform.GL, resultType=None, 
	argTypes=[GLshort,GLshort,GLshort,GLshort],
	doc='glRects( GLshort(x1), GLshort(y1), GLshort(x2), GLshort(y2) ) -> None', 
	argNames=('x1', 'y1', 'x2', 'y2'),
)


# /usr/include/GL/gl.h 1536
glRectsv = platform.createBaseFunction( 
	'glRectsv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray,arrays.GLshortArray],
	doc='glRectsv( arrays.GLshortArray(v1), arrays.GLshortArray(v2) ) -> None', 
	argNames=('v1', 'v2'),
)


# /usr/include/GL/gl.h 1537
glRenderMode = platform.createBaseFunction( 
	'glRenderMode', dll=platform.GL, resultType=GLint, 
	argTypes=[GLenum],
	doc='glRenderMode( GLenum(mode) ) -> GLint', 
	argNames=('mode',),
)


# /usr/include/GL/gl.h 1538
glRotated = platform.createBaseFunction( 
	'glRotated', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble,GLdouble,GLdouble],
	doc='glRotated( GLdouble(angle), GLdouble(x), GLdouble(y), GLdouble(z) ) -> None', 
	argNames=('angle', 'x', 'y', 'z'),
)


# /usr/include/GL/gl.h 1539
glRotatef = platform.createBaseFunction( 
	'glRotatef', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat,GLfloat,GLfloat],
	doc='glRotatef( GLfloat(angle), GLfloat(x), GLfloat(y), GLfloat(z) ) -> None', 
	argNames=('angle', 'x', 'y', 'z'),
)


# /usr/include/GL/gl.h 1540
glScaled = platform.createBaseFunction( 
	'glScaled', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble,GLdouble],
	doc='glScaled( GLdouble(x), GLdouble(y), GLdouble(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)


# /usr/include/GL/gl.h 1541
glScalef = platform.createBaseFunction( 
	'glScalef', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat,GLfloat],
	doc='glScalef( GLfloat(x), GLfloat(y), GLfloat(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)


# /usr/include/GL/gl.h 1542
glScissor = platform.createBaseFunction( 
	'glScissor', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint,GLsizei,GLsizei],
	doc='glScissor( GLint(x), GLint(y), GLsizei(width), GLsizei(height) ) -> None', 
	argNames=('x', 'y', 'width', 'height'),
)


# /usr/include/GL/gl.h 1543
glSelectBuffer = platform.createBaseFunction( 
	'glSelectBuffer', dll=platform.GL, resultType=None, 
	argTypes=[GLsizei,arrays.GLuintArray],
	doc='glSelectBuffer( GLsizei(size), arrays.GLuintArray(buffer) ) -> None', 
	argNames=('size', 'buffer'),
)


# /usr/include/GL/gl.h 1544
glShadeModel = platform.createBaseFunction( 
	'glShadeModel', dll=platform.GL, resultType=None, 
	argTypes=[GLenum],
	doc='glShadeModel( GLenum(mode) ) -> None', 
	argNames=('mode',),
)


# /usr/include/GL/gl.h 1545
glStencilFunc = platform.createBaseFunction( 
	'glStencilFunc', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint,GLuint],
	doc='glStencilFunc( GLenum(func), GLint(ref), GLuint(mask) ) -> None', 
	argNames=('func', 'ref', 'mask'),
)


# /usr/include/GL/gl.h 1546
glStencilMask = platform.createBaseFunction( 
	'glStencilMask', dll=platform.GL, resultType=None, 
	argTypes=[GLuint],
	doc='glStencilMask( GLuint(mask) ) -> None', 
	argNames=('mask',),
)


# /usr/include/GL/gl.h 1547
glStencilOp = platform.createBaseFunction( 
	'glStencilOp', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,GLenum],
	doc='glStencilOp( GLenum(fail), GLenum(zfail), GLenum(zpass) ) -> None', 
	argNames=('fail', 'zfail', 'zpass'),
)


# /usr/include/GL/gl.h 1548
glTexCoord1d = platform.createBaseFunction( 
	'glTexCoord1d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble],
	doc='glTexCoord1d( GLdouble(s) ) -> None', 
	argNames=('s',),
)


# /usr/include/GL/gl.h 1549
glTexCoord1dv = platform.createBaseFunction( 
	'glTexCoord1dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glTexCoord1dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1550
glTexCoord1f = platform.createBaseFunction( 
	'glTexCoord1f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat],
	doc='glTexCoord1f( GLfloat(s) ) -> None', 
	argNames=('s',),
)


# /usr/include/GL/gl.h 1551
glTexCoord1fv = platform.createBaseFunction( 
	'glTexCoord1fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glTexCoord1fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1552
glTexCoord1i = platform.createBaseFunction( 
	'glTexCoord1i', dll=platform.GL, resultType=None, 
	argTypes=[GLint],
	doc='glTexCoord1i( GLint(s) ) -> None', 
	argNames=('s',),
)


# /usr/include/GL/gl.h 1553
glTexCoord1iv = platform.createBaseFunction( 
	'glTexCoord1iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glTexCoord1iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1554
glTexCoord1s = platform.createBaseFunction( 
	'glTexCoord1s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort],
	doc='glTexCoord1s( GLshort(s) ) -> None', 
	argNames=('s',),
)


# /usr/include/GL/gl.h 1555
glTexCoord1sv = platform.createBaseFunction( 
	'glTexCoord1sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glTexCoord1sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1556
glTexCoord2d = platform.createBaseFunction( 
	'glTexCoord2d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble],
	doc='glTexCoord2d( GLdouble(s), GLdouble(t) ) -> None', 
	argNames=('s', 't'),
)


# /usr/include/GL/gl.h 1557
glTexCoord2dv = platform.createBaseFunction( 
	'glTexCoord2dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glTexCoord2dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1558
glTexCoord2f = platform.createBaseFunction( 
	'glTexCoord2f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat],
	doc='glTexCoord2f( GLfloat(s), GLfloat(t) ) -> None', 
	argNames=('s', 't'),
)


# /usr/include/GL/gl.h 1559
glTexCoord2fv = platform.createBaseFunction( 
	'glTexCoord2fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glTexCoord2fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1560
glTexCoord2i = platform.createBaseFunction( 
	'glTexCoord2i', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint],
	doc='glTexCoord2i( GLint(s), GLint(t) ) -> None', 
	argNames=('s', 't'),
)


# /usr/include/GL/gl.h 1561
glTexCoord2iv = platform.createBaseFunction( 
	'glTexCoord2iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glTexCoord2iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1562
glTexCoord2s = platform.createBaseFunction( 
	'glTexCoord2s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort,GLshort],
	doc='glTexCoord2s( GLshort(s), GLshort(t) ) -> None', 
	argNames=('s', 't'),
)


# /usr/include/GL/gl.h 1563
glTexCoord2sv = platform.createBaseFunction( 
	'glTexCoord2sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glTexCoord2sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1564
glTexCoord3d = platform.createBaseFunction( 
	'glTexCoord3d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble,GLdouble],
	doc='glTexCoord3d( GLdouble(s), GLdouble(t), GLdouble(r) ) -> None', 
	argNames=('s', 't', 'r'),
)


# /usr/include/GL/gl.h 1565
glTexCoord3dv = platform.createBaseFunction( 
	'glTexCoord3dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glTexCoord3dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1566
glTexCoord3f = platform.createBaseFunction( 
	'glTexCoord3f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat,GLfloat],
	doc='glTexCoord3f( GLfloat(s), GLfloat(t), GLfloat(r) ) -> None', 
	argNames=('s', 't', 'r'),
)


# /usr/include/GL/gl.h 1567
glTexCoord3fv = platform.createBaseFunction( 
	'glTexCoord3fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glTexCoord3fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1568
glTexCoord3i = platform.createBaseFunction( 
	'glTexCoord3i', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint,GLint],
	doc='glTexCoord3i( GLint(s), GLint(t), GLint(r) ) -> None', 
	argNames=('s', 't', 'r'),
)


# /usr/include/GL/gl.h 1569
glTexCoord3iv = platform.createBaseFunction( 
	'glTexCoord3iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glTexCoord3iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1570
glTexCoord3s = platform.createBaseFunction( 
	'glTexCoord3s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort,GLshort,GLshort],
	doc='glTexCoord3s( GLshort(s), GLshort(t), GLshort(r) ) -> None', 
	argNames=('s', 't', 'r'),
)


# /usr/include/GL/gl.h 1571
glTexCoord3sv = platform.createBaseFunction( 
	'glTexCoord3sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glTexCoord3sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1572
glTexCoord4d = platform.createBaseFunction( 
	'glTexCoord4d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble,GLdouble,GLdouble],
	doc='glTexCoord4d( GLdouble(s), GLdouble(t), GLdouble(r), GLdouble(q) ) -> None', 
	argNames=('s', 't', 'r', 'q'),
)


# /usr/include/GL/gl.h 1573
glTexCoord4dv = platform.createBaseFunction( 
	'glTexCoord4dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glTexCoord4dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1574
glTexCoord4f = platform.createBaseFunction( 
	'glTexCoord4f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat,GLfloat,GLfloat],
	doc='glTexCoord4f( GLfloat(s), GLfloat(t), GLfloat(r), GLfloat(q) ) -> None', 
	argNames=('s', 't', 'r', 'q'),
)


# /usr/include/GL/gl.h 1575
glTexCoord4fv = platform.createBaseFunction( 
	'glTexCoord4fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glTexCoord4fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1576
glTexCoord4i = platform.createBaseFunction( 
	'glTexCoord4i', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint,GLint,GLint],
	doc='glTexCoord4i( GLint(s), GLint(t), GLint(r), GLint(q) ) -> None', 
	argNames=('s', 't', 'r', 'q'),
)


# /usr/include/GL/gl.h 1577
glTexCoord4iv = platform.createBaseFunction( 
	'glTexCoord4iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glTexCoord4iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1578
glTexCoord4s = platform.createBaseFunction( 
	'glTexCoord4s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort,GLshort,GLshort,GLshort],
	doc='glTexCoord4s( GLshort(s), GLshort(t), GLshort(r), GLshort(q) ) -> None', 
	argNames=('s', 't', 'r', 'q'),
)


# /usr/include/GL/gl.h 1579
glTexCoord4sv = platform.createBaseFunction( 
	'glTexCoord4sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glTexCoord4sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1580
glTexCoordPointer = platform.createBaseFunction( 
	'glTexCoordPointer', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLenum,GLsizei,POINTER(GLvoid)],
	doc='glTexCoordPointer( GLint(size), GLenum(type), GLsizei(stride), POINTER(GLvoid)(pointer) ) -> None', 
	argNames=('size', 'type', 'stride', 'pointer'),
)


# /usr/include/GL/gl.h 1581
glTexEnvf = platform.createBaseFunction( 
	'glTexEnvf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,GLfloat],
	doc='glTexEnvf( GLenum(target), GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('target', 'pname', 'param'),
)


# /usr/include/GL/gl.h 1582
glTexEnvfv = platform.createBaseFunction( 
	'glTexEnvfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLfloatArray],
	doc='glTexEnvfv( GLenum(target), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1583
glTexEnvi = platform.createBaseFunction( 
	'glTexEnvi', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,GLint],
	doc='glTexEnvi( GLenum(target), GLenum(pname), GLint(param) ) -> None', 
	argNames=('target', 'pname', 'param'),
)


# /usr/include/GL/gl.h 1584
glTexEnviv = platform.createBaseFunction( 
	'glTexEnviv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLintArray],
	doc='glTexEnviv( GLenum(target), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1585
glTexGend = platform.createBaseFunction( 
	'glTexGend', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,GLdouble],
	doc='glTexGend( GLenum(coord), GLenum(pname), GLdouble(param) ) -> None', 
	argNames=('coord', 'pname', 'param'),
)


# /usr/include/GL/gl.h 1586
glTexGendv = platform.createBaseFunction( 
	'glTexGendv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLdoubleArray],
	doc='glTexGendv( GLenum(coord), GLenum(pname), arrays.GLdoubleArray(params) ) -> None', 
	argNames=('coord', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1587
glTexGenf = platform.createBaseFunction( 
	'glTexGenf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,GLfloat],
	doc='glTexGenf( GLenum(coord), GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('coord', 'pname', 'param'),
)


# /usr/include/GL/gl.h 1588
glTexGenfv = platform.createBaseFunction( 
	'glTexGenfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLfloatArray],
	doc='glTexGenfv( GLenum(coord), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('coord', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1589
glTexGeni = platform.createBaseFunction( 
	'glTexGeni', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,GLint],
	doc='glTexGeni( GLenum(coord), GLenum(pname), GLint(param) ) -> None', 
	argNames=('coord', 'pname', 'param'),
)


# /usr/include/GL/gl.h 1590
glTexGeniv = platform.createBaseFunction( 
	'glTexGeniv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLintArray],
	doc='glTexGeniv( GLenum(coord), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('coord', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1591
glTexImage1D = platform.createBaseFunction( 
	'glTexImage1D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint,GLint,GLsizei,GLint,GLenum,GLenum,POINTER(GLvoid)],
	doc='glTexImage1D( GLenum(target), GLint(level), GLint(internalformat), GLsizei(width), GLint(border), GLenum(format), GLenum(type), POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('target', 'level', 'internalformat', 'width', 'border', 'format', 'type', 'pixels'),
)


# /usr/include/GL/gl.h 1592
glTexImage2D = platform.createBaseFunction( 
	'glTexImage2D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint,GLint,GLsizei,GLsizei,GLint,GLenum,GLenum,POINTER(GLvoid)],
	doc='glTexImage2D( GLenum(target), GLint(level), GLint(internalformat), GLsizei(width), GLsizei(height), GLint(border), GLenum(format), GLenum(type), POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('target', 'level', 'internalformat', 'width', 'height', 'border', 'format', 'type', 'pixels'),
)


# /usr/include/GL/gl.h 1593
glTexParameterf = platform.createBaseFunction( 
	'glTexParameterf', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,GLfloat],
	doc='glTexParameterf( GLenum(target), GLenum(pname), GLfloat(param) ) -> None', 
	argNames=('target', 'pname', 'param'),
)


# /usr/include/GL/gl.h 1594
glTexParameterfv = platform.createBaseFunction( 
	'glTexParameterfv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLfloatArray],
	doc='glTexParameterfv( GLenum(target), GLenum(pname), arrays.GLfloatArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1595
glTexParameteri = platform.createBaseFunction( 
	'glTexParameteri', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,GLint],
	doc='glTexParameteri( GLenum(target), GLenum(pname), GLint(param) ) -> None', 
	argNames=('target', 'pname', 'param'),
)


# /usr/include/GL/gl.h 1596
glTexParameteriv = platform.createBaseFunction( 
	'glTexParameteriv', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLenum,arrays.GLintArray],
	doc='glTexParameteriv( GLenum(target), GLenum(pname), arrays.GLintArray(params) ) -> None', 
	argNames=('target', 'pname', 'params'),
)


# /usr/include/GL/gl.h 1597
glTexSubImage1D = platform.createBaseFunction( 
	'glTexSubImage1D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint,GLint,GLsizei,GLenum,GLenum,POINTER(GLvoid)],
	doc='glTexSubImage1D( GLenum(target), GLint(level), GLint(xoffset), GLsizei(width), GLenum(format), GLenum(type), POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('target', 'level', 'xoffset', 'width', 'format', 'type', 'pixels'),
)


# /usr/include/GL/gl.h 1598
glTexSubImage2D = platform.createBaseFunction( 
	'glTexSubImage2D', dll=platform.GL, resultType=None, 
	argTypes=[GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,POINTER(GLvoid)],
	doc='glTexSubImage2D( GLenum(target), GLint(level), GLint(xoffset), GLint(yoffset), GLsizei(width), GLsizei(height), GLenum(format), GLenum(type), POINTER(GLvoid)(pixels) ) -> None', 
	argNames=('target', 'level', 'xoffset', 'yoffset', 'width', 'height', 'format', 'type', 'pixels'),
)


# /usr/include/GL/gl.h 1599
glTranslated = platform.createBaseFunction( 
	'glTranslated', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble,GLdouble],
	doc='glTranslated( GLdouble(x), GLdouble(y), GLdouble(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)


# /usr/include/GL/gl.h 1600
glTranslatef = platform.createBaseFunction( 
	'glTranslatef', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat,GLfloat],
	doc='glTranslatef( GLfloat(x), GLfloat(y), GLfloat(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)


# /usr/include/GL/gl.h 1601
glVertex2d = platform.createBaseFunction( 
	'glVertex2d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble],
	doc='glVertex2d( GLdouble(x), GLdouble(y) ) -> None', 
	argNames=('x', 'y'),
)


# /usr/include/GL/gl.h 1602
glVertex2dv = platform.createBaseFunction( 
	'glVertex2dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glVertex2dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1603
glVertex2f = platform.createBaseFunction( 
	'glVertex2f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat],
	doc='glVertex2f( GLfloat(x), GLfloat(y) ) -> None', 
	argNames=('x', 'y'),
)


# /usr/include/GL/gl.h 1604
glVertex2fv = platform.createBaseFunction( 
	'glVertex2fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glVertex2fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1605
glVertex2i = platform.createBaseFunction( 
	'glVertex2i', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint],
	doc='glVertex2i( GLint(x), GLint(y) ) -> None', 
	argNames=('x', 'y'),
)


# /usr/include/GL/gl.h 1606
glVertex2iv = platform.createBaseFunction( 
	'glVertex2iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glVertex2iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1607
glVertex2s = platform.createBaseFunction( 
	'glVertex2s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort,GLshort],
	doc='glVertex2s( GLshort(x), GLshort(y) ) -> None', 
	argNames=('x', 'y'),
)


# /usr/include/GL/gl.h 1608
glVertex2sv = platform.createBaseFunction( 
	'glVertex2sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glVertex2sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1609
glVertex3d = platform.createBaseFunction( 
	'glVertex3d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble,GLdouble],
	doc='glVertex3d( GLdouble(x), GLdouble(y), GLdouble(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)


# /usr/include/GL/gl.h 1610
glVertex3dv = platform.createBaseFunction( 
	'glVertex3dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glVertex3dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1611
glVertex3f = platform.createBaseFunction( 
	'glVertex3f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat,GLfloat],
	doc='glVertex3f( GLfloat(x), GLfloat(y), GLfloat(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)


# /usr/include/GL/gl.h 1612
glVertex3fv = platform.createBaseFunction( 
	'glVertex3fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glVertex3fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1613
glVertex3i = platform.createBaseFunction( 
	'glVertex3i', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint,GLint],
	doc='glVertex3i( GLint(x), GLint(y), GLint(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)


# /usr/include/GL/gl.h 1614
glVertex3iv = platform.createBaseFunction( 
	'glVertex3iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glVertex3iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1615
glVertex3s = platform.createBaseFunction( 
	'glVertex3s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort,GLshort,GLshort],
	doc='glVertex3s( GLshort(x), GLshort(y), GLshort(z) ) -> None', 
	argNames=('x', 'y', 'z'),
)


# /usr/include/GL/gl.h 1616
glVertex3sv = platform.createBaseFunction( 
	'glVertex3sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glVertex3sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1617
glVertex4d = platform.createBaseFunction( 
	'glVertex4d', dll=platform.GL, resultType=None, 
	argTypes=[GLdouble,GLdouble,GLdouble,GLdouble],
	doc='glVertex4d( GLdouble(x), GLdouble(y), GLdouble(z), GLdouble(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)


# /usr/include/GL/gl.h 1618
glVertex4dv = platform.createBaseFunction( 
	'glVertex4dv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLdoubleArray],
	doc='glVertex4dv( arrays.GLdoubleArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1619
glVertex4f = platform.createBaseFunction( 
	'glVertex4f', dll=platform.GL, resultType=None, 
	argTypes=[GLfloat,GLfloat,GLfloat,GLfloat],
	doc='glVertex4f( GLfloat(x), GLfloat(y), GLfloat(z), GLfloat(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)


# /usr/include/GL/gl.h 1620
glVertex4fv = platform.createBaseFunction( 
	'glVertex4fv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLfloatArray],
	doc='glVertex4fv( arrays.GLfloatArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1621
glVertex4i = platform.createBaseFunction( 
	'glVertex4i', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint,GLint,GLint],
	doc='glVertex4i( GLint(x), GLint(y), GLint(z), GLint(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)


# /usr/include/GL/gl.h 1622
glVertex4iv = platform.createBaseFunction( 
	'glVertex4iv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLintArray],
	doc='glVertex4iv( arrays.GLintArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1623
glVertex4s = platform.createBaseFunction( 
	'glVertex4s', dll=platform.GL, resultType=None, 
	argTypes=[GLshort,GLshort,GLshort,GLshort],
	doc='glVertex4s( GLshort(x), GLshort(y), GLshort(z), GLshort(w) ) -> None', 
	argNames=('x', 'y', 'z', 'w'),
)


# /usr/include/GL/gl.h 1624
glVertex4sv = platform.createBaseFunction( 
	'glVertex4sv', dll=platform.GL, resultType=None, 
	argTypes=[arrays.GLshortArray],
	doc='glVertex4sv( arrays.GLshortArray(v) ) -> None', 
	argNames=('v',),
)


# /usr/include/GL/gl.h 1625
glVertexPointer = platform.createBaseFunction( 
	'glVertexPointer', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLenum,GLsizei,POINTER(GLvoid)],
	doc='glVertexPointer( GLint(size), GLenum(type), GLsizei(stride), POINTER(GLvoid)(pointer) ) -> None', 
	argNames=('size', 'type', 'stride', 'pointer'),
)


# /usr/include/GL/gl.h 1626
glViewport = platform.createBaseFunction( 
	'glViewport', dll=platform.GL, resultType=None, 
	argTypes=[GLint,GLint,GLsizei,GLsizei],
	doc='glViewport( GLint(x), GLint(y), GLsizei(width), GLsizei(height) ) -> None', 
	argNames=('x', 'y', 'width', 'height'),
)

__all__ = [
	'GL_1PASS_EXT',
	'GL_1PASS_SGIS',
	'GL_2D',
	'GL_2PASS_0_EXT',
	'GL_2PASS_0_SGIS',
	'GL_2PASS_1_EXT',
	'GL_2PASS_1_SGIS',
	'GL_2X_BIT_ATI',
	'GL_2_BYTES',
	'GL_3D',
	'GL_3D_COLOR',
	'GL_3D_COLOR_TEXTURE',
	'GL_3_BYTES',
	'GL_422_AVERAGE_EXT',
	'GL_422_EXT',
	'GL_422_REV_AVERAGE_EXT',
	'GL_422_REV_EXT',
	'GL_4D_COLOR_TEXTURE',
	'GL_4PASS_0_EXT',
	'GL_4PASS_0_SGIS',
	'GL_4PASS_1_EXT',
	'GL_4PASS_1_SGIS',
	'GL_4PASS_2_EXT',
	'GL_4PASS_2_SGIS',
	'GL_4PASS_3_EXT',
	'GL_4PASS_3_SGIS',
	'GL_4X_BIT_ATI',
	'GL_4_BYTES',
	'GL_8X_BIT_ATI',
	'GL_ABGR_EXT',
	'GL_ACCUM',
	'GL_ACCUM_ALPHA_BITS',
	'GL_ACCUM_BLUE_BITS',
	'GL_ACCUM_BUFFER_BIT',
	'GL_ACCUM_CLEAR_VALUE',
	'GL_ACCUM_GREEN_BITS',
	'GL_ACCUM_RED_BITS',
	'GL_ACTIVE_ATTRIBUTES',
	'GL_ACTIVE_ATTRIBUTE_MAX_LENGTH',
	'GL_ACTIVE_STENCIL_FACE_EXT',
	'GL_ACTIVE_TEXTURE',
	'GL_ACTIVE_TEXTURE_ARB',
	'GL_ACTIVE_UNIFORMS',
	'GL_ACTIVE_UNIFORM_MAX_LENGTH',
	'GL_ACTIVE_VERTEX_UNITS_ARB',
	'GL_ADD',
	'GL_ADD_ATI',
	'GL_ADD_SIGNED',
	'GL_ADD_SIGNED_ARB',
	'GL_ADD_SIGNED_EXT',
	'GL_ALIASED_LINE_WIDTH_RANGE',
	'GL_ALIASED_POINT_SIZE_RANGE',
	'GL_ALLOW_DRAW_FRG_HINT_PGI',
	'GL_ALLOW_DRAW_MEM_HINT_PGI',
	'GL_ALLOW_DRAW_OBJ_HINT_PGI',
	'GL_ALLOW_DRAW_WIN_HINT_PGI',
	'GL_ALL_ATTRIB_BITS',
	'GL_ALL_COMPLETED_NV',
	'GL_ALPHA',
	'GL_ALPHA12',
	'GL_ALPHA12_EXT',
	'GL_ALPHA16',
	'GL_ALPHA16F_ARB',
	'GL_ALPHA16_EXT',
	'GL_ALPHA32F_ARB',
	'GL_ALPHA4',
	'GL_ALPHA4_EXT',
	'GL_ALPHA8',
	'GL_ALPHA8_EXT',
	'GL_ALPHA_BIAS',
	'GL_ALPHA_BITS',
	'GL_ALPHA_FLOAT16_ATI',
	'GL_ALPHA_FLOAT32_ATI',
	'GL_ALPHA_MAX_CLAMP_INGR',
	'GL_ALPHA_MAX_SGIX',
	'GL_ALPHA_MIN_CLAMP_INGR',
	'GL_ALPHA_MIN_SGIX',
	'GL_ALPHA_SCALE',
	'GL_ALPHA_TEST',
	'GL_ALPHA_TEST_FUNC',
	'GL_ALPHA_TEST_REF',
	'GL_ALWAYS',
	'GL_ALWAYS_FAST_HINT_PGI',
	'GL_ALWAYS_SOFT_HINT_PGI',
	'GL_AMBIENT',
	'GL_AMBIENT_AND_DIFFUSE',
	'GL_AND',
	'GL_AND_INVERTED',
	'GL_AND_REVERSE',
	'GL_ARRAY_BUFFER',
	'GL_ARRAY_BUFFER_ARB',
	'GL_ARRAY_BUFFER_BINDING',
	'GL_ARRAY_BUFFER_BINDING_ARB',
	'GL_ARRAY_ELEMENT_LOCK_COUNT_EXT',
	'GL_ARRAY_ELEMENT_LOCK_FIRST_EXT',
	'GL_ARRAY_OBJECT_BUFFER_ATI',
	'GL_ARRAY_OBJECT_OFFSET_ATI',
	'GL_ASYNC_DRAW_PIXELS_SGIX',
	'GL_ASYNC_HISTOGRAM_SGIX',
	'GL_ASYNC_MARKER_SGIX',
	'GL_ASYNC_READ_PIXELS_SGIX',
	'GL_ASYNC_TEX_IMAGE_SGIX',
	'GL_ATTACHED_SHADERS',
	'GL_ATTENUATION_EXT',
	'GL_ATTRIB_ARRAY_POINTER_NV',
	'GL_ATTRIB_ARRAY_SIZE_NV',
	'GL_ATTRIB_ARRAY_STRIDE_NV',
	'GL_ATTRIB_ARRAY_TYPE_NV',
	'GL_ATTRIB_STACK_DEPTH',
	'GL_AUTO_NORMAL',
	'GL_AUX0',
	'GL_AUX1',
	'GL_AUX2',
	'GL_AUX3',
	'GL_AUX_BUFFERS',
	'GL_AVERAGE_EXT',
	'GL_AVERAGE_HP',
	'GL_BACK',
	'GL_BACK_LEFT',
	'GL_BACK_NORMALS_HINT_PGI',
	'GL_BACK_RIGHT',
	'GL_BGR',
	'GL_BGRA',
	'GL_BGRA_EXT',
	'GL_BGR_EXT',
	'GL_BIAS_BIT_ATI',
	'GL_BIAS_BY_NEGATIVE_ONE_HALF_NV',
	'GL_BINORMAL_ARRAY_EXT',
	'GL_BINORMAL_ARRAY_POINTER_EXT',
	'GL_BINORMAL_ARRAY_STRIDE_EXT',
	'GL_BINORMAL_ARRAY_TYPE_EXT',
	'GL_BITMAP',
	'GL_BITMAP_TOKEN',
	'GL_BLEND',
	'GL_BLEND_COLOR',
	'GL_BLEND_COLOR_EXT',
	'GL_BLEND_DST',
	'GL_BLEND_DST_ALPHA',
	'GL_BLEND_DST_ALPHA_EXT',
	'GL_BLEND_DST_RGB',
	'GL_BLEND_DST_RGB_EXT',
	'GL_BLEND_EQUATION',
	'GL_BLEND_EQUATION_ALPHA',
	'GL_BLEND_EQUATION_ALPHA_EXT',
	'GL_BLEND_EQUATION_EXT',
	'GL_BLEND_EQUATION_RGB',
	'GL_BLEND_EQUATION_RGB_EXT',
	'GL_BLEND_SRC',
	'GL_BLEND_SRC_ALPHA',
	'GL_BLEND_SRC_ALPHA_EXT',
	'GL_BLEND_SRC_RGB',
	'GL_BLEND_SRC_RGB_EXT',
	'GL_BLUE',
	'GL_BLUE_BIAS',
	'GL_BLUE_BITS',
	'GL_BLUE_BIT_ATI',
	'GL_BLUE_MAX_CLAMP_INGR',
	'GL_BLUE_MIN_CLAMP_INGR',
	'GL_BLUE_SCALE',
	'GL_BOOL',
	'GL_BOOL_ARB',
	'GL_BOOL_VEC2',
	'GL_BOOL_VEC2_ARB',
	'GL_BOOL_VEC3',
	'GL_BOOL_VEC3_ARB',
	'GL_BOOL_VEC4',
	'GL_BOOL_VEC4_ARB',
	'GL_BUFFER_ACCESS',
	'GL_BUFFER_ACCESS_ARB',
	'GL_BUFFER_MAPPED',
	'GL_BUFFER_MAPPED_ARB',
	'GL_BUFFER_MAP_POINTER',
	'GL_BUFFER_MAP_POINTER_ARB',
	'GL_BUFFER_SIZE',
	'GL_BUFFER_SIZE_ARB',
	'GL_BUFFER_USAGE',
	'GL_BUFFER_USAGE_ARB',
	'GL_BUMP_ENVMAP_ATI',
	'GL_BUMP_NUM_TEX_UNITS_ATI',
	'GL_BUMP_ROT_MATRIX_ATI',
	'GL_BUMP_ROT_MATRIX_SIZE_ATI',
	'GL_BUMP_TARGET_ATI',
	'GL_BUMP_TEX_UNITS_ATI',
	'GL_BYTE',
	'GL_C3F_V3F',
	'GL_C4F_N3F_V3F',
	'GL_C4UB_V2F',
	'GL_C4UB_V3F',
	'GL_CALLIGRAPHIC_FRAGMENT_SGIX',
	'GL_CCW',
	'GL_CLAMP',
	'GL_CLAMP_FRAGMENT_COLOR_ARB',
	'GL_CLAMP_READ_COLOR_ARB',
	'GL_CLAMP_TO_BORDER',
	'GL_CLAMP_TO_BORDER_ARB',
	'GL_CLAMP_TO_BORDER_SGIS',
	'GL_CLAMP_TO_EDGE',
	'GL_CLAMP_TO_EDGE_SGIS',
	'GL_CLAMP_VERTEX_COLOR_ARB',
	'GL_CLEAR',
	'GL_CLIENT_ACTIVE_TEXTURE',
	'GL_CLIENT_ACTIVE_TEXTURE_ARB',
	'GL_CLIENT_ALL_ATTRIB_BITS',
	'GL_CLIENT_ATTRIB_STACK_DEPTH',
	'GL_CLIENT_PIXEL_STORE_BIT',
	'GL_CLIENT_VERTEX_ARRAY_BIT',
	'GL_CLIP_FAR_HINT_PGI',
	'GL_CLIP_NEAR_HINT_PGI',
	'GL_CLIP_PLANE0',
	'GL_CLIP_PLANE1',
	'GL_CLIP_PLANE2',
	'GL_CLIP_PLANE3',
	'GL_CLIP_PLANE4',
	'GL_CLIP_PLANE5',
	'GL_CLIP_VOLUME_CLIPPING_HINT_EXT',
	'GL_CMYKA_EXT',
	'GL_CMYK_EXT',
	'GL_CND0_ATI',
	'GL_CND_ATI',
	'GL_COEFF',
	'GL_COLOR',
	'GL_COLOR3_BIT_PGI',
	'GL_COLOR4_BIT_PGI',
	'GL_COLOR_ALPHA_PAIRING_ATI',
	'GL_COLOR_ARRAY',
	'GL_COLOR_ARRAY_BUFFER_BINDING',
	'GL_COLOR_ARRAY_BUFFER_BINDING_ARB',
	'GL_COLOR_ARRAY_COUNT_EXT',
	'GL_COLOR_ARRAY_EXT',
	'GL_COLOR_ARRAY_LIST_IBM',
	'GL_COLOR_ARRAY_LIST_STRIDE_IBM',
	'GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL',
	'GL_COLOR_ARRAY_POINTER',
	'GL_COLOR_ARRAY_POINTER_EXT',
	'GL_COLOR_ARRAY_SIZE',
	'GL_COLOR_ARRAY_SIZE_EXT',
	'GL_COLOR_ARRAY_STRIDE',
	'GL_COLOR_ARRAY_STRIDE_EXT',
	'GL_COLOR_ARRAY_TYPE',
	'GL_COLOR_ARRAY_TYPE_EXT',
	'GL_COLOR_ATTACHMENT0_EXT',
	'GL_COLOR_ATTACHMENT10_EXT',
	'GL_COLOR_ATTACHMENT11_EXT',
	'GL_COLOR_ATTACHMENT12_EXT',
	'GL_COLOR_ATTACHMENT13_EXT',
	'GL_COLOR_ATTACHMENT14_EXT',
	'GL_COLOR_ATTACHMENT15_EXT',
	'GL_COLOR_ATTACHMENT1_EXT',
	'GL_COLOR_ATTACHMENT2_EXT',
	'GL_COLOR_ATTACHMENT3_EXT',
	'GL_COLOR_ATTACHMENT4_EXT',
	'GL_COLOR_ATTACHMENT5_EXT',
	'GL_COLOR_ATTACHMENT6_EXT',
	'GL_COLOR_ATTACHMENT7_EXT',
	'GL_COLOR_ATTACHMENT8_EXT',
	'GL_COLOR_ATTACHMENT9_EXT',
	'GL_COLOR_BUFFER_BIT',
	'GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI',
	'GL_COLOR_CLEAR_VALUE',
	'GL_COLOR_INDEX',
	'GL_COLOR_INDEX12_EXT',
	'GL_COLOR_INDEX16_EXT',
	'GL_COLOR_INDEX1_EXT',
	'GL_COLOR_INDEX2_EXT',
	'GL_COLOR_INDEX4_EXT',
	'GL_COLOR_INDEX8_EXT',
	'GL_COLOR_INDEXES',
	'GL_COLOR_LOGIC_OP',
	'GL_COLOR_MATERIAL',
	'GL_COLOR_MATERIAL_FACE',
	'GL_COLOR_MATERIAL_PARAMETER',
	'GL_COLOR_MATRIX',
	'GL_COLOR_MATRIX_SGI',
	'GL_COLOR_MATRIX_STACK_DEPTH',
	'GL_COLOR_MATRIX_STACK_DEPTH_SGI',
	'GL_COLOR_SUM',
	'GL_COLOR_SUM_ARB',
	'GL_COLOR_SUM_CLAMP_NV',
	'GL_COLOR_SUM_EXT',
	'GL_COLOR_TABLE',
	'GL_COLOR_TABLE_ALPHA_SIZE',
	'GL_COLOR_TABLE_ALPHA_SIZE_SGI',
	'GL_COLOR_TABLE_BIAS',
	'GL_COLOR_TABLE_BIAS_SGI',
	'GL_COLOR_TABLE_BLUE_SIZE',
	'GL_COLOR_TABLE_BLUE_SIZE_SGI',
	'GL_COLOR_TABLE_FORMAT',
	'GL_COLOR_TABLE_FORMAT_SGI',
	'GL_COLOR_TABLE_GREEN_SIZE',
	'GL_COLOR_TABLE_GREEN_SIZE_SGI',
	'GL_COLOR_TABLE_INTENSITY_SIZE',
	'GL_COLOR_TABLE_INTENSITY_SIZE_SGI',
	'GL_COLOR_TABLE_LUMINANCE_SIZE',
	'GL_COLOR_TABLE_LUMINANCE_SIZE_SGI',
	'GL_COLOR_TABLE_RED_SIZE',
	'GL_COLOR_TABLE_RED_SIZE_SGI',
	'GL_COLOR_TABLE_SCALE',
	'GL_COLOR_TABLE_SCALE_SGI',
	'GL_COLOR_TABLE_SGI',
	'GL_COLOR_TABLE_WIDTH',
	'GL_COLOR_TABLE_WIDTH_SGI',
	'GL_COLOR_WRITEMASK',
	'GL_COMBINE',
	'GL_COMBINE4_NV',
	'GL_COMBINER0_NV',
	'GL_COMBINER1_NV',
	'GL_COMBINER2_NV',
	'GL_COMBINER3_NV',
	'GL_COMBINER4_NV',
	'GL_COMBINER5_NV',
	'GL_COMBINER6_NV',
	'GL_COMBINER7_NV',
	'GL_COMBINER_AB_DOT_PRODUCT_NV',
	'GL_COMBINER_AB_OUTPUT_NV',
	'GL_COMBINER_BIAS_NV',
	'GL_COMBINER_CD_DOT_PRODUCT_NV',
	'GL_COMBINER_CD_OUTPUT_NV',
	'GL_COMBINER_COMPONENT_USAGE_NV',
	'GL_COMBINER_INPUT_NV',
	'GL_COMBINER_MAPPING_NV',
	'GL_COMBINER_MUX_SUM_NV',
	'GL_COMBINER_SCALE_NV',
	'GL_COMBINER_SUM_OUTPUT_NV',
	'GL_COMBINE_ALPHA',
	'GL_COMBINE_ALPHA_ARB',
	'GL_COMBINE_ALPHA_EXT',
	'GL_COMBINE_ARB',
	'GL_COMBINE_EXT',
	'GL_COMBINE_RGB',
	'GL_COMBINE_RGB_ARB',
	'GL_COMBINE_RGB_EXT',
	'GL_COMPARE_R_TO_TEXTURE',
	'GL_COMPARE_R_TO_TEXTURE_ARB',
	'GL_COMPILE',
	'GL_COMPILE_AND_EXECUTE',
	'GL_COMPILE_STATUS',
	'GL_COMPRESSED_ALPHA',
	'GL_COMPRESSED_ALPHA_ARB',
	'GL_COMPRESSED_INTENSITY',
	'GL_COMPRESSED_INTENSITY_ARB',
	'GL_COMPRESSED_LUMINANCE',
	'GL_COMPRESSED_LUMINANCE_ALPHA',
	'GL_COMPRESSED_LUMINANCE_ALPHA_ARB',
	'GL_COMPRESSED_LUMINANCE_ARB',
	'GL_COMPRESSED_RGB',
	'GL_COMPRESSED_RGBA',
	'GL_COMPRESSED_RGBA_ARB',
	'GL_COMPRESSED_RGBA_FXT1_3DFX',
	'GL_COMPRESSED_RGBA_S3TC_DXT1_EXT',
	'GL_COMPRESSED_RGBA_S3TC_DXT3_EXT',
	'GL_COMPRESSED_RGBA_S3TC_DXT5_EXT',
	'GL_COMPRESSED_RGB_ARB',
	'GL_COMPRESSED_RGB_FXT1_3DFX',
	'GL_COMPRESSED_RGB_S3TC_DXT1_EXT',
	'GL_COMPRESSED_TEXTURE_FORMATS',
	'GL_COMPRESSED_TEXTURE_FORMATS_ARB',
	'GL_COMP_BIT_ATI',
	'GL_CONSERVE_MEMORY_HINT_PGI',
	'GL_CONSTANT',
	'GL_CONSTANT_ALPHA',
	'GL_CONSTANT_ALPHA_EXT',
	'GL_CONSTANT_ARB',
	'GL_CONSTANT_ATTENUATION',
	'GL_CONSTANT_BORDER',
	'GL_CONSTANT_BORDER_HP',
	'GL_CONSTANT_COLOR',
	'GL_CONSTANT_COLOR0_NV',
	'GL_CONSTANT_COLOR1_NV',
	'GL_CONSTANT_COLOR_EXT',
	'GL_CONSTANT_EXT',
	'GL_CONST_EYE_NV',
	'GL_CONVOLUTION_1D',
	'GL_CONVOLUTION_1D_EXT',
	'GL_CONVOLUTION_2D',
	'GL_CONVOLUTION_2D_EXT',
	'GL_CONVOLUTION_BORDER_COLOR',
	'GL_CONVOLUTION_BORDER_COLOR_HP',
	'GL_CONVOLUTION_BORDER_MODE',
	'GL_CONVOLUTION_BORDER_MODE_EXT',
	'GL_CONVOLUTION_FILTER_BIAS',
	'GL_CONVOLUTION_FILTER_BIAS_EXT',
	'GL_CONVOLUTION_FILTER_SCALE',
	'GL_CONVOLUTION_FILTER_SCALE_EXT',
	'GL_CONVOLUTION_FORMAT',
	'GL_CONVOLUTION_FORMAT_EXT',
	'GL_CONVOLUTION_HEIGHT',
	'GL_CONVOLUTION_HEIGHT_EXT',
	'GL_CONVOLUTION_HINT_SGIX',
	'GL_CONVOLUTION_WIDTH',
	'GL_CONVOLUTION_WIDTH_EXT',
	'GL_CON_0_ATI',
	'GL_CON_10_ATI',
	'GL_CON_11_ATI',
	'GL_CON_12_ATI',
	'GL_CON_13_ATI',
	'GL_CON_14_ATI',
	'GL_CON_15_ATI',
	'GL_CON_16_ATI',
	'GL_CON_17_ATI',
	'GL_CON_18_ATI',
	'GL_CON_19_ATI',
	'GL_CON_1_ATI',
	'GL_CON_20_ATI',
	'GL_CON_21_ATI',
	'GL_CON_22_ATI',
	'GL_CON_23_ATI',
	'GL_CON_24_ATI',
	'GL_CON_25_ATI',
	'GL_CON_26_ATI',
	'GL_CON_27_ATI',
	'GL_CON_28_ATI',
	'GL_CON_29_ATI',
	'GL_CON_2_ATI',
	'GL_CON_30_ATI',
	'GL_CON_31_ATI',
	'GL_CON_3_ATI',
	'GL_CON_4_ATI',
	'GL_CON_5_ATI',
	'GL_CON_6_ATI',
	'GL_CON_7_ATI',
	'GL_CON_8_ATI',
	'GL_CON_9_ATI',
	'GL_COORD_REPLACE',
	'GL_COORD_REPLACE_ARB',
	'GL_COORD_REPLACE_NV',
	'GL_COPY',
	'GL_COPY_INVERTED',
	'GL_COPY_PIXEL_TOKEN',
	'GL_CUBIC_EXT',
	'GL_CUBIC_HP',
	'GL_CULL_FACE',
	'GL_CULL_FACE_MODE',
	'GL_CULL_FRAGMENT_NV',
	'GL_CULL_MODES_NV',
	'GL_CULL_VERTEX_EXT',
	'GL_CULL_VERTEX_EYE_POSITION_EXT',
	'GL_CULL_VERTEX_IBM',
	'GL_CULL_VERTEX_OBJECT_POSITION_EXT',
	'GL_CURRENT_ATTRIB_NV',
	'GL_CURRENT_BINORMAL_EXT',
	'GL_CURRENT_BIT',
	'GL_CURRENT_COLOR',
	'GL_CURRENT_FOG_COORD',
	'GL_CURRENT_FOG_COORDINATE',
	'GL_CURRENT_FOG_COORDINATE_EXT',
	'GL_CURRENT_INDEX',
	'GL_CURRENT_MATRIX_ARB',
	'GL_CURRENT_MATRIX_INDEX_ARB',
	'GL_CURRENT_MATRIX_NV',
	'GL_CURRENT_MATRIX_STACK_DEPTH_ARB',
	'GL_CURRENT_MATRIX_STACK_DEPTH_NV',
	'GL_CURRENT_NORMAL',
	'GL_CURRENT_OCCLUSION_QUERY_ID_NV',
	'GL_CURRENT_PALETTE_MATRIX_ARB',
	'GL_CURRENT_PROGRAM',
	'GL_CURRENT_QUERY',
	'GL_CURRENT_QUERY_ARB',
	'GL_CURRENT_RASTER_COLOR',
	'GL_CURRENT_RASTER_DISTANCE',
	'GL_CURRENT_RASTER_INDEX',
	'GL_CURRENT_RASTER_NORMAL_SGIX',
	'GL_CURRENT_RASTER_POSITION',
	'GL_CURRENT_RASTER_POSITION_VALID',
	'GL_CURRENT_RASTER_TEXTURE_COORDS',
	'GL_CURRENT_SECONDARY_COLOR',
	'GL_CURRENT_SECONDARY_COLOR_EXT',
	'GL_CURRENT_TANGENT_EXT',
	'GL_CURRENT_TEXTURE_COORDS',
	'GL_CURRENT_VERTEX_ATTRIB',
	'GL_CURRENT_VERTEX_ATTRIB_ARB',
	'GL_CURRENT_VERTEX_EXT',
	'GL_CURRENT_VERTEX_WEIGHT_EXT',
	'GL_CURRENT_WEIGHT_ARB',
	'GL_CW',
	'GL_DECAL',
	'GL_DECR',
	'GL_DECR_WRAP',
	'GL_DECR_WRAP_EXT',
	'GL_DEFORMATIONS_MASK_SGIX',
	'GL_DELETE_STATUS',
	'GL_DEPENDENT_AR_TEXTURE_2D_NV',
	'GL_DEPENDENT_GB_TEXTURE_2D_NV',
	'GL_DEPENDENT_HILO_TEXTURE_2D_NV',
	'GL_DEPENDENT_RGB_TEXTURE_3D_NV',
	'GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV',
	'GL_DEPTH',
	'GL_DEPTH_ATTACHMENT_EXT',
	'GL_DEPTH_BIAS',
	'GL_DEPTH_BITS',
	'GL_DEPTH_BOUNDS_EXT',
	'GL_DEPTH_BOUNDS_TEST_EXT',
	'GL_DEPTH_BUFFER_BIT',
	'GL_DEPTH_CLAMP_NV',
	'GL_DEPTH_CLEAR_VALUE',
	'GL_DEPTH_COMPONENT',
	'GL_DEPTH_COMPONENT16',
	'GL_DEPTH_COMPONENT16_ARB',
	'GL_DEPTH_COMPONENT16_SGIX',
	'GL_DEPTH_COMPONENT24',
	'GL_DEPTH_COMPONENT24_ARB',
	'GL_DEPTH_COMPONENT24_SGIX',
	'GL_DEPTH_COMPONENT32',
	'GL_DEPTH_COMPONENT32_ARB',
	'GL_DEPTH_COMPONENT32_SGIX',
	'GL_DEPTH_FUNC',
	'GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX',
	'GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX',
	'GL_DEPTH_PASS_INSTRUMENT_SGIX',
	'GL_DEPTH_RANGE',
	'GL_DEPTH_SCALE',
	'GL_DEPTH_STENCIL_NV',
	'GL_DEPTH_STENCIL_TO_BGRA_NV',
	'GL_DEPTH_STENCIL_TO_RGBA_NV',
	'GL_DEPTH_TEST',
	'GL_DEPTH_TEXTURE_MODE',
	'GL_DEPTH_TEXTURE_MODE_ARB',
	'GL_DEPTH_WRITEMASK',
	'GL_DETAIL_TEXTURE_2D_BINDING_SGIS',
	'GL_DETAIL_TEXTURE_2D_SGIS',
	'GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS',
	'GL_DETAIL_TEXTURE_LEVEL_SGIS',
	'GL_DETAIL_TEXTURE_MODE_SGIS',
	'GL_DIFFUSE',
	'GL_DISCARD_ATI',
	'GL_DISCARD_NV',
	'GL_DISTANCE_ATTENUATION_EXT',
	'GL_DISTANCE_ATTENUATION_SGIS',
	'GL_DITHER',
	'GL_DOMAIN',
	'GL_DONT_CARE',
	'GL_DOT2_ADD_ATI',
	'GL_DOT3_ATI',
	'GL_DOT3_RGB',
	'GL_DOT3_RGBA',
	'GL_DOT3_RGBA_ARB',
	'GL_DOT3_RGBA_EXT',
	'GL_DOT3_RGB_ARB',
	'GL_DOT3_RGB_EXT',
	'GL_DOT4_ATI',
	'GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV',
	'GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV',
	'GL_DOT_PRODUCT_DEPTH_REPLACE_NV',
	'GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV',
	'GL_DOT_PRODUCT_NV',
	'GL_DOT_PRODUCT_PASS_THROUGH_NV',
	'GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV',
	'GL_DOT_PRODUCT_TEXTURE_1D_NV',
	'GL_DOT_PRODUCT_TEXTURE_2D_NV',
	'GL_DOT_PRODUCT_TEXTURE_3D_NV',
	'GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV',
	'GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV',
	'GL_DOUBLE',
	'GL_DOUBLEBUFFER',
	'GL_DOUBLE_EXT',
	'GL_DRAW_BUFFER',
	'GL_DRAW_BUFFER0',
	'GL_DRAW_BUFFER0_ARB',
	'GL_DRAW_BUFFER0_ATI',
	'GL_DRAW_BUFFER1',
	'GL_DRAW_BUFFER10',
	'GL_DRAW_BUFFER10_ARB',
	'GL_DRAW_BUFFER10_ATI',
	'GL_DRAW_BUFFER11',
	'GL_DRAW_BUFFER11_ARB',
	'GL_DRAW_BUFFER11_ATI',
	'GL_DRAW_BUFFER12',
	'GL_DRAW_BUFFER12_ARB',
	'GL_DRAW_BUFFER12_ATI',
	'GL_DRAW_BUFFER13',
	'GL_DRAW_BUFFER13_ARB',
	'GL_DRAW_BUFFER13_ATI',
	'GL_DRAW_BUFFER14',
	'GL_DRAW_BUFFER14_ARB',
	'GL_DRAW_BUFFER14_ATI',
	'GL_DRAW_BUFFER15',
	'GL_DRAW_BUFFER15_ARB',
	'GL_DRAW_BUFFER15_ATI',
	'GL_DRAW_BUFFER1_ARB',
	'GL_DRAW_BUFFER1_ATI',
	'GL_DRAW_BUFFER2',
	'GL_DRAW_BUFFER2_ARB',
	'GL_DRAW_BUFFER2_ATI',
	'GL_DRAW_BUFFER3',
	'GL_DRAW_BUFFER3_ARB',
	'GL_DRAW_BUFFER3_ATI',
	'GL_DRAW_BUFFER4',
	'GL_DRAW_BUFFER4_ARB',
	'GL_DRAW_BUFFER4_ATI',
	'GL_DRAW_BUFFER5',
	'GL_DRAW_BUFFER5_ARB',
	'GL_DRAW_BUFFER5_ATI',
	'GL_DRAW_BUFFER6',
	'GL_DRAW_BUFFER6_ARB',
	'GL_DRAW_BUFFER6_ATI',
	'GL_DRAW_BUFFER7',
	'GL_DRAW_BUFFER7_ARB',
	'GL_DRAW_BUFFER7_ATI',
	'GL_DRAW_BUFFER8',
	'GL_DRAW_BUFFER8_ARB',
	'GL_DRAW_BUFFER8_ATI',
	'GL_DRAW_BUFFER9',
	'GL_DRAW_BUFFER9_ARB',
	'GL_DRAW_BUFFER9_ATI',
	'GL_DRAW_PIXELS_APPLE',
	'GL_DRAW_PIXEL_TOKEN',
	'GL_DSDT8_MAG8_INTENSITY8_NV',
	'GL_DSDT8_MAG8_NV',
	'GL_DSDT8_NV',
	'GL_DSDT_MAG_INTENSITY_NV',
	'GL_DSDT_MAG_NV',
	'GL_DSDT_MAG_VIB_NV',
	'GL_DSDT_NV',
	'GL_DST_ALPHA',
	'GL_DST_COLOR',
	'GL_DS_BIAS_NV',
	'GL_DS_SCALE_NV',
	'GL_DT_BIAS_NV',
	'GL_DT_SCALE_NV',
	'GL_DU8DV8_ATI',
	'GL_DUAL_ALPHA12_SGIS',
	'GL_DUAL_ALPHA16_SGIS',
	'GL_DUAL_ALPHA4_SGIS',
	'GL_DUAL_ALPHA8_SGIS',
	'GL_DUAL_INTENSITY12_SGIS',
	'GL_DUAL_INTENSITY16_SGIS',
	'GL_DUAL_INTENSITY4_SGIS',
	'GL_DUAL_INTENSITY8_SGIS',
	'GL_DUAL_LUMINANCE12_SGIS',
	'GL_DUAL_LUMINANCE16_SGIS',
	'GL_DUAL_LUMINANCE4_SGIS',
	'GL_DUAL_LUMINANCE8_SGIS',
	'GL_DUAL_LUMINANCE_ALPHA4_SGIS',
	'GL_DUAL_LUMINANCE_ALPHA8_SGIS',
	'GL_DUAL_TEXTURE_SELECT_SGIS',
	'GL_DUDV_ATI',
	'GL_DYNAMIC_ATI',
	'GL_DYNAMIC_COPY',
	'GL_DYNAMIC_COPY_ARB',
	'GL_DYNAMIC_DRAW',
	'GL_DYNAMIC_DRAW_ARB',
	'GL_DYNAMIC_READ',
	'GL_DYNAMIC_READ_ARB',
	'GL_EDGEFLAG_BIT_PGI',
	'GL_EDGE_FLAG',
	'GL_EDGE_FLAG_ARRAY',
	'GL_EDGE_FLAG_ARRAY_BUFFER_BINDING',
	'GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB',
	'GL_EDGE_FLAG_ARRAY_COUNT_EXT',
	'GL_EDGE_FLAG_ARRAY_EXT',
	'GL_EDGE_FLAG_ARRAY_LIST_IBM',
	'GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM',
	'GL_EDGE_FLAG_ARRAY_POINTER',
	'GL_EDGE_FLAG_ARRAY_POINTER_EXT',
	'GL_EDGE_FLAG_ARRAY_STRIDE',
	'GL_EDGE_FLAG_ARRAY_STRIDE_EXT',
	'GL_EIGHTH_BIT_ATI',
	'GL_ELEMENT_ARRAY_APPLE',
	'GL_ELEMENT_ARRAY_ATI',
	'GL_ELEMENT_ARRAY_BUFFER',
	'GL_ELEMENT_ARRAY_BUFFER_ARB',
	'GL_ELEMENT_ARRAY_BUFFER_BINDING',
	'GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB',
	'GL_ELEMENT_ARRAY_POINTER_APPLE',
	'GL_ELEMENT_ARRAY_POINTER_ATI',
	'GL_ELEMENT_ARRAY_TYPE_APPLE',
	'GL_ELEMENT_ARRAY_TYPE_ATI',
	'GL_EMBOSS_CONSTANT_NV',
	'GL_EMBOSS_LIGHT_NV',
	'GL_EMBOSS_MAP_NV',
	'GL_EMISSION',
	'GL_ENABLE_BIT',
	'GL_EQUAL',
	'GL_EQUIV',
	'GL_EVAL_2D_NV',
	'GL_EVAL_BIT',
	'GL_EVAL_FRACTIONAL_TESSELLATION_NV',
	'GL_EVAL_TRIANGULAR_2D_NV',
	'GL_EVAL_VERTEX_ATTRIB0_NV',
	'GL_EVAL_VERTEX_ATTRIB10_NV',
	'GL_EVAL_VERTEX_ATTRIB11_NV',
	'GL_EVAL_VERTEX_ATTRIB12_NV',
	'GL_EVAL_VERTEX_ATTRIB13_NV',
	'GL_EVAL_VERTEX_ATTRIB14_NV',
	'GL_EVAL_VERTEX_ATTRIB15_NV',
	'GL_EVAL_VERTEX_ATTRIB1_NV',
	'GL_EVAL_VERTEX_ATTRIB2_NV',
	'GL_EVAL_VERTEX_ATTRIB3_NV',
	'GL_EVAL_VERTEX_ATTRIB4_NV',
	'GL_EVAL_VERTEX_ATTRIB5_NV',
	'GL_EVAL_VERTEX_ATTRIB6_NV',
	'GL_EVAL_VERTEX_ATTRIB7_NV',
	'GL_EVAL_VERTEX_ATTRIB8_NV',
	'GL_EVAL_VERTEX_ATTRIB9_NV',
	'GL_EXP',
	'GL_EXP2',
	'GL_EXPAND_NEGATE_NV',
	'GL_EXPAND_NORMAL_NV',
	'GL_EXTENSIONS',
	'GL_EYE_DISTANCE_TO_LINE_SGIS',
	'GL_EYE_DISTANCE_TO_POINT_SGIS',
	'GL_EYE_LINEAR',
	'GL_EYE_LINE_SGIS',
	'GL_EYE_PLANE',
	'GL_EYE_PLANE_ABSOLUTE_NV',
	'GL_EYE_POINT_SGIS',
	'GL_EYE_RADIAL_NV',
	'GL_E_TIMES_F_NV',
	'GL_FALSE',
	'GL_FASTEST',
	'GL_FEEDBACK',
	'GL_FEEDBACK_BUFFER_POINTER',
	'GL_FEEDBACK_BUFFER_SIZE',
	'GL_FEEDBACK_BUFFER_TYPE',
	'GL_FENCE_APPLE',
	'GL_FENCE_CONDITION_NV',
	'GL_FENCE_STATUS_NV',
	'GL_FILL',
	'GL_FILTER4_SGIS',
	'GL_FIXED_ONLY_ARB',
	'GL_FLAT',
	'GL_FLOAT',
	'GL_FLOAT_CLEAR_COLOR_VALUE_NV',
	'GL_FLOAT_MAT2',
	'GL_FLOAT_MAT2_ARB',
	'GL_FLOAT_MAT3',
	'GL_FLOAT_MAT3_ARB',
	'GL_FLOAT_MAT4',
	'GL_FLOAT_MAT4_ARB',
	'GL_FLOAT_R16_NV',
	'GL_FLOAT_R32_NV',
	'GL_FLOAT_RG16_NV',
	'GL_FLOAT_RG32_NV',
	'GL_FLOAT_RGB16_NV',
	'GL_FLOAT_RGB32_NV',
	'GL_FLOAT_RGBA16_NV',
	'GL_FLOAT_RGBA32_NV',
	'GL_FLOAT_RGBA_MODE_NV',
	'GL_FLOAT_RGBA_NV',
	'GL_FLOAT_RGB_NV',
	'GL_FLOAT_RG_NV',
	'GL_FLOAT_R_NV',
	'GL_FLOAT_VEC2',
	'GL_FLOAT_VEC2_ARB',
	'GL_FLOAT_VEC3',
	'GL_FLOAT_VEC3_ARB',
	'GL_FLOAT_VEC4',
	'GL_FLOAT_VEC4_ARB',
	'GL_FOG',
	'GL_FOG_BIT',
	'GL_FOG_COLOR',
	'GL_FOG_COORD',
	'GL_FOG_COORDINATE',
	'GL_FOG_COORDINATE_ARRAY',
	'GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING',
	'GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB',
	'GL_FOG_COORDINATE_ARRAY_EXT',
	'GL_FOG_COORDINATE_ARRAY_LIST_IBM',
	'GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM',
	'GL_FOG_COORDINATE_ARRAY_POINTER',
	'GL_FOG_COORDINATE_ARRAY_POINTER_EXT',
	'GL_FOG_COORDINATE_ARRAY_STRIDE',
	'GL_FOG_COORDINATE_ARRAY_STRIDE_EXT',
	'GL_FOG_COORDINATE_ARRAY_TYPE',
	'GL_FOG_COORDINATE_ARRAY_TYPE_EXT',
	'GL_FOG_COORDINATE_EXT',
	'GL_FOG_COORDINATE_SOURCE',
	'GL_FOG_COORDINATE_SOURCE_EXT',
	'GL_FOG_COORD_ARRAY',
	'GL_FOG_COORD_ARRAY_BUFFER_BINDING',
	'GL_FOG_COORD_ARRAY_POINTER',
	'GL_FOG_COORD_ARRAY_STRIDE',
	'GL_FOG_COORD_ARRAY_TYPE',
	'GL_FOG_COORD_SRC',
	'GL_FOG_DENSITY',
	'GL_FOG_DISTANCE_MODE_NV',
	'GL_FOG_END',
	'GL_FOG_FUNC_POINTS_SGIS',
	'GL_FOG_FUNC_SGIS',
	'GL_FOG_HINT',
	'GL_FOG_INDEX',
	'GL_FOG_MODE',
	'GL_FOG_OFFSET_SGIX',
	'GL_FOG_OFFSET_VALUE_SGIX',
	'GL_FOG_SCALE_SGIX',
	'GL_FOG_SCALE_VALUE_SGIX',
	'GL_FOG_SPECULAR_TEXTURE_WIN',
	'GL_FOG_START',
	'GL_FORCE_BLUE_TO_ONE_NV',
	'GL_FORMAT_SUBSAMPLE_244_244_OML',
	'GL_FORMAT_SUBSAMPLE_24_24_OML',
	'GL_FRAGMENT_COLOR_EXT',
	'GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX',
	'GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX',
	'GL_FRAGMENT_COLOR_MATERIAL_SGIX',
	'GL_FRAGMENT_DEPTH',
	'GL_FRAGMENT_DEPTH_EXT',
	'GL_FRAGMENT_LIGHT0_SGIX',
	'GL_FRAGMENT_LIGHT1_SGIX',
	'GL_FRAGMENT_LIGHT2_SGIX',
	'GL_FRAGMENT_LIGHT3_SGIX',
	'GL_FRAGMENT_LIGHT4_SGIX',
	'GL_FRAGMENT_LIGHT5_SGIX',
	'GL_FRAGMENT_LIGHT6_SGIX',
	'GL_FRAGMENT_LIGHT7_SGIX',
	'GL_FRAGMENT_LIGHTING_SGIX',
	'GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX',
	'GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX',
	'GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX',
	'GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX',
	'GL_FRAGMENT_MATERIAL_EXT',
	'GL_FRAGMENT_NORMAL_EXT',
	'GL_FRAGMENT_PROGRAM_ARB',
	'GL_FRAGMENT_PROGRAM_BINDING_NV',
	'GL_FRAGMENT_PROGRAM_NV',
	'GL_FRAGMENT_SHADER',
	'GL_FRAGMENT_SHADER_ARB',
	'GL_FRAGMENT_SHADER_ATI',
	'GL_FRAGMENT_SHADER_DERIVATIVE_HINT',
	'GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB',
	'GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT',
	'GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT',
	'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT',
	'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT',
	'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT',
	'GL_FRAMEBUFFER_BINDING_EXT',
	'GL_FRAMEBUFFER_COMPLETE_EXT',
	'GL_FRAMEBUFFER_EXT',
	'GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT',
	'GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT',
	'GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT',
	'GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT_EXT',
	'GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT',
	'GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT',
	'GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT',
	'GL_FRAMEBUFFER_UNSUPPORTED_EXT',
	'GL_FRAMEZOOM_FACTOR_SGIX',
	'GL_FRAMEZOOM_SGIX',
	'GL_FRONT',
	'GL_FRONT_AND_BACK',
	'GL_FRONT_FACE',
	'GL_FRONT_LEFT',
	'GL_FRONT_RIGHT',
	'GL_FULL_RANGE_EXT',
	'GL_FULL_STIPPLE_HINT_PGI',
	'GL_FUNC_ADD',
	'GL_FUNC_ADD_EXT',
	'GL_FUNC_REVERSE_SUBTRACT',
	'GL_FUNC_REVERSE_SUBTRACT_EXT',
	'GL_FUNC_SUBTRACT',
	'GL_FUNC_SUBTRACT_EXT',
	'GL_GENERATE_MIPMAP',
	'GL_GENERATE_MIPMAP_HINT',
	'GL_GENERATE_MIPMAP_HINT_SGIS',
	'GL_GENERATE_MIPMAP_SGIS',
	'GL_GEOMETRY_DEFORMATION_BIT_SGIX',
	'GL_GEOMETRY_DEFORMATION_SGIX',
	'GL_GEQUAL',
	'GL_GLEXT_VERSION',
	'GL_GLOBAL_ALPHA_FACTOR_SUN',
	'GL_GLOBAL_ALPHA_SUN',
	'GL_GREATER',
	'GL_GREEN',
	'GL_GREEN_BIAS',
	'GL_GREEN_BITS',
	'GL_GREEN_BIT_ATI',
	'GL_GREEN_MAX_CLAMP_INGR',
	'GL_GREEN_MIN_CLAMP_INGR',
	'GL_GREEN_SCALE',
	'GL_HALF_BIAS_NEGATE_NV',
	'GL_HALF_BIAS_NORMAL_NV',
	'GL_HALF_BIT_ATI',
	'GL_HALF_FLOAT_ARB',
	'GL_HALF_FLOAT_NV',
	'GL_HILO16_NV',
	'GL_HILO8_NV',
	'GL_HILO_NV',
	'GL_HINT_BIT',
	'GL_HISTOGRAM',
	'GL_HISTOGRAM_ALPHA_SIZE',
	'GL_HISTOGRAM_ALPHA_SIZE_EXT',
	'GL_HISTOGRAM_BLUE_SIZE',
	'GL_HISTOGRAM_BLUE_SIZE_EXT',
	'GL_HISTOGRAM_EXT',
	'GL_HISTOGRAM_FORMAT',
	'GL_HISTOGRAM_FORMAT_EXT',
	'GL_HISTOGRAM_GREEN_SIZE',
	'GL_HISTOGRAM_GREEN_SIZE_EXT',
	'GL_HISTOGRAM_LUMINANCE_SIZE',
	'GL_HISTOGRAM_LUMINANCE_SIZE_EXT',
	'GL_HISTOGRAM_RED_SIZE',
	'GL_HISTOGRAM_RED_SIZE_EXT',
	'GL_HISTOGRAM_SINK',
	'GL_HISTOGRAM_SINK_EXT',
	'GL_HISTOGRAM_WIDTH',
	'GL_HISTOGRAM_WIDTH_EXT',
	'GL_HI_BIAS_NV',
	'GL_HI_SCALE_NV',
	'GL_IDENTITY_NV',
	'GL_IGNORE_BORDER_HP',
	'GL_IMAGE_CUBIC_WEIGHT_HP',
	'GL_IMAGE_MAG_FILTER_HP',
	'GL_IMAGE_MIN_FILTER_HP',
	'GL_IMAGE_ROTATE_ANGLE_HP',
	'GL_IMAGE_ROTATE_ORIGIN_X_HP',
	'GL_IMAGE_ROTATE_ORIGIN_Y_HP',
	'GL_IMAGE_SCALE_X_HP',
	'GL_IMAGE_SCALE_Y_HP',
	'GL_IMAGE_TRANSFORM_2D_HP',
	'GL_IMAGE_TRANSLATE_X_HP',
	'GL_IMAGE_TRANSLATE_Y_HP',
	'GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES',
	'GL_IMPLEMENTATION_COLOR_READ_TYPE_OES',
	'GL_INCR',
	'GL_INCR_WRAP',
	'GL_INCR_WRAP_EXT',
	'GL_INDEX_ARRAY',
	'GL_INDEX_ARRAY_BUFFER_BINDING',
	'GL_INDEX_ARRAY_BUFFER_BINDING_ARB',
	'GL_INDEX_ARRAY_COUNT_EXT',
	'GL_INDEX_ARRAY_EXT',
	'GL_INDEX_ARRAY_LIST_IBM',
	'GL_INDEX_ARRAY_LIST_STRIDE_IBM',
	'GL_INDEX_ARRAY_POINTER',
	'GL_INDEX_ARRAY_POINTER_EXT',
	'GL_INDEX_ARRAY_STRIDE',
	'GL_INDEX_ARRAY_STRIDE_EXT',
	'GL_INDEX_ARRAY_TYPE',
	'GL_INDEX_ARRAY_TYPE_EXT',
	'GL_INDEX_BITS',
	'GL_INDEX_BIT_PGI',
	'GL_INDEX_CLEAR_VALUE',
	'GL_INDEX_LOGIC_OP',
	'GL_INDEX_MATERIAL_EXT',
	'GL_INDEX_MATERIAL_FACE_EXT',
	'GL_INDEX_MATERIAL_PARAMETER_EXT',
	'GL_INDEX_MODE',
	'GL_INDEX_OFFSET',
	'GL_INDEX_SHIFT',
	'GL_INDEX_TEST_EXT',
	'GL_INDEX_TEST_FUNC_EXT',
	'GL_INDEX_TEST_REF_EXT',
	'GL_INDEX_WRITEMASK',
	'GL_INFO_LOG_LENGTH',
	'GL_INSTRUMENT_BUFFER_POINTER_SGIX',
	'GL_INSTRUMENT_MEASUREMENTS_SGIX',
	'GL_INT',
	'GL_INTENSITY',
	'GL_INTENSITY12',
	'GL_INTENSITY12_EXT',
	'GL_INTENSITY16',
	'GL_INTENSITY16F_ARB',
	'GL_INTENSITY16_EXT',
	'GL_INTENSITY32F_ARB',
	'GL_INTENSITY4',
	'GL_INTENSITY4_EXT',
	'GL_INTENSITY8',
	'GL_INTENSITY8_EXT',
	'GL_INTENSITY_EXT',
	'GL_INTENSITY_FLOAT16_ATI',
	'GL_INTENSITY_FLOAT32_ATI',
	'GL_INTERLACE_OML',
	'GL_INTERLACE_READ_INGR',
	'GL_INTERLACE_READ_OML',
	'GL_INTERLACE_SGIX',
	'GL_INTERPOLATE',
	'GL_INTERPOLATE_ARB',
	'GL_INTERPOLATE_EXT',
	'GL_INT_VEC2',
	'GL_INT_VEC2_ARB',
	'GL_INT_VEC3',
	'GL_INT_VEC3_ARB',
	'GL_INT_VEC4',
	'GL_INT_VEC4_ARB',
	'GL_INVALID_ENUM',
	'GL_INVALID_FRAMEBUFFER_OPERATION_EXT',
	'GL_INVALID_OPERATION',
	'GL_INVALID_VALUE',
	'GL_INVARIANT_DATATYPE_EXT',
	'GL_INVARIANT_EXT',
	'GL_INVARIANT_VALUE_EXT',
	'GL_INVERSE_NV',
	'GL_INVERSE_TRANSPOSE_NV',
	'GL_INVERT',
	'GL_INVERTED_SCREEN_W_REND',
	'GL_IR_INSTRUMENT1_SGIX',
	'GL_IUI_N3F_V2F_EXT',
	'GL_IUI_N3F_V3F_EXT',
	'GL_IUI_V2F_EXT',
	'GL_IUI_V3F_EXT',
	'GL_KEEP',
	'GL_LEFT',
	'GL_LEQUAL',
	'GL_LERP_ATI',
	'GL_LESS',
	'GL_LIGHT0',
	'GL_LIGHT1',
	'GL_LIGHT2',
	'GL_LIGHT3',
	'GL_LIGHT4',
	'GL_LIGHT5',
	'GL_LIGHT6',
	'GL_LIGHT7',
	'GL_LIGHTING',
	'GL_LIGHTING_BIT',
	'GL_LIGHT_ENV_MODE_SGIX',
	'GL_LIGHT_MODEL_AMBIENT',
	'GL_LIGHT_MODEL_COLOR_CONTROL',
	'GL_LIGHT_MODEL_COLOR_CONTROL_EXT',
	'GL_LIGHT_MODEL_LOCAL_VIEWER',
	'GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE',
	'GL_LIGHT_MODEL_TWO_SIDE',
	'GL_LINE',
	'GL_LINEAR',
	'GL_LINEAR_ATTENUATION',
	'GL_LINEAR_CLIPMAP_LINEAR_SGIX',
	'GL_LINEAR_CLIPMAP_NEAREST_SGIX',
	'GL_LINEAR_DETAIL_ALPHA_SGIS',
	'GL_LINEAR_DETAIL_COLOR_SGIS',
	'GL_LINEAR_DETAIL_SGIS',
	'GL_LINEAR_MIPMAP_LINEAR',
	'GL_LINEAR_MIPMAP_NEAREST',
	'GL_LINEAR_SHARPEN_ALPHA_SGIS',
	'GL_LINEAR_SHARPEN_COLOR_SGIS',
	'GL_LINEAR_SHARPEN_SGIS',
	'GL_LINES',
	'GL_LINE_BIT',
	'GL_LINE_LOOP',
	'GL_LINE_RESET_TOKEN',
	'GL_LINE_SMOOTH',
	'GL_LINE_SMOOTH_HINT',
	'GL_LINE_STIPPLE',
	'GL_LINE_STIPPLE_PATTERN',
	'GL_LINE_STIPPLE_REPEAT',
	'GL_LINE_STRIP',
	'GL_LINE_TOKEN',
	'GL_LINE_WIDTH',
	'GL_LINE_WIDTH_GRANULARITY',
	'GL_LINE_WIDTH_RANGE',
	'GL_LINK_STATUS',
	'GL_LIST_BASE',
	'GL_LIST_BIT',
	'GL_LIST_INDEX',
	'GL_LIST_MODE',
	'GL_LIST_PRIORITY_SGIX',
	'GL_LOAD',
	'GL_LOCAL_CONSTANT_DATATYPE_EXT',
	'GL_LOCAL_CONSTANT_EXT',
	'GL_LOCAL_CONSTANT_VALUE_EXT',
	'GL_LOCAL_EXT',
	'GL_LOGIC_OP',
	'GL_LOGIC_OP_MODE',
	'GL_LOWER_LEFT',
	'GL_LO_BIAS_NV',
	'GL_LO_SCALE_NV',
	'GL_LUMINANCE',
	'GL_LUMINANCE12',
	'GL_LUMINANCE12_ALPHA12',
	'GL_LUMINANCE12_ALPHA12_EXT',
	'GL_LUMINANCE12_ALPHA4',
	'GL_LUMINANCE12_ALPHA4_EXT',
	'GL_LUMINANCE12_EXT',
	'GL_LUMINANCE16',
	'GL_LUMINANCE16F_ARB',
	'GL_LUMINANCE16_ALPHA16',
	'GL_LUMINANCE16_ALPHA16_EXT',
	'GL_LUMINANCE16_EXT',
	'GL_LUMINANCE32F_ARB',
	'GL_LUMINANCE4',
	'GL_LUMINANCE4_ALPHA4',
	'GL_LUMINANCE4_ALPHA4_EXT',
	'GL_LUMINANCE4_EXT',
	'GL_LUMINANCE6_ALPHA2',
	'GL_LUMINANCE6_ALPHA2_EXT',
	'GL_LUMINANCE8',
	'GL_LUMINANCE8_ALPHA8',
	'GL_LUMINANCE8_ALPHA8_EXT',
	'GL_LUMINANCE8_EXT',
	'GL_LUMINANCE_ALPHA',
	'GL_LUMINANCE_ALPHA16F_ARB',
	'GL_LUMINANCE_ALPHA32F_ARB',
	'GL_LUMINANCE_ALPHA_FLOAT16_ATI',
	'GL_LUMINANCE_ALPHA_FLOAT32_ATI',
	'GL_LUMINANCE_FLOAT16_ATI',
	'GL_LUMINANCE_FLOAT32_ATI',
	'GL_MAD_ATI',
	'GL_MAGNITUDE_BIAS_NV',
	'GL_MAGNITUDE_SCALE_NV',
	'GL_MAP1_BINORMAL_EXT',
	'GL_MAP1_COLOR_4',
	'GL_MAP1_GRID_DOMAIN',
	'GL_MAP1_GRID_SEGMENTS',
	'GL_MAP1_INDEX',
	'GL_MAP1_NORMAL',
	'GL_MAP1_TANGENT_EXT',
	'GL_MAP1_TEXTURE_COORD_1',
	'GL_MAP1_TEXTURE_COORD_2',
	'GL_MAP1_TEXTURE_COORD_3',
	'GL_MAP1_TEXTURE_COORD_4',
	'GL_MAP1_VERTEX_3',
	'GL_MAP1_VERTEX_4',
	'GL_MAP1_VERTEX_ATTRIB0_4_NV',
	'GL_MAP1_VERTEX_ATTRIB10_4_NV',
	'GL_MAP1_VERTEX_ATTRIB11_4_NV',
	'GL_MAP1_VERTEX_ATTRIB12_4_NV',
	'GL_MAP1_VERTEX_ATTRIB13_4_NV',
	'GL_MAP1_VERTEX_ATTRIB14_4_NV',
	'GL_MAP1_VERTEX_ATTRIB15_4_NV',
	'GL_MAP1_VERTEX_ATTRIB1_4_NV',
	'GL_MAP1_VERTEX_ATTRIB2_4_NV',
	'GL_MAP1_VERTEX_ATTRIB3_4_NV',
	'GL_MAP1_VERTEX_ATTRIB4_4_NV',
	'GL_MAP1_VERTEX_ATTRIB5_4_NV',
	'GL_MAP1_VERTEX_ATTRIB6_4_NV',
	'GL_MAP1_VERTEX_ATTRIB7_4_NV',
	'GL_MAP1_VERTEX_ATTRIB8_4_NV',
	'GL_MAP1_VERTEX_ATTRIB9_4_NV',
	'GL_MAP2_BINORMAL_EXT',
	'GL_MAP2_COLOR_4',
	'GL_MAP2_GRID_DOMAIN',
	'GL_MAP2_GRID_SEGMENTS',
	'GL_MAP2_INDEX',
	'GL_MAP2_NORMAL',
	'GL_MAP2_TANGENT_EXT',
	'GL_MAP2_TEXTURE_COORD_1',
	'GL_MAP2_TEXTURE_COORD_2',
	'GL_MAP2_TEXTURE_COORD_3',
	'GL_MAP2_TEXTURE_COORD_4',
	'GL_MAP2_VERTEX_3',
	'GL_MAP2_VERTEX_4',
	'GL_MAP2_VERTEX_ATTRIB0_4_NV',
	'GL_MAP2_VERTEX_ATTRIB10_4_NV',
	'GL_MAP2_VERTEX_ATTRIB11_4_NV',
	'GL_MAP2_VERTEX_ATTRIB12_4_NV',
	'GL_MAP2_VERTEX_ATTRIB13_4_NV',
	'GL_MAP2_VERTEX_ATTRIB14_4_NV',
	'GL_MAP2_VERTEX_ATTRIB15_4_NV',
	'GL_MAP2_VERTEX_ATTRIB1_4_NV',
	'GL_MAP2_VERTEX_ATTRIB2_4_NV',
	'GL_MAP2_VERTEX_ATTRIB3_4_NV',
	'GL_MAP2_VERTEX_ATTRIB4_4_NV',
	'GL_MAP2_VERTEX_ATTRIB5_4_NV',
	'GL_MAP2_VERTEX_ATTRIB6_4_NV',
	'GL_MAP2_VERTEX_ATTRIB7_4_NV',
	'GL_MAP2_VERTEX_ATTRIB8_4_NV',
	'GL_MAP2_VERTEX_ATTRIB9_4_NV',
	'GL_MAP_ATTRIB_U_ORDER_NV',
	'GL_MAP_ATTRIB_V_ORDER_NV',
	'GL_MAP_COLOR',
	'GL_MAP_STENCIL',
	'GL_MAP_TESSELLATION_NV',
	'GL_MATERIAL_SIDE_HINT_PGI',
	'GL_MATRIX0_ARB',
	'GL_MATRIX0_NV',
	'GL_MATRIX10_ARB',
	'GL_MATRIX11_ARB',
	'GL_MATRIX12_ARB',
	'GL_MATRIX13_ARB',
	'GL_MATRIX14_ARB',
	'GL_MATRIX15_ARB',
	'GL_MATRIX16_ARB',
	'GL_MATRIX17_ARB',
	'GL_MATRIX18_ARB',
	'GL_MATRIX19_ARB',
	'GL_MATRIX1_ARB',
	'GL_MATRIX1_NV',
	'GL_MATRIX20_ARB',
	'GL_MATRIX21_ARB',
	'GL_MATRIX22_ARB',
	'GL_MATRIX23_ARB',
	'GL_MATRIX24_ARB',
	'GL_MATRIX25_ARB',
	'GL_MATRIX26_ARB',
	'GL_MATRIX27_ARB',
	'GL_MATRIX28_ARB',
	'GL_MATRIX29_ARB',
	'GL_MATRIX2_ARB',
	'GL_MATRIX2_NV',
	'GL_MATRIX30_ARB',
	'GL_MATRIX31_ARB',
	'GL_MATRIX3_ARB',
	'GL_MATRIX3_NV',
	'GL_MATRIX4_ARB',
	'GL_MATRIX4_NV',
	'GL_MATRIX5_ARB',
	'GL_MATRIX5_NV',
	'GL_MATRIX6_ARB',
	'GL_MATRIX6_NV',
	'GL_MATRIX7_ARB',
	'GL_MATRIX7_NV',
	'GL_MATRIX8_ARB',
	'GL_MATRIX9_ARB',
	'GL_MATRIX_EXT',
	'GL_MATRIX_INDEX_ARRAY_ARB',
	'GL_MATRIX_INDEX_ARRAY_POINTER_ARB',
	'GL_MATRIX_INDEX_ARRAY_SIZE_ARB',
	'GL_MATRIX_INDEX_ARRAY_STRIDE_ARB',
	'GL_MATRIX_INDEX_ARRAY_TYPE_ARB',
	'GL_MATRIX_MODE',
	'GL_MATRIX_PALETTE_ARB',
	'GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI',
	'GL_MAT_AMBIENT_BIT_PGI',
	'GL_MAT_COLOR_INDEXES_BIT_PGI',
	'GL_MAT_DIFFUSE_BIT_PGI',
	'GL_MAT_EMISSION_BIT_PGI',
	'GL_MAT_SHININESS_BIT_PGI',
	'GL_MAT_SPECULAR_BIT_PGI',
	'GL_MAX',
	'GL_MAX_3D_TEXTURE_SIZE',
	'GL_MAX_3D_TEXTURE_SIZE_EXT',
	'GL_MAX_4D_TEXTURE_SIZE_SGIS',
	'GL_MAX_ACTIVE_LIGHTS_SGIX',
	'GL_MAX_ASYNC_DRAW_PIXELS_SGIX',
	'GL_MAX_ASYNC_HISTOGRAM_SGIX',
	'GL_MAX_ASYNC_READ_PIXELS_SGIX',
	'GL_MAX_ASYNC_TEX_IMAGE_SGIX',
	'GL_MAX_ATTRIB_STACK_DEPTH',
	'GL_MAX_CLIENT_ATTRIB_STACK_DEPTH',
	'GL_MAX_CLIPMAP_DEPTH_SGIX',
	'GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX',
	'GL_MAX_CLIP_PLANES',
	'GL_MAX_COLOR_ATTACHMENTS_EXT',
	'GL_MAX_COLOR_MATRIX_STACK_DEPTH',
	'GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI',
	'GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS',
	'GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB',
	'GL_MAX_CONVOLUTION_HEIGHT',
	'GL_MAX_CONVOLUTION_HEIGHT_EXT',
	'GL_MAX_CONVOLUTION_WIDTH',
	'GL_MAX_CONVOLUTION_WIDTH_EXT',
	'GL_MAX_CUBE_MAP_TEXTURE_SIZE',
	'GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB',
	'GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT',
	'GL_MAX_DEFORMATION_ORDER_SGIX',
	'GL_MAX_DRAW_BUFFERS',
	'GL_MAX_DRAW_BUFFERS_ARB',
	'GL_MAX_DRAW_BUFFERS_ATI',
	'GL_MAX_ELEMENTS_INDICES',
	'GL_MAX_ELEMENTS_INDICES_EXT',
	'GL_MAX_ELEMENTS_VERTICES',
	'GL_MAX_ELEMENTS_VERTICES_EXT',
	'GL_MAX_EVAL_ORDER',
	'GL_MAX_EXT',
	'GL_MAX_FOG_FUNC_POINTS_SGIS',
	'GL_MAX_FRAGMENT_LIGHTS_SGIX',
	'GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV',
	'GL_MAX_FRAGMENT_UNIFORM_COMPONENTS',
	'GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB',
	'GL_MAX_FRAMEZOOM_FACTOR_SGIX',
	'GL_MAX_GENERAL_COMBINERS_NV',
	'GL_MAX_LIGHTS',
	'GL_MAX_LIST_NESTING',
	'GL_MAX_MAP_TESSELLATION_NV',
	'GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB',
	'GL_MAX_MODELVIEW_STACK_DEPTH',
	'GL_MAX_NAME_STACK_DEPTH',
	'GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT',
	'GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT',
	'GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT',
	'GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT',
	'GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT',
	'GL_MAX_PALETTE_MATRICES_ARB',
	'GL_MAX_PIXEL_MAP_TABLE',
	'GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT',
	'GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI',
	'GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB',
	'GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB',
	'GL_MAX_PROGRAM_ATTRIBS_ARB',
	'GL_MAX_PROGRAM_CALL_DEPTH_NV',
	'GL_MAX_PROGRAM_ENV_PARAMETERS_ARB',
	'GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV',
	'GL_MAX_PROGRAM_IF_DEPTH_NV',
	'GL_MAX_PROGRAM_INSTRUCTIONS_ARB',
	'GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB',
	'GL_MAX_PROGRAM_LOOP_COUNT_NV',
	'GL_MAX_PROGRAM_LOOP_DEPTH_NV',
	'GL_MAX_PROGRAM_MATRICES_ARB',
	'GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB',
	'GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB',
	'GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB',
	'GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB',
	'GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB',
	'GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB',
	'GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB',
	'GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB',
	'GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB',
	'GL_MAX_PROGRAM_PARAMETERS_ARB',
	'GL_MAX_PROGRAM_TEMPORARIES_ARB',
	'GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB',
	'GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB',
	'GL_MAX_PROJECTION_STACK_DEPTH',
	'GL_MAX_RATIONAL_EVAL_ORDER_NV',
	'GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB',
	'GL_MAX_RECTANGLE_TEXTURE_SIZE_NV',
	'GL_MAX_RENDERBUFFER_SIZE_EXT',
	'GL_MAX_SHININESS_NV',
	'GL_MAX_SPOT_EXPONENT_NV',
	'GL_MAX_TEXTURE_COORDS',
	'GL_MAX_TEXTURE_COORDS_ARB',
	'GL_MAX_TEXTURE_COORDS_NV',
	'GL_MAX_TEXTURE_IMAGE_UNITS',
	'GL_MAX_TEXTURE_IMAGE_UNITS_ARB',
	'GL_MAX_TEXTURE_IMAGE_UNITS_NV',
	'GL_MAX_TEXTURE_LOD_BIAS',
	'GL_MAX_TEXTURE_LOD_BIAS_EXT',
	'GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT',
	'GL_MAX_TEXTURE_SIZE',
	'GL_MAX_TEXTURE_STACK_DEPTH',
	'GL_MAX_TEXTURE_UNITS',
	'GL_MAX_TEXTURE_UNITS_ARB',
	'GL_MAX_TRACK_MATRICES_NV',
	'GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV',
	'GL_MAX_VARYING_FLOATS',
	'GL_MAX_VARYING_FLOATS_ARB',
	'GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV',
	'GL_MAX_VERTEX_ATTRIBS',
	'GL_MAX_VERTEX_ATTRIBS_ARB',
	'GL_MAX_VERTEX_HINT_PGI',
	'GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT',
	'GL_MAX_VERTEX_SHADER_INVARIANTS_EXT',
	'GL_MAX_VERTEX_SHADER_LOCALS_EXT',
	'GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT',
	'GL_MAX_VERTEX_SHADER_VARIANTS_EXT',
	'GL_MAX_VERTEX_STREAMS_ATI',
	'GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS',
	'GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB',
	'GL_MAX_VERTEX_UNIFORM_COMPONENTS',
	'GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB',
	'GL_MAX_VERTEX_UNITS_ARB',
	'GL_MAX_VIEWPORT_DIMS',
	'GL_MIN',
	'GL_MINMAX',
	'GL_MINMAX_EXT',
	'GL_MINMAX_FORMAT',
	'GL_MINMAX_FORMAT_EXT',
	'GL_MINMAX_SINK',
	'GL_MINMAX_SINK_EXT',
	'GL_MIN_EXT',
	'GL_MIRRORED_REPEAT',
	'GL_MIRRORED_REPEAT_ARB',
	'GL_MIRRORED_REPEAT_IBM',
	'GL_MIRROR_CLAMP_ATI',
	'GL_MIRROR_CLAMP_EXT',
	'GL_MIRROR_CLAMP_TO_BORDER_EXT',
	'GL_MIRROR_CLAMP_TO_EDGE_ATI',
	'GL_MIRROR_CLAMP_TO_EDGE_EXT',
	'GL_MODELVIEW',
	'GL_MODELVIEW0_ARB',
	'GL_MODELVIEW0_EXT',
	'GL_MODELVIEW0_MATRIX_EXT',
	'GL_MODELVIEW0_STACK_DEPTH_EXT',
	'GL_MODELVIEW10_ARB',
	'GL_MODELVIEW11_ARB',
	'GL_MODELVIEW12_ARB',
	'GL_MODELVIEW13_ARB',
	'GL_MODELVIEW14_ARB',
	'GL_MODELVIEW15_ARB',
	'GL_MODELVIEW16_ARB',
	'GL_MODELVIEW17_ARB',
	'GL_MODELVIEW18_ARB',
	'GL_MODELVIEW19_ARB',
	'GL_MODELVIEW1_ARB',
	'GL_MODELVIEW1_EXT',
	'GL_MODELVIEW1_MATRIX_EXT',
	'GL_MODELVIEW1_STACK_DEPTH_EXT',
	'GL_MODELVIEW20_ARB',
	'GL_MODELVIEW21_ARB',
	'GL_MODELVIEW22_ARB',
	'GL_MODELVIEW23_ARB',
	'GL_MODELVIEW24_ARB',
	'GL_MODELVIEW25_ARB',
	'GL_MODELVIEW26_ARB',
	'GL_MODELVIEW27_ARB',
	'GL_MODELVIEW28_ARB',
	'GL_MODELVIEW29_ARB',
	'GL_MODELVIEW2_ARB',
	'GL_MODELVIEW30_ARB',
	'GL_MODELVIEW31_ARB',
	'GL_MODELVIEW3_ARB',
	'GL_MODELVIEW4_ARB',
	'GL_MODELVIEW5_ARB',
	'GL_MODELVIEW6_ARB',
	'GL_MODELVIEW7_ARB',
	'GL_MODELVIEW8_ARB',
	'GL_MODELVIEW9_ARB',
	'GL_MODELVIEW_MATRIX',
	'GL_MODELVIEW_PROJECTION_NV',
	'GL_MODELVIEW_STACK_DEPTH',
	'GL_MODULATE',
	'GL_MODULATE_ADD_ATI',
	'GL_MODULATE_SIGNED_ADD_ATI',
	'GL_MODULATE_SUBTRACT_ATI',
	'GL_MOV_ATI',
	'GL_MULT',
	'GL_MULTISAMPLE',
	'GL_MULTISAMPLE_3DFX',
	'GL_MULTISAMPLE_ARB',
	'GL_MULTISAMPLE_BIT',
	'GL_MULTISAMPLE_BIT_3DFX',
	'GL_MULTISAMPLE_BIT_ARB',
	'GL_MULTISAMPLE_BIT_EXT',
	'GL_MULTISAMPLE_EXT',
	'GL_MULTISAMPLE_FILTER_HINT_NV',
	'GL_MULTISAMPLE_SGIS',
	'GL_MUL_ATI',
	'GL_MVP_MATRIX_EXT',
	'GL_N3F_V3F',
	'GL_NAME_STACK_DEPTH',
	'GL_NAND',
	'GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI',
	'GL_NATIVE_GRAPHICS_END_HINT_PGI',
	'GL_NATIVE_GRAPHICS_HANDLE_PGI',
	'GL_NEAREST',
	'GL_NEAREST_CLIPMAP_LINEAR_SGIX',
	'GL_NEAREST_CLIPMAP_NEAREST_SGIX',
	'GL_NEAREST_MIPMAP_LINEAR',
	'GL_NEAREST_MIPMAP_NEAREST',
	'GL_NEGATE_BIT_ATI',
	'GL_NEGATIVE_ONE_EXT',
	'GL_NEGATIVE_W_EXT',
	'GL_NEGATIVE_X_EXT',
	'GL_NEGATIVE_Y_EXT',
	'GL_NEGATIVE_Z_EXT',
	'GL_NEVER',
	'GL_NICEST',
	'GL_NONE',
	'GL_NOOP',
	'GL_NOR',
	'GL_NORMALIZE',
	'GL_NORMALIZED_RANGE_EXT',
	'GL_NORMAL_ARRAY',
	'GL_NORMAL_ARRAY_BUFFER_BINDING',
	'GL_NORMAL_ARRAY_BUFFER_BINDING_ARB',
	'GL_NORMAL_ARRAY_COUNT_EXT',
	'GL_NORMAL_ARRAY_EXT',
	'GL_NORMAL_ARRAY_LIST_IBM',
	'GL_NORMAL_ARRAY_LIST_STRIDE_IBM',
	'GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL',
	'GL_NORMAL_ARRAY_POINTER',
	'GL_NORMAL_ARRAY_POINTER_EXT',
	'GL_NORMAL_ARRAY_STRIDE',
	'GL_NORMAL_ARRAY_STRIDE_EXT',
	'GL_NORMAL_ARRAY_TYPE',
	'GL_NORMAL_ARRAY_TYPE_EXT',
	'GL_NORMAL_BIT_PGI',
	'GL_NORMAL_MAP',
	'GL_NORMAL_MAP_ARB',
	'GL_NORMAL_MAP_EXT',
	'GL_NORMAL_MAP_NV',
	'GL_NOTEQUAL',
	'GL_NO_ERROR',
	'GL_NUM_COMPRESSED_TEXTURE_FORMATS',
	'GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB',
	'GL_NUM_FRAGMENT_CONSTANTS_ATI',
	'GL_NUM_FRAGMENT_REGISTERS_ATI',
	'GL_NUM_GENERAL_COMBINERS_NV',
	'GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI',
	'GL_NUM_INSTRUCTIONS_PER_PASS_ATI',
	'GL_NUM_INSTRUCTIONS_TOTAL_ATI',
	'GL_NUM_LOOPBACK_COMPONENTS_ATI',
	'GL_NUM_PASSES_ATI',
	'GL_OBJECT_ACTIVE_ATTRIBUTES_ARB',
	'GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB',
	'GL_OBJECT_ACTIVE_UNIFORMS_ARB',
	'GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB',
	'GL_OBJECT_ATTACHED_OBJECTS_ARB',
	'GL_OBJECT_BUFFER_SIZE_ATI',
	'GL_OBJECT_BUFFER_USAGE_ATI',
	'GL_OBJECT_COMPILE_STATUS_ARB',
	'GL_OBJECT_DELETE_STATUS_ARB',
	'GL_OBJECT_DISTANCE_TO_LINE_SGIS',
	'GL_OBJECT_DISTANCE_TO_POINT_SGIS',
	'GL_OBJECT_INFO_LOG_LENGTH_ARB',
	'GL_OBJECT_LINEAR',
	'GL_OBJECT_LINE_SGIS',
	'GL_OBJECT_LINK_STATUS_ARB',
	'GL_OBJECT_PLANE',
	'GL_OBJECT_POINT_SGIS',
	'GL_OBJECT_SHADER_SOURCE_LENGTH_ARB',
	'GL_OBJECT_SUBTYPE_ARB',
	'GL_OBJECT_TYPE_ARB',
	'GL_OBJECT_VALIDATE_STATUS_ARB',
	'GL_OCCLUSION_TEST_HP',
	'GL_OCCLUSION_TEST_RESULT_HP',
	'GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV',
	'GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV',
	'GL_OFFSET_HILO_TEXTURE_2D_NV',
	'GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV',
	'GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV',
	'GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV',
	'GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV',
	'GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV',
	'GL_OFFSET_TEXTURE_2D_BIAS_NV',
	'GL_OFFSET_TEXTURE_2D_MATRIX_NV',
	'GL_OFFSET_TEXTURE_2D_NV',
	'GL_OFFSET_TEXTURE_2D_SCALE_NV',
	'GL_OFFSET_TEXTURE_BIAS_NV',
	'GL_OFFSET_TEXTURE_MATRIX_NV',
	'GL_OFFSET_TEXTURE_RECTANGLE_NV',
	'GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV',
	'GL_OFFSET_TEXTURE_SCALE_NV',
	'GL_ONE',
	'GL_ONE_EXT',
	'GL_ONE_MINUS_CONSTANT_ALPHA',
	'GL_ONE_MINUS_CONSTANT_ALPHA_EXT',
	'GL_ONE_MINUS_CONSTANT_COLOR',
	'GL_ONE_MINUS_CONSTANT_COLOR_EXT',
	'GL_ONE_MINUS_DST_ALPHA',
	'GL_ONE_MINUS_DST_COLOR',
	'GL_ONE_MINUS_SRC_ALPHA',
	'GL_ONE_MINUS_SRC_COLOR',
	'GL_OPERAND0_ALPHA',
	'GL_OPERAND0_ALPHA_ARB',
	'GL_OPERAND0_ALPHA_EXT',
	'GL_OPERAND0_RGB',
	'GL_OPERAND0_RGB_ARB',
	'GL_OPERAND0_RGB_EXT',
	'GL_OPERAND1_ALPHA',
	'GL_OPERAND1_ALPHA_ARB',
	'GL_OPERAND1_ALPHA_EXT',
	'GL_OPERAND1_RGB',
	'GL_OPERAND1_RGB_ARB',
	'GL_OPERAND1_RGB_EXT',
	'GL_OPERAND2_ALPHA',
	'GL_OPERAND2_ALPHA_ARB',
	'GL_OPERAND2_ALPHA_EXT',
	'GL_OPERAND2_RGB',
	'GL_OPERAND2_RGB_ARB',
	'GL_OPERAND2_RGB_EXT',
	'GL_OPERAND3_ALPHA_NV',
	'GL_OPERAND3_RGB_NV',
	'GL_OP_ADD_EXT',
	'GL_OP_CLAMP_EXT',
	'GL_OP_CROSS_PRODUCT_EXT',
	'GL_OP_DOT3_EXT',
	'GL_OP_DOT4_EXT',
	'GL_OP_EXP_BASE_2_EXT',
	'GL_OP_FLOOR_EXT',
	'GL_OP_FRAC_EXT',
	'GL_OP_INDEX_EXT',
	'GL_OP_LOG_BASE_2_EXT',
	'GL_OP_MADD_EXT',
	'GL_OP_MAX_EXT',
	'GL_OP_MIN_EXT',
	'GL_OP_MOV_EXT',
	'GL_OP_MULTIPLY_MATRIX_EXT',
	'GL_OP_MUL_EXT',
	'GL_OP_NEGATE_EXT',
	'GL_OP_POWER_EXT',
	'GL_OP_RECIP_EXT',
	'GL_OP_RECIP_SQRT_EXT',
	'GL_OP_ROUND_EXT',
	'GL_OP_SET_GE_EXT',
	'GL_OP_SET_LT_EXT',
	'GL_OP_SUB_EXT',
	'GL_OR',
	'GL_ORDER',
	'GL_OR_INVERTED',
	'GL_OR_REVERSE',
	'GL_OUTPUT_COLOR0_EXT',
	'GL_OUTPUT_COLOR1_EXT',
	'GL_OUTPUT_FOG_EXT',
	'GL_OUTPUT_TEXTURE_COORD0_EXT',
	'GL_OUTPUT_TEXTURE_COORD10_EXT',
	'GL_OUTPUT_TEXTURE_COORD11_EXT',
	'GL_OUTPUT_TEXTURE_COORD12_EXT',
	'GL_OUTPUT_TEXTURE_COORD13_EXT',
	'GL_OUTPUT_TEXTURE_COORD14_EXT',
	'GL_OUTPUT_TEXTURE_COORD15_EXT',
	'GL_OUTPUT_TEXTURE_COORD16_EXT',
	'GL_OUTPUT_TEXTURE_COORD17_EXT',
	'GL_OUTPUT_TEXTURE_COORD18_EXT',
	'GL_OUTPUT_TEXTURE_COORD19_EXT',
	'GL_OUTPUT_TEXTURE_COORD1_EXT',
	'GL_OUTPUT_TEXTURE_COORD20_EXT',
	'GL_OUTPUT_TEXTURE_COORD21_EXT',
	'GL_OUTPUT_TEXTURE_COORD22_EXT',
	'GL_OUTPUT_TEXTURE_COORD23_EXT',
	'GL_OUTPUT_TEXTURE_COORD24_EXT',
	'GL_OUTPUT_TEXTURE_COORD25_EXT',
	'GL_OUTPUT_TEXTURE_COORD26_EXT',
	'GL_OUTPUT_TEXTURE_COORD27_EXT',
	'GL_OUTPUT_TEXTURE_COORD28_EXT',
	'GL_OUTPUT_TEXTURE_COORD29_EXT',
	'GL_OUTPUT_TEXTURE_COORD2_EXT',
	'GL_OUTPUT_TEXTURE_COORD30_EXT',
	'GL_OUTPUT_TEXTURE_COORD31_EXT',
	'GL_OUTPUT_TEXTURE_COORD3_EXT',
	'GL_OUTPUT_TEXTURE_COORD4_EXT',
	'GL_OUTPUT_TEXTURE_COORD5_EXT',
	'GL_OUTPUT_TEXTURE_COORD6_EXT',
	'GL_OUTPUT_TEXTURE_COORD7_EXT',
	'GL_OUTPUT_TEXTURE_COORD8_EXT',
	'GL_OUTPUT_TEXTURE_COORD9_EXT',
	'GL_OUTPUT_VERTEX_EXT',
	'GL_OUT_OF_MEMORY',
	'GL_PACK_ALIGNMENT',
	'GL_PACK_CMYK_HINT_EXT',
	'GL_PACK_IMAGE_DEPTH_SGIS',
	'GL_PACK_IMAGE_HEIGHT',
	'GL_PACK_IMAGE_HEIGHT_EXT',
	'GL_PACK_INVERT_MESA',
	'GL_PACK_LSB_FIRST',
	'GL_PACK_RESAMPLE_OML',
	'GL_PACK_RESAMPLE_SGIX',
	'GL_PACK_ROW_LENGTH',
	'GL_PACK_SKIP_IMAGES',
	'GL_PACK_SKIP_IMAGES_EXT',
	'GL_PACK_SKIP_PIXELS',
	'GL_PACK_SKIP_ROWS',
	'GL_PACK_SKIP_VOLUMES_SGIS',
	'GL_PACK_SUBSAMPLE_RATE_SGIX',
	'GL_PACK_SWAP_BYTES',
	'GL_PARALLEL_ARRAYS_INTEL',
	'GL_PASS_THROUGH_NV',
	'GL_PASS_THROUGH_TOKEN',
	'GL_PERSPECTIVE_CORRECTION_HINT',
	'GL_PERTURB_EXT',
	'GL_PER_STAGE_CONSTANTS_NV',
	'GL_PHONG_HINT_WIN',
	'GL_PHONG_WIN',
	'GL_PIXEL_COUNTER_BITS_NV',
	'GL_PIXEL_COUNT_AVAILABLE_NV',
	'GL_PIXEL_COUNT_NV',
	'GL_PIXEL_CUBIC_WEIGHT_EXT',
	'GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS',
	'GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS',
	'GL_PIXEL_GROUP_COLOR_SGIS',
	'GL_PIXEL_MAG_FILTER_EXT',
	'GL_PIXEL_MAP_A_TO_A',
	'GL_PIXEL_MAP_A_TO_A_SIZE',
	'GL_PIXEL_MAP_B_TO_B',
	'GL_PIXEL_MAP_B_TO_B_SIZE',
	'GL_PIXEL_MAP_G_TO_G',
	'GL_PIXEL_MAP_G_TO_G_SIZE',
	'GL_PIXEL_MAP_I_TO_A',
	'GL_PIXEL_MAP_I_TO_A_SIZE',
	'GL_PIXEL_MAP_I_TO_B',
	'GL_PIXEL_MAP_I_TO_B_SIZE',
	'GL_PIXEL_MAP_I_TO_G',
	'GL_PIXEL_MAP_I_TO_G_SIZE',
	'GL_PIXEL_MAP_I_TO_I',
	'GL_PIXEL_MAP_I_TO_I_SIZE',
	'GL_PIXEL_MAP_I_TO_R',
	'GL_PIXEL_MAP_I_TO_R_SIZE',
	'GL_PIXEL_MAP_R_TO_R',
	'GL_PIXEL_MAP_R_TO_R_SIZE',
	'GL_PIXEL_MAP_S_TO_S',
	'GL_PIXEL_MAP_S_TO_S_SIZE',
	'GL_PIXEL_MIN_FILTER_EXT',
	'GL_PIXEL_MODE_BIT',
	'GL_PIXEL_PACK_BUFFER_ARB',
	'GL_PIXEL_PACK_BUFFER_BINDING_ARB',
	'GL_PIXEL_PACK_BUFFER_BINDING_EXT',
	'GL_PIXEL_PACK_BUFFER_EXT',
	'GL_PIXEL_SUBSAMPLE_2424_SGIX',
	'GL_PIXEL_SUBSAMPLE_4242_SGIX',
	'GL_PIXEL_SUBSAMPLE_4444_SGIX',
	'GL_PIXEL_TEXTURE_SGIS',
	'GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX',
	'GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX',
	'GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX',
	'GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX',
	'GL_PIXEL_TEX_GEN_MODE_SGIX',
	'GL_PIXEL_TEX_GEN_Q_CEILING_SGIX',
	'GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX',
	'GL_PIXEL_TEX_GEN_Q_ROUND_SGIX',
	'GL_PIXEL_TEX_GEN_SGIX',
	'GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX',
	'GL_PIXEL_TILE_CACHE_INCREMENT_SGIX',
	'GL_PIXEL_TILE_CACHE_SIZE_SGIX',
	'GL_PIXEL_TILE_GRID_DEPTH_SGIX',
	'GL_PIXEL_TILE_GRID_HEIGHT_SGIX',
	'GL_PIXEL_TILE_GRID_WIDTH_SGIX',
	'GL_PIXEL_TILE_HEIGHT_SGIX',
	'GL_PIXEL_TILE_WIDTH_SGIX',
	'GL_PIXEL_TRANSFORM_2D_EXT',
	'GL_PIXEL_TRANSFORM_2D_MATRIX_EXT',
	'GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT',
	'GL_PIXEL_UNPACK_BUFFER_ARB',
	'GL_PIXEL_UNPACK_BUFFER_BINDING_ARB',
	'GL_PIXEL_UNPACK_BUFFER_BINDING_EXT',
	'GL_PIXEL_UNPACK_BUFFER_EXT',
	'GL_PN_TRIANGLES_ATI',
	'GL_PN_TRIANGLES_NORMAL_MODE_ATI',
	'GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI',
	'GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI',
	'GL_PN_TRIANGLES_POINT_MODE_ATI',
	'GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI',
	'GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI',
	'GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI',
	'GL_POINT',
	'GL_POINTS',
	'GL_POINT_BIT',
	'GL_POINT_DISTANCE_ATTENUATION',
	'GL_POINT_DISTANCE_ATTENUATION_ARB',
	'GL_POINT_FADE_THRESHOLD_SIZE',
	'GL_POINT_FADE_THRESHOLD_SIZE_ARB',
	'GL_POINT_FADE_THRESHOLD_SIZE_EXT',
	'GL_POINT_FADE_THRESHOLD_SIZE_SGIS',
	'GL_POINT_SIZE',
	'GL_POINT_SIZE_GRANULARITY',
	'GL_POINT_SIZE_MAX',
	'GL_POINT_SIZE_MAX_ARB',
	'GL_POINT_SIZE_MAX_EXT',
	'GL_POINT_SIZE_MAX_SGIS',
	'GL_POINT_SIZE_MIN',
	'GL_POINT_SIZE_MIN_ARB',
	'GL_POINT_SIZE_MIN_EXT',
	'GL_POINT_SIZE_MIN_SGIS',
	'GL_POINT_SIZE_RANGE',
	'GL_POINT_SMOOTH',
	'GL_POINT_SMOOTH_HINT',
	'GL_POINT_SPRITE',
	'GL_POINT_SPRITE_ARB',
	'GL_POINT_SPRITE_COORD_ORIGIN',
	'GL_POINT_SPRITE_NV',
	'GL_POINT_SPRITE_R_MODE_NV',
	'GL_POINT_TOKEN',
	'GL_POLYGON',
	'GL_POLYGON_BIT',
	'GL_POLYGON_MODE',
	'GL_POLYGON_OFFSET_BIAS_EXT',
	'GL_POLYGON_OFFSET_EXT',
	'GL_POLYGON_OFFSET_FACTOR',
	'GL_POLYGON_OFFSET_FACTOR_EXT',
	'GL_POLYGON_OFFSET_FILL',
	'GL_POLYGON_OFFSET_LINE',
	'GL_POLYGON_OFFSET_POINT',
	'GL_POLYGON_OFFSET_UNITS',
	'GL_POLYGON_SMOOTH',
	'GL_POLYGON_SMOOTH_HINT',
	'GL_POLYGON_STIPPLE',
	'GL_POLYGON_STIPPLE_BIT',
	'GL_POLYGON_TOKEN',
	'GL_POSITION',
	'GL_POST_COLOR_MATRIX_ALPHA_BIAS',
	'GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI',
	'GL_POST_COLOR_MATRIX_ALPHA_SCALE',
	'GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI',
	'GL_POST_COLOR_MATRIX_BLUE_BIAS',
	'GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI',
	'GL_POST_COLOR_MATRIX_BLUE_SCALE',
	'GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI',
	'GL_POST_COLOR_MATRIX_COLOR_TABLE',
	'GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI',
	'GL_POST_COLOR_MATRIX_GREEN_BIAS',
	'GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI',
	'GL_POST_COLOR_MATRIX_GREEN_SCALE',
	'GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI',
	'GL_POST_COLOR_MATRIX_RED_BIAS',
	'GL_POST_COLOR_MATRIX_RED_BIAS_SGI',
	'GL_POST_COLOR_MATRIX_RED_SCALE',
	'GL_POST_COLOR_MATRIX_RED_SCALE_SGI',
	'GL_POST_CONVOLUTION_ALPHA_BIAS',
	'GL_POST_CONVOLUTION_ALPHA_BIAS_EXT',
	'GL_POST_CONVOLUTION_ALPHA_SCALE',
	'GL_POST_CONVOLUTION_ALPHA_SCALE_EXT',
	'GL_POST_CONVOLUTION_BLUE_BIAS',
	'GL_POST_CONVOLUTION_BLUE_BIAS_EXT',
	'GL_POST_CONVOLUTION_BLUE_SCALE',
	'GL_POST_CONVOLUTION_BLUE_SCALE_EXT',
	'GL_POST_CONVOLUTION_COLOR_TABLE',
	'GL_POST_CONVOLUTION_COLOR_TABLE_SGI',
	'GL_POST_CONVOLUTION_GREEN_BIAS',
	'GL_POST_CONVOLUTION_GREEN_BIAS_EXT',
	'GL_POST_CONVOLUTION_GREEN_SCALE',
	'GL_POST_CONVOLUTION_GREEN_SCALE_EXT',
	'GL_POST_CONVOLUTION_RED_BIAS',
	'GL_POST_CONVOLUTION_RED_BIAS_EXT',
	'GL_POST_CONVOLUTION_RED_SCALE',
	'GL_POST_CONVOLUTION_RED_SCALE_EXT',
	'GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP',
	'GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX',
	'GL_POST_TEXTURE_FILTER_BIAS_SGIX',
	'GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX',
	'GL_POST_TEXTURE_FILTER_SCALE_SGIX',
	'GL_PREFER_DOUBLEBUFFER_HINT_PGI',
	'GL_PRESERVE_ATI',
	'GL_PREVIOUS',
	'GL_PREVIOUS_ARB',
	'GL_PREVIOUS_EXT',
	'GL_PREVIOUS_TEXTURE_INPUT_NV',
	'GL_PRIMARY_COLOR',
	'GL_PRIMARY_COLOR_ARB',
	'GL_PRIMARY_COLOR_EXT',
	'GL_PRIMARY_COLOR_NV',
	'GL_PRIMITIVE_RESTART_INDEX_NV',
	'GL_PRIMITIVE_RESTART_NV',
	'GL_PROGRAM_ADDRESS_REGISTERS_ARB',
	'GL_PROGRAM_ALU_INSTRUCTIONS_ARB',
	'GL_PROGRAM_ATTRIBS_ARB',
	'GL_PROGRAM_BINDING_ARB',
	'GL_PROGRAM_ERROR_POSITION_ARB',
	'GL_PROGRAM_ERROR_POSITION_NV',
	'GL_PROGRAM_ERROR_STRING_ARB',
	'GL_PROGRAM_ERROR_STRING_NV',
	'GL_PROGRAM_FORMAT_ARB',
	'GL_PROGRAM_FORMAT_ASCII_ARB',
	'GL_PROGRAM_INSTRUCTIONS_ARB',
	'GL_PROGRAM_LENGTH_ARB',
	'GL_PROGRAM_LENGTH_NV',
	'GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB',
	'GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB',
	'GL_PROGRAM_NATIVE_ATTRIBS_ARB',
	'GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB',
	'GL_PROGRAM_NATIVE_PARAMETERS_ARB',
	'GL_PROGRAM_NATIVE_TEMPORARIES_ARB',
	'GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB',
	'GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB',
	'GL_PROGRAM_OBJECT_ARB',
	'GL_PROGRAM_PARAMETERS_ARB',
	'GL_PROGRAM_PARAMETER_NV',
	'GL_PROGRAM_RESIDENT_NV',
	'GL_PROGRAM_STRING_ARB',
	'GL_PROGRAM_STRING_NV',
	'GL_PROGRAM_TARGET_NV',
	'GL_PROGRAM_TEMPORARIES_ARB',
	'GL_PROGRAM_TEX_INDIRECTIONS_ARB',
	'GL_PROGRAM_TEX_INSTRUCTIONS_ARB',
	'GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB',
	'GL_PROJECTION',
	'GL_PROJECTION_MATRIX',
	'GL_PROJECTION_STACK_DEPTH',
	'GL_PROXY_COLOR_TABLE',
	'GL_PROXY_COLOR_TABLE_SGI',
	'GL_PROXY_HISTOGRAM',
	'GL_PROXY_HISTOGRAM_EXT',
	'GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE',
	'GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI',
	'GL_PROXY_POST_CONVOLUTION_COLOR_TABLE',
	'GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI',
	'GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP',
	'GL_PROXY_TEXTURE_1D',
	'GL_PROXY_TEXTURE_1D_EXT',
	'GL_PROXY_TEXTURE_2D',
	'GL_PROXY_TEXTURE_2D_EXT',
	'GL_PROXY_TEXTURE_3D',
	'GL_PROXY_TEXTURE_3D_EXT',
	'GL_PROXY_TEXTURE_4D_SGIS',
	'GL_PROXY_TEXTURE_COLOR_TABLE_SGI',
	'GL_PROXY_TEXTURE_CUBE_MAP',
	'GL_PROXY_TEXTURE_CUBE_MAP_ARB',
	'GL_PROXY_TEXTURE_CUBE_MAP_EXT',
	'GL_PROXY_TEXTURE_RECTANGLE_ARB',
	'GL_PROXY_TEXTURE_RECTANGLE_NV',
	'GL_Q',
	'GL_QUADRATIC_ATTENUATION',
	'GL_QUADS',
	'GL_QUAD_ALPHA4_SGIS',
	'GL_QUAD_ALPHA8_SGIS',
	'GL_QUAD_INTENSITY4_SGIS',
	'GL_QUAD_INTENSITY8_SGIS',
	'GL_QUAD_LUMINANCE4_SGIS',
	'GL_QUAD_LUMINANCE8_SGIS',
	'GL_QUAD_MESH_SUN',
	'GL_QUAD_STRIP',
	'GL_QUAD_TEXTURE_SELECT_SGIS',
	'GL_QUARTER_BIT_ATI',
	'GL_QUERY_COUNTER_BITS',
	'GL_QUERY_COUNTER_BITS_ARB',
	'GL_QUERY_RESULT',
	'GL_QUERY_RESULT_ARB',
	'GL_QUERY_RESULT_AVAILABLE',
	'GL_QUERY_RESULT_AVAILABLE_ARB',
	'GL_R',
	'GL_R1UI_C3F_V3F_SUN',
	'GL_R1UI_C4F_N3F_V3F_SUN',
	'GL_R1UI_C4UB_V3F_SUN',
	'GL_R1UI_N3F_V3F_SUN',
	'GL_R1UI_T2F_C4F_N3F_V3F_SUN',
	'GL_R1UI_T2F_N3F_V3F_SUN',
	'GL_R1UI_T2F_V3F_SUN',
	'GL_R1UI_V3F_SUN',
	'GL_R3_G3_B2',
	'GL_RASTER_POSITION_UNCLIPPED_IBM',
	'GL_READ_BUFFER',
	'GL_READ_ONLY',
	'GL_READ_ONLY_ARB',
	'GL_READ_PIXEL_DATA_RANGE_LENGTH_NV',
	'GL_READ_PIXEL_DATA_RANGE_NV',
	'GL_READ_PIXEL_DATA_RANGE_POINTER_NV',
	'GL_READ_WRITE',
	'GL_READ_WRITE_ARB',
	'GL_RECLAIM_MEMORY_HINT_PGI',
	'GL_RED',
	'GL_REDUCE',
	'GL_REDUCE_EXT',
	'GL_RED_BIAS',
	'GL_RED_BITS',
	'GL_RED_BIT_ATI',
	'GL_RED_MAX_CLAMP_INGR',
	'GL_RED_MIN_CLAMP_INGR',
	'GL_RED_SCALE',
	'GL_REFERENCE_PLANE_EQUATION_SGIX',
	'GL_REFERENCE_PLANE_SGIX',
	'GL_REFLECTION_MAP',
	'GL_REFLECTION_MAP_ARB',
	'GL_REFLECTION_MAP_EXT',
	'GL_REFLECTION_MAP_NV',
	'GL_REGISTER_COMBINERS_NV',
	'GL_REG_0_ATI',
	'GL_REG_10_ATI',
	'GL_REG_11_ATI',
	'GL_REG_12_ATI',
	'GL_REG_13_ATI',
	'GL_REG_14_ATI',
	'GL_REG_15_ATI',
	'GL_REG_16_ATI',
	'GL_REG_17_ATI',
	'GL_REG_18_ATI',
	'GL_REG_19_ATI',
	'GL_REG_1_ATI',
	'GL_REG_20_ATI',
	'GL_REG_21_ATI',
	'GL_REG_22_ATI',
	'GL_REG_23_ATI',
	'GL_REG_24_ATI',
	'GL_REG_25_ATI',
	'GL_REG_26_ATI',
	'GL_REG_27_ATI',
	'GL_REG_28_ATI',
	'GL_REG_29_ATI',
	'GL_REG_2_ATI',
	'GL_REG_30_ATI',
	'GL_REG_31_ATI',
	'GL_REG_3_ATI',
	'GL_REG_4_ATI',
	'GL_REG_5_ATI',
	'GL_REG_6_ATI',
	'GL_REG_7_ATI',
	'GL_REG_8_ATI',
	'GL_REG_9_ATI',
	'GL_RENDER',
	'GL_RENDERBUFFER_ALPHA_SIZE_EXT',
	'GL_RENDERBUFFER_BINDING_EXT',
	'GL_RENDERBUFFER_BLUE_SIZE_EXT',
	'GL_RENDERBUFFER_DEPTH_SIZE_EXT',
	'GL_RENDERBUFFER_EXT',
	'GL_RENDERBUFFER_GREEN_SIZE_EXT',
	'GL_RENDERBUFFER_HEIGHT_EXT',
	'GL_RENDERBUFFER_INTERNAL_FORMAT_EXT',
	'GL_RENDERBUFFER_RED_SIZE_EXT',
	'GL_RENDERBUFFER_STENCIL_SIZE_EXT',
	'GL_RENDERBUFFER_WIDTH_EXT',
	'GL_RENDERER',
	'GL_RENDER_MODE',
	'GL_REPEAT',
	'GL_REPLACE',
	'GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN',
	'GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN',
	'GL_REPLACEMENT_CODE_ARRAY_SUN',
	'GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN',
	'GL_REPLACEMENT_CODE_SUN',
	'GL_REPLACE_EXT',
	'GL_REPLACE_MIDDLE_SUN',
	'GL_REPLACE_OLDEST_SUN',
	'GL_REPLICATE_BORDER',
	'GL_REPLICATE_BORDER_HP',
	'GL_RESAMPLE_AVERAGE_OML',
	'GL_RESAMPLE_DECIMATE_OML',
	'GL_RESAMPLE_DECIMATE_SGIX',
	'GL_RESAMPLE_REPLICATE_OML',
	'GL_RESAMPLE_REPLICATE_SGIX',
	'GL_RESAMPLE_ZERO_FILL_OML',
	'GL_RESAMPLE_ZERO_FILL_SGIX',
	'GL_RESCALE_NORMAL',
	'GL_RESCALE_NORMAL_EXT',
	'GL_RESTART_SUN',
	'GL_RETURN',
	'GL_RGB',
	'GL_RGB10',
	'GL_RGB10_A2',
	'GL_RGB10_A2_EXT',
	'GL_RGB10_EXT',
	'GL_RGB12',
	'GL_RGB12_EXT',
	'GL_RGB16',
	'GL_RGB16F_ARB',
	'GL_RGB16_EXT',
	'GL_RGB2_EXT',
	'GL_RGB32F_ARB',
	'GL_RGB4',
	'GL_RGB4_EXT',
	'GL_RGB4_S3TC',
	'GL_RGB5',
	'GL_RGB5_A1',
	'GL_RGB5_A1_EXT',
	'GL_RGB5_EXT',
	'GL_RGB8',
	'GL_RGB8_EXT',
	'GL_RGBA',
	'GL_RGBA12',
	'GL_RGBA12_EXT',
	'GL_RGBA16',
	'GL_RGBA16F_ARB',
	'GL_RGBA16_EXT',
	'GL_RGBA2',
	'GL_RGBA2_EXT',
	'GL_RGBA32F_ARB',
	'GL_RGBA4',
	'GL_RGBA4_EXT',
	'GL_RGBA4_S3TC',
	'GL_RGBA8',
	'GL_RGBA8_EXT',
	'GL_RGBA_FLOAT16_ATI',
	'GL_RGBA_FLOAT32_ATI',
	'GL_RGBA_FLOAT_MODE_ARB',
	'GL_RGBA_MODE',
	'GL_RGBA_S3TC',
	'GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV',
	'GL_RGB_FLOAT16_ATI',
	'GL_RGB_FLOAT32_ATI',
	'GL_RGB_S3TC',
	'GL_RGB_SCALE',
	'GL_RGB_SCALE_ARB',
	'GL_RGB_SCALE_EXT',
	'GL_RIGHT',
	'GL_S',
	'GL_SAMPLER_1D',
	'GL_SAMPLER_1D_ARB',
	'GL_SAMPLER_1D_SHADOW',
	'GL_SAMPLER_1D_SHADOW_ARB',
	'GL_SAMPLER_2D',
	'GL_SAMPLER_2D_ARB',
	'GL_SAMPLER_2D_RECT_ARB',
	'GL_SAMPLER_2D_RECT_SHADOW_ARB',
	'GL_SAMPLER_2D_SHADOW',
	'GL_SAMPLER_2D_SHADOW_ARB',
	'GL_SAMPLER_3D',
	'GL_SAMPLER_3D_ARB',
	'GL_SAMPLER_CUBE',
	'GL_SAMPLER_CUBE_ARB',
	'GL_SAMPLES',
	'GL_SAMPLES_3DFX',
	'GL_SAMPLES_ARB',
	'GL_SAMPLES_EXT',
	'GL_SAMPLES_PASSED',
	'GL_SAMPLES_PASSED_ARB',
	'GL_SAMPLES_SGIS',
	'GL_SAMPLE_ALPHA_TO_COVERAGE',
	'GL_SAMPLE_ALPHA_TO_COVERAGE_ARB',
	'GL_SAMPLE_ALPHA_TO_MASK_EXT',
	'GL_SAMPLE_ALPHA_TO_MASK_SGIS',
	'GL_SAMPLE_ALPHA_TO_ONE',
	'GL_SAMPLE_ALPHA_TO_ONE_ARB',
	'GL_SAMPLE_ALPHA_TO_ONE_EXT',
	'GL_SAMPLE_ALPHA_TO_ONE_SGIS',
	'GL_SAMPLE_BUFFERS',
	'GL_SAMPLE_BUFFERS_3DFX',
	'GL_SAMPLE_BUFFERS_ARB',
	'GL_SAMPLE_BUFFERS_EXT',
	'GL_SAMPLE_BUFFERS_SGIS',
	'GL_SAMPLE_COVERAGE',
	'GL_SAMPLE_COVERAGE_ARB',
	'GL_SAMPLE_COVERAGE_INVERT',
	'GL_SAMPLE_COVERAGE_INVERT_ARB',
	'GL_SAMPLE_COVERAGE_VALUE',
	'GL_SAMPLE_COVERAGE_VALUE_ARB',
	'GL_SAMPLE_MASK_EXT',
	'GL_SAMPLE_MASK_INVERT_EXT',
	'GL_SAMPLE_MASK_INVERT_SGIS',
	'GL_SAMPLE_MASK_SGIS',
	'GL_SAMPLE_MASK_VALUE_EXT',
	'GL_SAMPLE_MASK_VALUE_SGIS',
	'GL_SAMPLE_PATTERN_EXT',
	'GL_SAMPLE_PATTERN_SGIS',
	'GL_SATURATE_BIT_ATI',
	'GL_SCALAR_EXT',
	'GL_SCALEBIAS_HINT_SGIX',
	'GL_SCALE_BY_FOUR_NV',
	'GL_SCALE_BY_ONE_HALF_NV',
	'GL_SCALE_BY_TWO_NV',
	'GL_SCISSOR_BIT',
	'GL_SCISSOR_BOX',
	'GL_SCISSOR_TEST',
	'GL_SCREEN_COORDINATES_REND',
	'GL_SECONDARY_COLOR_ARRAY',
	'GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING',
	'GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB',
	'GL_SECONDARY_COLOR_ARRAY_EXT',
	'GL_SECONDARY_COLOR_ARRAY_LIST_IBM',
	'GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM',
	'GL_SECONDARY_COLOR_ARRAY_POINTER',
	'GL_SECONDARY_COLOR_ARRAY_POINTER_EXT',
	'GL_SECONDARY_COLOR_ARRAY_SIZE',
	'GL_SECONDARY_COLOR_ARRAY_SIZE_EXT',
	'GL_SECONDARY_COLOR_ARRAY_STRIDE',
	'GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT',
	'GL_SECONDARY_COLOR_ARRAY_TYPE',
	'GL_SECONDARY_COLOR_ARRAY_TYPE_EXT',
	'GL_SECONDARY_COLOR_NV',
	'GL_SECONDARY_INTERPOLATOR_ATI',
	'GL_SELECT',
	'GL_SELECTION_BUFFER_POINTER',
	'GL_SELECTION_BUFFER_SIZE',
	'GL_SEPARABLE_2D',
	'GL_SEPARABLE_2D_EXT',
	'GL_SEPARATE_SPECULAR_COLOR',
	'GL_SEPARATE_SPECULAR_COLOR_EXT',
	'GL_SET',
	'GL_SHADER_CONSISTENT_NV',
	'GL_SHADER_OBJECT_ARB',
	'GL_SHADER_OPERATION_NV',
	'GL_SHADER_SOURCE_LENGTH',
	'GL_SHADER_TYPE',
	'GL_SHADE_MODEL',
	'GL_SHADING_LANGUAGE_VERSION',
	'GL_SHADING_LANGUAGE_VERSION_ARB',
	'GL_SHADOW_AMBIENT_SGIX',
	'GL_SHADOW_ATTENUATION_EXT',
	'GL_SHARED_TEXTURE_PALETTE_EXT',
	'GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS',
	'GL_SHININESS',
	'GL_SHORT',
	'GL_SIGNED_ALPHA8_NV',
	'GL_SIGNED_ALPHA_NV',
	'GL_SIGNED_HILO16_NV',
	'GL_SIGNED_HILO8_NV',
	'GL_SIGNED_HILO_NV',
	'GL_SIGNED_IDENTITY_NV',
	'GL_SIGNED_INTENSITY8_NV',
	'GL_SIGNED_INTENSITY_NV',
	'GL_SIGNED_LUMINANCE8_ALPHA8_NV',
	'GL_SIGNED_LUMINANCE8_NV',
	'GL_SIGNED_LUMINANCE_ALPHA_NV',
	'GL_SIGNED_LUMINANCE_NV',
	'GL_SIGNED_NEGATE_NV',
	'GL_SIGNED_RGB8_NV',
	'GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV',
	'GL_SIGNED_RGBA8_NV',
	'GL_SIGNED_RGBA_NV',
	'GL_SIGNED_RGB_NV',
	'GL_SIGNED_RGB_UNSIGNED_ALPHA_NV',
	'GL_SINGLE_COLOR',
	'GL_SINGLE_COLOR_EXT',
	'GL_SLICE_ACCUM_SUN',
	'GL_SMOOTH',
	'GL_SMOOTH_LINE_WIDTH_GRANULARITY',
	'GL_SMOOTH_LINE_WIDTH_RANGE',
	'GL_SMOOTH_POINT_SIZE_GRANULARITY',
	'GL_SMOOTH_POINT_SIZE_RANGE',
	'GL_SOURCE0_ALPHA',
	'GL_SOURCE0_ALPHA_ARB',
	'GL_SOURCE0_ALPHA_EXT',
	'GL_SOURCE0_RGB',
	'GL_SOURCE0_RGB_ARB',
	'GL_SOURCE0_RGB_EXT',
	'GL_SOURCE1_ALPHA',
	'GL_SOURCE1_ALPHA_ARB',
	'GL_SOURCE1_ALPHA_EXT',
	'GL_SOURCE1_RGB',
	'GL_SOURCE1_RGB_ARB',
	'GL_SOURCE1_RGB_EXT',
	'GL_SOURCE2_ALPHA',
	'GL_SOURCE2_ALPHA_ARB',
	'GL_SOURCE2_ALPHA_EXT',
	'GL_SOURCE2_RGB',
	'GL_SOURCE2_RGB_ARB',
	'GL_SOURCE2_RGB_EXT',
	'GL_SOURCE3_ALPHA_NV',
	'GL_SOURCE3_RGB_NV',
	'GL_SPARE0_NV',
	'GL_SPARE0_PLUS_SECONDARY_COLOR_NV',
	'GL_SPARE1_NV',
	'GL_SPECULAR',
	'GL_SPHERE_MAP',
	'GL_SPOT_CUTOFF',
	'GL_SPOT_DIRECTION',
	'GL_SPOT_EXPONENT',
	'GL_SPRITE_AXIAL_SGIX',
	'GL_SPRITE_AXIS_SGIX',
	'GL_SPRITE_EYE_ALIGNED_SGIX',
	'GL_SPRITE_MODE_SGIX',
	'GL_SPRITE_OBJECT_ALIGNED_SGIX',
	'GL_SPRITE_SGIX',
	'GL_SPRITE_TRANSLATION_SGIX',
	'GL_SRC0_ALPHA',
	'GL_SRC0_RGB',
	'GL_SRC1_ALPHA',
	'GL_SRC1_RGB',
	'GL_SRC2_ALPHA',
	'GL_SRC2_RGB',
	'GL_SRC_ALPHA',
	'GL_SRC_ALPHA_SATURATE',
	'GL_SRC_COLOR',
	'GL_STACK_OVERFLOW',
	'GL_STACK_UNDERFLOW',
	'GL_STATIC_ATI',
	'GL_STATIC_COPY',
	'GL_STATIC_COPY_ARB',
	'GL_STATIC_DRAW',
	'GL_STATIC_DRAW_ARB',
	'GL_STATIC_READ',
	'GL_STATIC_READ_ARB',
	'GL_STENCIL',
	'GL_STENCIL_ATTACHMENT_EXT',
	'GL_STENCIL_BACK_FAIL',
	'GL_STENCIL_BACK_FAIL_ATI',
	'GL_STENCIL_BACK_FUNC',
	'GL_STENCIL_BACK_FUNC_ATI',
	'GL_STENCIL_BACK_PASS_DEPTH_FAIL',
	'GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI',
	'GL_STENCIL_BACK_PASS_DEPTH_PASS',
	'GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI',
	'GL_STENCIL_BACK_REF',
	'GL_STENCIL_BACK_VALUE_MASK',
	'GL_STENCIL_BACK_WRITEMASK',
	'GL_STENCIL_BITS',
	'GL_STENCIL_BUFFER_BIT',
	'GL_STENCIL_CLEAR_VALUE',
	'GL_STENCIL_FAIL',
	'GL_STENCIL_FUNC',
	'GL_STENCIL_INDEX',
	'GL_STENCIL_INDEX16_EXT',
	'GL_STENCIL_INDEX1_EXT',
	'GL_STENCIL_INDEX4_EXT',
	'GL_STENCIL_INDEX8_EXT',
	'GL_STENCIL_PASS_DEPTH_FAIL',
	'GL_STENCIL_PASS_DEPTH_PASS',
	'GL_STENCIL_REF',
	'GL_STENCIL_TEST',
	'GL_STENCIL_TEST_TWO_SIDE_EXT',
	'GL_STENCIL_VALUE_MASK',
	'GL_STENCIL_WRITEMASK',
	'GL_STEREO',
	'GL_STORAGE_CACHED_APPLE',
	'GL_STORAGE_SHARED_APPLE',
	'GL_STREAM_COPY',
	'GL_STREAM_COPY_ARB',
	'GL_STREAM_DRAW',
	'GL_STREAM_DRAW_ARB',
	'GL_STREAM_READ',
	'GL_STREAM_READ_ARB',
	'GL_STRICT_DEPTHFUNC_HINT_PGI',
	'GL_STRICT_LIGHTING_HINT_PGI',
	'GL_STRICT_SCISSOR_HINT_PGI',
	'GL_SUBPIXEL_BITS',
	'GL_SUBTRACT',
	'GL_SUBTRACT_ARB',
	'GL_SUB_ATI',
	'GL_SWIZZLE_STQ_ATI',
	'GL_SWIZZLE_STQ_DQ_ATI',
	'GL_SWIZZLE_STRQ_ATI',
	'GL_SWIZZLE_STRQ_DQ_ATI',
	'GL_SWIZZLE_STR_ATI',
	'GL_SWIZZLE_STR_DR_ATI',
	'GL_T',
	'GL_T2F_C3F_V3F',
	'GL_T2F_C4F_N3F_V3F',
	'GL_T2F_C4UB_V3F',
	'GL_T2F_IUI_N3F_V2F_EXT',
	'GL_T2F_IUI_N3F_V3F_EXT',
	'GL_T2F_IUI_V2F_EXT',
	'GL_T2F_IUI_V3F_EXT',
	'GL_T2F_N3F_V3F',
	'GL_T2F_V3F',
	'GL_T4F_C4F_N3F_V4F',
	'GL_T4F_V4F',
	'GL_TABLE_TOO_LARGE',
	'GL_TABLE_TOO_LARGE_EXT',
	'GL_TANGENT_ARRAY_EXT',
	'GL_TANGENT_ARRAY_POINTER_EXT',
	'GL_TANGENT_ARRAY_STRIDE_EXT',
	'GL_TANGENT_ARRAY_TYPE_EXT',
	'GL_TEXCOORD1_BIT_PGI',
	'GL_TEXCOORD2_BIT_PGI',
	'GL_TEXCOORD3_BIT_PGI',
	'GL_TEXCOORD4_BIT_PGI',
	'GL_TEXTURE',
	'GL_TEXTURE0',
	'GL_TEXTURE0_ARB',
	'GL_TEXTURE1',
	'GL_TEXTURE10',
	'GL_TEXTURE10_ARB',
	'GL_TEXTURE11',
	'GL_TEXTURE11_ARB',
	'GL_TEXTURE12',
	'GL_TEXTURE12_ARB',
	'GL_TEXTURE13',
	'GL_TEXTURE13_ARB',
	'GL_TEXTURE14',
	'GL_TEXTURE14_ARB',
	'GL_TEXTURE15',
	'GL_TEXTURE15_ARB',
	'GL_TEXTURE16',
	'GL_TEXTURE16_ARB',
	'GL_TEXTURE17',
	'GL_TEXTURE17_ARB',
	'GL_TEXTURE18',
	'GL_TEXTURE18_ARB',
	'GL_TEXTURE19',
	'GL_TEXTURE19_ARB',
	'GL_TEXTURE1_ARB',
	'GL_TEXTURE2',
	'GL_TEXTURE20',
	'GL_TEXTURE20_ARB',
	'GL_TEXTURE21',
	'GL_TEXTURE21_ARB',
	'GL_TEXTURE22',
	'GL_TEXTURE22_ARB',
	'GL_TEXTURE23',
	'GL_TEXTURE23_ARB',
	'GL_TEXTURE24',
	'GL_TEXTURE24_ARB',
	'GL_TEXTURE25',
	'GL_TEXTURE25_ARB',
	'GL_TEXTURE26',
	'GL_TEXTURE26_ARB',
	'GL_TEXTURE27',
	'GL_TEXTURE27_ARB',
	'GL_TEXTURE28',
	'GL_TEXTURE28_ARB',
	'GL_TEXTURE29',
	'GL_TEXTURE29_ARB',
	'GL_TEXTURE2_ARB',
	'GL_TEXTURE3',
	'GL_TEXTURE30',
	'GL_TEXTURE30_ARB',
	'GL_TEXTURE31',
	'GL_TEXTURE31_ARB',
	'GL_TEXTURE3_ARB',
	'GL_TEXTURE4',
	'GL_TEXTURE4_ARB',
	'GL_TEXTURE5',
	'GL_TEXTURE5_ARB',
	'GL_TEXTURE6',
	'GL_TEXTURE6_ARB',
	'GL_TEXTURE7',
	'GL_TEXTURE7_ARB',
	'GL_TEXTURE8',
	'GL_TEXTURE8_ARB',
	'GL_TEXTURE9',
	'GL_TEXTURE9_ARB',
	'GL_TEXTURE_1D',
	'GL_TEXTURE_1D_BINDING_EXT',
	'GL_TEXTURE_2D',
	'GL_TEXTURE_2D_BINDING_EXT',
	'GL_TEXTURE_3D',
	'GL_TEXTURE_3D_BINDING_EXT',
	'GL_TEXTURE_3D_EXT',
	'GL_TEXTURE_4DSIZE_SGIS',
	'GL_TEXTURE_4D_BINDING_SGIS',
	'GL_TEXTURE_4D_SGIS',
	'GL_TEXTURE_ALPHA_SIZE',
	'GL_TEXTURE_ALPHA_SIZE_EXT',
	'GL_TEXTURE_ALPHA_TYPE_ARB',
	'GL_TEXTURE_APPLICATION_MODE_EXT',
	'GL_TEXTURE_BASE_LEVEL',
	'GL_TEXTURE_BASE_LEVEL_SGIS',
	'GL_TEXTURE_BINDING_1D',
	'GL_TEXTURE_BINDING_2D',
	'GL_TEXTURE_BINDING_3D',
	'GL_TEXTURE_BINDING_CUBE_MAP',
	'GL_TEXTURE_BINDING_CUBE_MAP_ARB',
	'GL_TEXTURE_BINDING_CUBE_MAP_EXT',
	'GL_TEXTURE_BINDING_RECTANGLE_ARB',
	'GL_TEXTURE_BINDING_RECTANGLE_NV',
	'GL_TEXTURE_BIT',
	'GL_TEXTURE_BLUE_SIZE',
	'GL_TEXTURE_BLUE_SIZE_EXT',
	'GL_TEXTURE_BLUE_TYPE_ARB',
	'GL_TEXTURE_BORDER',
	'GL_TEXTURE_BORDER_COLOR',
	'GL_TEXTURE_BORDER_VALUES_NV',
	'GL_TEXTURE_CLIPMAP_CENTER_SGIX',
	'GL_TEXTURE_CLIPMAP_DEPTH_SGIX',
	'GL_TEXTURE_CLIPMAP_FRAME_SGIX',
	'GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX',
	'GL_TEXTURE_CLIPMAP_OFFSET_SGIX',
	'GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX',
	'GL_TEXTURE_COLOR_TABLE_SGI',
	'GL_TEXTURE_COLOR_WRITEMASK_SGIS',
	'GL_TEXTURE_COMPARE_FAIL_VALUE_ARB',
	'GL_TEXTURE_COMPARE_FUNC',
	'GL_TEXTURE_COMPARE_FUNC_ARB',
	'GL_TEXTURE_COMPARE_MODE',
	'GL_TEXTURE_COMPARE_MODE_ARB',
	'GL_TEXTURE_COMPARE_OPERATOR_SGIX',
	'GL_TEXTURE_COMPARE_SGIX',
	'GL_TEXTURE_COMPONENTS',
	'GL_TEXTURE_COMPRESSED',
	'GL_TEXTURE_COMPRESSED_ARB',
	'GL_TEXTURE_COMPRESSED_IMAGE_SIZE',
	'GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB',
	'GL_TEXTURE_COMPRESSION_HINT',
	'GL_TEXTURE_COMPRESSION_HINT_ARB',
	'GL_TEXTURE_CONSTANT_DATA_SUNX',
	'GL_TEXTURE_COORD_ARRAY',
	'GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING',
	'GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB',
	'GL_TEXTURE_COORD_ARRAY_COUNT_EXT',
	'GL_TEXTURE_COORD_ARRAY_EXT',
	'GL_TEXTURE_COORD_ARRAY_LIST_IBM',
	'GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM',
	'GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL',
	'GL_TEXTURE_COORD_ARRAY_POINTER',
	'GL_TEXTURE_COORD_ARRAY_POINTER_EXT',
	'GL_TEXTURE_COORD_ARRAY_SIZE',
	'GL_TEXTURE_COORD_ARRAY_SIZE_EXT',
	'GL_TEXTURE_COORD_ARRAY_STRIDE',
	'GL_TEXTURE_COORD_ARRAY_STRIDE_EXT',
	'GL_TEXTURE_COORD_ARRAY_TYPE',
	'GL_TEXTURE_COORD_ARRAY_TYPE_EXT',
	'GL_TEXTURE_CUBE_MAP',
	'GL_TEXTURE_CUBE_MAP_ARB',
	'GL_TEXTURE_CUBE_MAP_EXT',
	'GL_TEXTURE_CUBE_MAP_NEGATIVE_X',
	'GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB',
	'GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT',
	'GL_TEXTURE_CUBE_MAP_NEGATIVE_Y',
	'GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB',
	'GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT',
	'GL_TEXTURE_CUBE_MAP_NEGATIVE_Z',
	'GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB',
	'GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT',
	'GL_TEXTURE_CUBE_MAP_POSITIVE_X',
	'GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB',
	'GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT',
	'GL_TEXTURE_CUBE_MAP_POSITIVE_Y',
	'GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB',
	'GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT',
	'GL_TEXTURE_CUBE_MAP_POSITIVE_Z',
	'GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB',
	'GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT',
	'GL_TEXTURE_DEFORMATION_BIT_SGIX',
	'GL_TEXTURE_DEFORMATION_SGIX',
	'GL_TEXTURE_DEPTH',
	'GL_TEXTURE_DEPTH_EXT',
	'GL_TEXTURE_DEPTH_SIZE',
	'GL_TEXTURE_DEPTH_SIZE_ARB',
	'GL_TEXTURE_DEPTH_TYPE_ARB',
	'GL_TEXTURE_DS_SIZE_NV',
	'GL_TEXTURE_DT_SIZE_NV',
	'GL_TEXTURE_ENV',
	'GL_TEXTURE_ENV_BIAS_SGIX',
	'GL_TEXTURE_ENV_COLOR',
	'GL_TEXTURE_ENV_MODE',
	'GL_TEXTURE_FILTER4_SIZE_SGIS',
	'GL_TEXTURE_FILTER_CONTROL',
	'GL_TEXTURE_FILTER_CONTROL_EXT',
	'GL_TEXTURE_FLOAT_COMPONENTS_NV',
	'GL_TEXTURE_GEN_MODE',
	'GL_TEXTURE_GEN_Q',
	'GL_TEXTURE_GEN_R',
	'GL_TEXTURE_GEN_S',
	'GL_TEXTURE_GEN_T',
	'GL_TEXTURE_GEQUAL_R_SGIX',
	'GL_TEXTURE_GREEN_SIZE',
	'GL_TEXTURE_GREEN_SIZE_EXT',
	'GL_TEXTURE_GREEN_TYPE_ARB',
	'GL_TEXTURE_HEIGHT',
	'GL_TEXTURE_HI_SIZE_NV',
	'GL_TEXTURE_INDEX_SIZE_EXT',
	'GL_TEXTURE_INTENSITY_SIZE',
	'GL_TEXTURE_INTENSITY_SIZE_EXT',
	'GL_TEXTURE_INTENSITY_TYPE_ARB',
	'GL_TEXTURE_INTERNAL_FORMAT',
	'GL_TEXTURE_LEQUAL_R_SGIX',
	'GL_TEXTURE_LIGHTING_MODE_HP',
	'GL_TEXTURE_LIGHT_EXT',
	'GL_TEXTURE_LOD_BIAS',
	'GL_TEXTURE_LOD_BIAS_EXT',
	'GL_TEXTURE_LOD_BIAS_R_SGIX',
	'GL_TEXTURE_LOD_BIAS_S_SGIX',
	'GL_TEXTURE_LOD_BIAS_T_SGIX',
	'GL_TEXTURE_LO_SIZE_NV',
	'GL_TEXTURE_LUMINANCE_SIZE',
	'GL_TEXTURE_LUMINANCE_SIZE_EXT',
	'GL_TEXTURE_LUMINANCE_TYPE_ARB',
	'GL_TEXTURE_MAG_FILTER',
	'GL_TEXTURE_MAG_SIZE_NV',
	'GL_TEXTURE_MATERIAL_FACE_EXT',
	'GL_TEXTURE_MATERIAL_PARAMETER_EXT',
	'GL_TEXTURE_MATRIX',
	'GL_TEXTURE_MAX_ANISOTROPY_EXT',
	'GL_TEXTURE_MAX_CLAMP_R_SGIX',
	'GL_TEXTURE_MAX_CLAMP_S_SGIX',
	'GL_TEXTURE_MAX_CLAMP_T_SGIX',
	'GL_TEXTURE_MAX_LEVEL',
	'GL_TEXTURE_MAX_LEVEL_SGIS',
	'GL_TEXTURE_MAX_LOD',
	'GL_TEXTURE_MAX_LOD_SGIS',
	'GL_TEXTURE_MIN_FILTER',
	'GL_TEXTURE_MIN_LOD',
	'GL_TEXTURE_MIN_LOD_SGIS',
	'GL_TEXTURE_MULTI_BUFFER_HINT_SGIX',
	'GL_TEXTURE_NORMAL_EXT',
	'GL_TEXTURE_POST_SPECULAR_HP',
	'GL_TEXTURE_PRE_SPECULAR_HP',
	'GL_TEXTURE_PRIORITY',
	'GL_TEXTURE_PRIORITY_EXT',
	'GL_TEXTURE_RECTANGLE_ARB',
	'GL_TEXTURE_RECTANGLE_NV',
	'GL_TEXTURE_RED_SIZE',
	'GL_TEXTURE_RED_SIZE_EXT',
	'GL_TEXTURE_RED_TYPE_ARB',
	'GL_TEXTURE_RESIDENT',
	'GL_TEXTURE_RESIDENT_EXT',
	'GL_TEXTURE_SHADER_NV',
	'GL_TEXTURE_STACK_DEPTH',
	'GL_TEXTURE_TOO_LARGE_EXT',
	'GL_TEXTURE_UNSIGNED_REMAP_MODE_NV',
	'GL_TEXTURE_WIDTH',
	'GL_TEXTURE_WRAP_Q_SGIS',
	'GL_TEXTURE_WRAP_R',
	'GL_TEXTURE_WRAP_R_EXT',
	'GL_TEXTURE_WRAP_S',
	'GL_TEXTURE_WRAP_T',
	'GL_TEXT_FRAGMENT_SHADER_ATI',
	'GL_TRACK_MATRIX_NV',
	'GL_TRACK_MATRIX_TRANSFORM_NV',
	'GL_TRANSFORM_BIT',
	'GL_TRANSFORM_HINT_APPLE',
	'GL_TRANSPOSE_COLOR_MATRIX',
	'GL_TRANSPOSE_COLOR_MATRIX_ARB',
	'GL_TRANSPOSE_CURRENT_MATRIX_ARB',
	'GL_TRANSPOSE_MODELVIEW_MATRIX',
	'GL_TRANSPOSE_MODELVIEW_MATRIX_ARB',
	'GL_TRANSPOSE_NV',
	'GL_TRANSPOSE_PROJECTION_MATRIX',
	'GL_TRANSPOSE_PROJECTION_MATRIX_ARB',
	'GL_TRANSPOSE_TEXTURE_MATRIX',
	'GL_TRANSPOSE_TEXTURE_MATRIX_ARB',
	'GL_TRIANGLES',
	'GL_TRIANGLE_FAN',
	'GL_TRIANGLE_LIST_SUN',
	'GL_TRIANGLE_MESH_SUN',
	'GL_TRIANGLE_STRIP',
	'GL_TRUE',
	'GL_TYPE_RGBA_FLOAT_ATI',
	'GL_UNPACK_ALIGNMENT',
	'GL_UNPACK_CLIENT_STORAGE_APPLE',
	'GL_UNPACK_CMYK_HINT_EXT',
	'GL_UNPACK_CONSTANT_DATA_SUNX',
	'GL_UNPACK_IMAGE_DEPTH_SGIS',
	'GL_UNPACK_IMAGE_HEIGHT',
	'GL_UNPACK_IMAGE_HEIGHT_EXT',
	'GL_UNPACK_LSB_FIRST',
	'GL_UNPACK_RESAMPLE_OML',
	'GL_UNPACK_RESAMPLE_SGIX',
	'GL_UNPACK_ROW_LENGTH',
	'GL_UNPACK_SKIP_IMAGES',
	'GL_UNPACK_SKIP_IMAGES_EXT',
	'GL_UNPACK_SKIP_PIXELS',
	'GL_UNPACK_SKIP_ROWS',
	'GL_UNPACK_SKIP_VOLUMES_SGIS',
	'GL_UNPACK_SUBSAMPLE_RATE_SGIX',
	'GL_UNPACK_SWAP_BYTES',
	'GL_UNSIGNED_BYTE',
	'GL_UNSIGNED_BYTE_2_3_3_REV',
	'GL_UNSIGNED_BYTE_3_3_2',
	'GL_UNSIGNED_BYTE_3_3_2_EXT',
	'GL_UNSIGNED_IDENTITY_NV',
	'GL_UNSIGNED_INT',
	'GL_UNSIGNED_INT_10_10_10_2',
	'GL_UNSIGNED_INT_10_10_10_2_EXT',
	'GL_UNSIGNED_INT_24_8_NV',
	'GL_UNSIGNED_INT_2_10_10_10_REV',
	'GL_UNSIGNED_INT_8_8_8_8',
	'GL_UNSIGNED_INT_8_8_8_8_EXT',
	'GL_UNSIGNED_INT_8_8_8_8_REV',
	'GL_UNSIGNED_INT_8_8_S8_S8_REV_NV',
	'GL_UNSIGNED_INT_S8_S8_8_8_NV',
	'GL_UNSIGNED_INVERT_NV',
	'GL_UNSIGNED_NORMALIZED_ARB',
	'GL_UNSIGNED_SHORT',
	'GL_UNSIGNED_SHORT_1_5_5_5_REV',
	'GL_UNSIGNED_SHORT_4_4_4_4',
	'GL_UNSIGNED_SHORT_4_4_4_4_EXT',
	'GL_UNSIGNED_SHORT_4_4_4_4_REV',
	'GL_UNSIGNED_SHORT_5_5_5_1',
	'GL_UNSIGNED_SHORT_5_5_5_1_EXT',
	'GL_UNSIGNED_SHORT_5_6_5',
	'GL_UNSIGNED_SHORT_5_6_5_REV',
	'GL_UNSIGNED_SHORT_8_8_APPLE',
	'GL_UNSIGNED_SHORT_8_8_MESA',
	'GL_UNSIGNED_SHORT_8_8_REV_APPLE',
	'GL_UNSIGNED_SHORT_8_8_REV_MESA',
	'GL_UPPER_LEFT',
	'GL_V2F',
	'GL_V3F',
	'GL_VALIDATE_STATUS',
	'GL_VARIABLE_A_NV',
	'GL_VARIABLE_B_NV',
	'GL_VARIABLE_C_NV',
	'GL_VARIABLE_D_NV',
	'GL_VARIABLE_E_NV',
	'GL_VARIABLE_F_NV',
	'GL_VARIABLE_G_NV',
	'GL_VARIANT_ARRAY_EXT',
	'GL_VARIANT_ARRAY_POINTER_EXT',
	'GL_VARIANT_ARRAY_STRIDE_EXT',
	'GL_VARIANT_ARRAY_TYPE_EXT',
	'GL_VARIANT_DATATYPE_EXT',
	'GL_VARIANT_EXT',
	'GL_VARIANT_VALUE_EXT',
	'GL_VECTOR_EXT',
	'GL_VENDOR',
	'GL_VERSION',
	'GL_VERSION_1_1',
	'GL_VERSION_1_2',
	'GL_VERSION_1_3',
	'GL_VERSION_1_4',
	'GL_VERSION_1_5',
	'GL_VERSION_2_0',
	'GL_VERTEX23_BIT_PGI',
	'GL_VERTEX4_BIT_PGI',
	'GL_VERTEX_ARRAY',
	'GL_VERTEX_ARRAY_BINDING_APPLE',
	'GL_VERTEX_ARRAY_BUFFER_BINDING',
	'GL_VERTEX_ARRAY_BUFFER_BINDING_ARB',
	'GL_VERTEX_ARRAY_COUNT_EXT',
	'GL_VERTEX_ARRAY_EXT',
	'GL_VERTEX_ARRAY_LIST_IBM',
	'GL_VERTEX_ARRAY_LIST_STRIDE_IBM',
	'GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL',
	'GL_VERTEX_ARRAY_POINTER',
	'GL_VERTEX_ARRAY_POINTER_EXT',
	'GL_VERTEX_ARRAY_RANGE_APPLE',
	'GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE',
	'GL_VERTEX_ARRAY_RANGE_LENGTH_NV',
	'GL_VERTEX_ARRAY_RANGE_NV',
	'GL_VERTEX_ARRAY_RANGE_POINTER_APPLE',
	'GL_VERTEX_ARRAY_RANGE_POINTER_NV',
	'GL_VERTEX_ARRAY_RANGE_VALID_NV',
	'GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV',
	'GL_VERTEX_ARRAY_SIZE',
	'GL_VERTEX_ARRAY_SIZE_EXT',
	'GL_VERTEX_ARRAY_STORAGE_HINT_APPLE',
	'GL_VERTEX_ARRAY_STRIDE',
	'GL_VERTEX_ARRAY_STRIDE_EXT',
	'GL_VERTEX_ARRAY_TYPE',
	'GL_VERTEX_ARRAY_TYPE_EXT',
	'GL_VERTEX_ATTRIB_ARRAY0_NV',
	'GL_VERTEX_ATTRIB_ARRAY10_NV',
	'GL_VERTEX_ATTRIB_ARRAY11_NV',
	'GL_VERTEX_ATTRIB_ARRAY12_NV',
	'GL_VERTEX_ATTRIB_ARRAY13_NV',
	'GL_VERTEX_ATTRIB_ARRAY14_NV',
	'GL_VERTEX_ATTRIB_ARRAY15_NV',
	'GL_VERTEX_ATTRIB_ARRAY1_NV',
	'GL_VERTEX_ATTRIB_ARRAY2_NV',
	'GL_VERTEX_ATTRIB_ARRAY3_NV',
	'GL_VERTEX_ATTRIB_ARRAY4_NV',
	'GL_VERTEX_ATTRIB_ARRAY5_NV',
	'GL_VERTEX_ATTRIB_ARRAY6_NV',
	'GL_VERTEX_ATTRIB_ARRAY7_NV',
	'GL_VERTEX_ATTRIB_ARRAY8_NV',
	'GL_VERTEX_ATTRIB_ARRAY9_NV',
	'GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING',
	'GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB',
	'GL_VERTEX_ATTRIB_ARRAY_ENABLED',
	'GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB',
	'GL_VERTEX_ATTRIB_ARRAY_NORMALIZED',
	'GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB',
	'GL_VERTEX_ATTRIB_ARRAY_POINTER',
	'GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB',
	'GL_VERTEX_ATTRIB_ARRAY_SIZE',
	'GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB',
	'GL_VERTEX_ATTRIB_ARRAY_STRIDE',
	'GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB',
	'GL_VERTEX_ATTRIB_ARRAY_TYPE',
	'GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB',
	'GL_VERTEX_BLEND_ARB',
	'GL_VERTEX_CONSISTENT_HINT_PGI',
	'GL_VERTEX_DATA_HINT_PGI',
	'GL_VERTEX_PRECLIP_HINT_SGIX',
	'GL_VERTEX_PRECLIP_SGIX',
	'GL_VERTEX_PROGRAM_ARB',
	'GL_VERTEX_PROGRAM_BINDING_NV',
	'GL_VERTEX_PROGRAM_NV',
	'GL_VERTEX_PROGRAM_POINT_SIZE',
	'GL_VERTEX_PROGRAM_POINT_SIZE_ARB',
	'GL_VERTEX_PROGRAM_POINT_SIZE_NV',
	'GL_VERTEX_PROGRAM_TWO_SIDE',
	'GL_VERTEX_PROGRAM_TWO_SIDE_ARB',
	'GL_VERTEX_PROGRAM_TWO_SIDE_NV',
	'GL_VERTEX_SHADER',
	'GL_VERTEX_SHADER_ARB',
	'GL_VERTEX_SHADER_BINDING_EXT',
	'GL_VERTEX_SHADER_EXT',
	'GL_VERTEX_SHADER_INSTRUCTIONS_EXT',
	'GL_VERTEX_SHADER_INVARIANTS_EXT',
	'GL_VERTEX_SHADER_LOCALS_EXT',
	'GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT',
	'GL_VERTEX_SHADER_OPTIMIZED_EXT',
	'GL_VERTEX_SHADER_VARIANTS_EXT',
	'GL_VERTEX_SOURCE_ATI',
	'GL_VERTEX_STATE_PROGRAM_NV',
	'GL_VERTEX_STREAM0_ATI',
	'GL_VERTEX_STREAM1_ATI',
	'GL_VERTEX_STREAM2_ATI',
	'GL_VERTEX_STREAM3_ATI',
	'GL_VERTEX_STREAM4_ATI',
	'GL_VERTEX_STREAM5_ATI',
	'GL_VERTEX_STREAM6_ATI',
	'GL_VERTEX_STREAM7_ATI',
	'GL_VERTEX_WEIGHTING_EXT',
	'GL_VERTEX_WEIGHT_ARRAY_EXT',
	'GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT',
	'GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT',
	'GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT',
	'GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT',
	'GL_VIBRANCE_BIAS_NV',
	'GL_VIBRANCE_SCALE_NV',
	'GL_VIEWPORT',
	'GL_VIEWPORT_BIT',
	'GL_WEIGHT_ARRAY_ARB',
	'GL_WEIGHT_ARRAY_BUFFER_BINDING',
	'GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB',
	'GL_WEIGHT_ARRAY_POINTER_ARB',
	'GL_WEIGHT_ARRAY_SIZE_ARB',
	'GL_WEIGHT_ARRAY_STRIDE_ARB',
	'GL_WEIGHT_ARRAY_TYPE_ARB',
	'GL_WEIGHT_SUM_UNITY_ARB',
	'GL_WIDE_LINE_HINT_PGI',
	'GL_WRAP_BORDER_SUN',
	'GL_WRITE_ONLY',
	'GL_WRITE_ONLY_ARB',
	'GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV',
	'GL_WRITE_PIXEL_DATA_RANGE_NV',
	'GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV',
	'GL_W_EXT',
	'GL_XOR',
	'GL_X_EXT',
	'GL_YCBCR_422_APPLE',
	'GL_YCBCR_MESA',
	'GL_YCRCBA_SGIX',
	'GL_YCRCB_422_SGIX',
	'GL_YCRCB_444_SGIX',
	'GL_YCRCB_SGIX',
	'GL_Y_EXT',
	'GL_ZERO',
	'GL_ZERO_EXT',
	'GL_ZOOM_X',
	'GL_ZOOM_Y',
	'GL_Z_EXT',
	'GLbitfield',
	'GLboolean',
	'GLbyte',
	'GLclampd',
	'GLclampf',
	'GLdouble',
	'GLenum',
	'GLfloat',
	'GLint',
	'GLshort',
	'GLsizei',
	'GLubyte',
	'GLuint',
	'GLushort',
	'GLvoid',
	'glAccum',
	'glAlphaFunc',
	'glAreTexturesResident',
	'glArrayElement',
	'glBegin',
	'glBindTexture',
	'glBitmap',
	'glBlendFunc',
	'glCallList',
	'glCallLists',
	'glClear',
	'glClearAccum',
	'glClearColor',
	'glClearDepth',
	'glClearIndex',
	'glClearStencil',
	'glClipPlane',
	'glColor3b',
	'glColor3bv',
	'glColor3d',
	'glColor3dv',
	'glColor3f',
	'glColor3fv',
	'glColor3i',
	'glColor3iv',
	'glColor3s',
	'glColor3sv',
	'glColor3ub',
	'glColor3ubv',
	'glColor3ui',
	'glColor3uiv',
	'glColor3us',
	'glColor3usv',
	'glColor4b',
	'glColor4bv',
	'glColor4d',
	'glColor4dv',
	'glColor4f',
	'glColor4fv',
	'glColor4i',
	'glColor4iv',
	'glColor4s',
	'glColor4sv',
	'glColor4ub',
	'glColor4ubv',
	'glColor4ui',
	'glColor4uiv',
	'glColor4us',
	'glColor4usv',
	'glColorMask',
	'glColorMaterial',
	'glColorPointer',
	'glCopyPixels',
	'glCopyTexImage1D',
	'glCopyTexImage2D',
	'glCopyTexSubImage1D',
	'glCopyTexSubImage2D',
	'glCullFace',
	'glDeleteLists',
	'glDeleteTextures',
	'glDepthFunc',
	'glDepthMask',
	'glDepthRange',
	'glDisable',
	'glDisableClientState',
	'glDrawArrays',
	'glDrawBuffer',
	'glDrawElements',
	'glDrawPixels',
	'glEdgeFlag',
	'glEdgeFlagPointer',
	'glEdgeFlagv',
	'glEnable',
	'glEnableClientState',
	'glEnd',
	'glEndList',
	'glEvalCoord1d',
	'glEvalCoord1dv',
	'glEvalCoord1f',
	'glEvalCoord1fv',
	'glEvalCoord2d',
	'glEvalCoord2dv',
	'glEvalCoord2f',
	'glEvalCoord2fv',
	'glEvalMesh1',
	'glEvalMesh2',
	'glEvalPoint1',
	'glEvalPoint2',
	'glFeedbackBuffer',
	'glFinish',
	'glFlush',
	'glFogf',
	'glFogfv',
	'glFogi',
	'glFogiv',
	'glFrontFace',
	'glFrustum',
	'glGenLists',
	'glGenTextures',
	'glGetBooleanv',
	'glGetClipPlane',
	'glGetDoublev',
	'glGetError',
	'glGetFloatv',
	'glGetIntegerv',
	'glGetLightfv',
	'glGetLightiv',
	'glGetMapdv',
	'glGetMapfv',
	'glGetMapiv',
	'glGetMaterialfv',
	'glGetMaterialiv',
	'glGetPixelMapfv',
	'glGetPixelMapuiv',
	'glGetPixelMapusv',
	'glGetPointerv',
	'glGetPolygonStipple',
	'glGetString',
	'glGetTexEnvfv',
	'glGetTexEnviv',
	'glGetTexGendv',
	'glGetTexGenfv',
	'glGetTexGeniv',
	'glGetTexImage',
	'glGetTexLevelParameterfv',
	'glGetTexLevelParameteriv',
	'glGetTexParameterfv',
	'glGetTexParameteriv',
	'glHint',
	'glIndexMask',
	'glIndexPointer',
	'glIndexd',
	'glIndexdv',
	'glIndexf',
	'glIndexfv',
	'glIndexi',
	'glIndexiv',
	'glIndexs',
	'glIndexsv',
	'glIndexub',
	'glIndexubv',
	'glInitNames',
	'glInterleavedArrays',
	'glIsEnabled',
	'glIsList',
	'glIsTexture',
	'glLightModelf',
	'glLightModelfv',
	'glLightModeli',
	'glLightModeliv',
	'glLightf',
	'glLightfv',
	'glLighti',
	'glLightiv',
	'glLineStipple',
	'glLineWidth',
	'glListBase',
	'glLoadIdentity',
	'glLoadMatrixd',
	'glLoadMatrixf',
	'glLoadName',
	'glLogicOp',
	'glMap1d',
	'glMap1f',
	'glMap2d',
	'glMap2f',
	'glMapGrid1d',
	'glMapGrid1f',
	'glMapGrid2d',
	'glMapGrid2f',
	'glMaterialf',
	'glMaterialfv',
	'glMateriali',
	'glMaterialiv',
	'glMatrixMode',
	'glMultMatrixd',
	'glMultMatrixf',
	'glNewList',
	'glNormal3b',
	'glNormal3bv',
	'glNormal3d',
	'glNormal3dv',
	'glNormal3f',
	'glNormal3fv',
	'glNormal3i',
	'glNormal3iv',
	'glNormal3s',
	'glNormal3sv',
	'glNormalPointer',
	'glOrtho',
	'glPassThrough',
	'glPixelMapfv',
	'glPixelMapuiv',
	'glPixelMapusv',
	'glPixelStoref',
	'glPixelStorei',
	'glPixelTransferf',
	'glPixelTransferi',
	'glPixelZoom',
	'glPointSize',
	'glPolygonMode',
	'glPolygonOffset',
	'glPolygonStipple',
	'glPopAttrib',
	'glPopClientAttrib',
	'glPopMatrix',
	'glPopName',
	'glPrioritizeTextures',
	'glPushAttrib',
	'glPushClientAttrib',
	'glPushMatrix',
	'glPushName',
	'glRasterPos2d',
	'glRasterPos2dv',
	'glRasterPos2f',
	'glRasterPos2fv',
	'glRasterPos2i',
	'glRasterPos2iv',
	'glRasterPos2s',
	'glRasterPos2sv',
	'glRasterPos3d',
	'glRasterPos3dv',
	'glRasterPos3f',
	'glRasterPos3fv',
	'glRasterPos3i',
	'glRasterPos3iv',
	'glRasterPos3s',
	'glRasterPos3sv',
	'glRasterPos4d',
	'glRasterPos4dv',
	'glRasterPos4f',
	'glRasterPos4fv',
	'glRasterPos4i',
	'glRasterPos4iv',
	'glRasterPos4s',
	'glRasterPos4sv',
	'glReadBuffer',
	'glReadPixels',
	'glRectd',
	'glRectdv',
	'glRectf',
	'glRectfv',
	'glRecti',
	'glRectiv',
	'glRects',
	'glRectsv',
	'glRenderMode',
	'glRotated',
	'glRotatef',
	'glScaled',
	'glScalef',
	'glScissor',
	'glSelectBuffer',
	'glShadeModel',
	'glStencilFunc',
	'glStencilMask',
	'glStencilOp',
	'glTexCoord1d',
	'glTexCoord1dv',
	'glTexCoord1f',
	'glTexCoord1fv',
	'glTexCoord1i',
	'glTexCoord1iv',
	'glTexCoord1s',
	'glTexCoord1sv',
	'glTexCoord2d',
	'glTexCoord2dv',
	'glTexCoord2f',
	'glTexCoord2fv',
	'glTexCoord2i',
	'glTexCoord2iv',
	'glTexCoord2s',
	'glTexCoord2sv',
	'glTexCoord3d',
	'glTexCoord3dv',
	'glTexCoord3f',
	'glTexCoord3fv',
	'glTexCoord3i',
	'glTexCoord3iv',
	'glTexCoord3s',
	'glTexCoord3sv',
	'glTexCoord4d',
	'glTexCoord4dv',
	'glTexCoord4f',
	'glTexCoord4fv',
	'glTexCoord4i',
	'glTexCoord4iv',
	'glTexCoord4s',
	'glTexCoord4sv',
	'glTexCoordPointer',
	'glTexEnvf',
	'glTexEnvfv',
	'glTexEnvi',
	'glTexEnviv',
	'glTexGend',
	'glTexGendv',
	'glTexGenf',
	'glTexGenfv',
	'glTexGeni',
	'glTexGeniv',
	'glTexImage1D',
	'glTexImage2D',
	'glTexParameterf',
	'glTexParameterfv',
	'glTexParameteri',
	'glTexParameteriv',
	'glTexSubImage1D',
	'glTexSubImage2D',
	'glTranslated',
	'glTranslatef',
	'glVertex2d',
	'glVertex2dv',
	'glVertex2f',
	'glVertex2fv',
	'glVertex2i',
	'glVertex2iv',
	'glVertex2s',
	'glVertex2sv',
	'glVertex3d',
	'glVertex3dv',
	'glVertex3f',
	'glVertex3fv',
	'glVertex3i',
	'glVertex3iv',
	'glVertex3s',
	'glVertex3sv',
	'glVertex4d',
	'glVertex4dv',
	'glVertex4f',
	'glVertex4fv',
	'glVertex4i',
	'glVertex4iv',
	'glVertex4s',
	'glVertex4sv',
	'glVertexPointer',
	'glViewport'
]

