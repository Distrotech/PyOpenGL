'''OpenGL extension SGIX.async

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_SGIX_async'
_DEPRECATED = False
GL_ASYNC_MARKER_SGIX = constant.Constant( 'GL_ASYNC_MARKER_SGIX', 0x8329 )
glget.addGLGetConstant( GL_ASYNC_MARKER_SGIX, (1,) )
glAsyncMarkerSGIX = platform.createExtensionFunction( 
'glAsyncMarkerSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,),
doc='glAsyncMarkerSGIX(GLuint(marker)) -> None',
argNames=('marker',),
deprecated=_DEPRECATED,
)

glFinishAsyncSGIX = platform.createExtensionFunction( 
'glFinishAsyncSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=constants.GLint, 
argTypes=(arrays.GLuintArray,),
doc='glFinishAsyncSGIX(GLuintArray(markerp)) -> constants.GLint',
argNames=('markerp',),
deprecated=_DEPRECATED,
)

glPollAsyncSGIX = platform.createExtensionFunction( 
'glPollAsyncSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=constants.GLint, 
argTypes=(arrays.GLuintArray,),
doc='glPollAsyncSGIX(GLuintArray(markerp)) -> constants.GLint',
argNames=('markerp',),
deprecated=_DEPRECATED,
)

glGenAsyncMarkersSGIX = platform.createExtensionFunction( 
'glGenAsyncMarkersSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=constants.GLuint, 
argTypes=(constants.GLsizei,),
doc='glGenAsyncMarkersSGIX(GLsizei(range)) -> constants.GLuint',
argNames=('range',),
deprecated=_DEPRECATED,
)

glDeleteAsyncMarkersSGIX = platform.createExtensionFunction( 
'glDeleteAsyncMarkersSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLsizei,),
doc='glDeleteAsyncMarkersSGIX(GLuint(marker), GLsizei(range)) -> None',
argNames=('marker','range',),
deprecated=_DEPRECATED,
)

glIsAsyncMarkerSGIX = platform.createExtensionFunction( 
'glIsAsyncMarkerSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=constants.GLboolean, 
argTypes=(constants.GLuint,),
doc='glIsAsyncMarkerSGIX(GLuint(marker)) -> constants.GLboolean',
argNames=('marker',),
deprecated=_DEPRECATED,
)


def glInitAsyncSGIX():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
