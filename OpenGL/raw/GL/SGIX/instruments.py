'''OpenGL extension SGIX.instruments

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_SGIX_instruments'
_DEPRECATED = False
GL_INSTRUMENT_BUFFER_POINTER_SGIX = constant.Constant( 'GL_INSTRUMENT_BUFFER_POINTER_SGIX', 0x8180 )
GL_INSTRUMENT_MEASUREMENTS_SGIX = constant.Constant( 'GL_INSTRUMENT_MEASUREMENTS_SGIX', 0x8181 )
glGetInstrumentsSGIX = platform.createExtensionFunction( 
'glGetInstrumentsSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=constants.GLint, 
argTypes=(),
doc='glGetInstrumentsSGIX() -> constants.GLint',
argNames=(),
deprecated=_DEPRECATED,
)

glInstrumentsBufferSGIX = platform.createExtensionFunction( 
'glInstrumentsBufferSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLsizei,arrays.GLintArray,),
doc='glInstrumentsBufferSGIX(GLsizei(size), GLintArray(buffer)) -> None',
argNames=('size','buffer',),
deprecated=_DEPRECATED,
)

glPollInstrumentsSGIX = platform.createExtensionFunction( 
'glPollInstrumentsSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=constants.GLint, 
argTypes=(arrays.GLintArray,),
doc='glPollInstrumentsSGIX(GLintArray(marker_p)) -> constants.GLint',
argNames=('marker_p',),
deprecated=_DEPRECATED,
)

glReadInstrumentsSGIX = platform.createExtensionFunction( 
'glReadInstrumentsSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLint,),
doc='glReadInstrumentsSGIX(GLint(marker)) -> None',
argNames=('marker',),
deprecated=_DEPRECATED,
)

glStartInstrumentsSGIX = platform.createExtensionFunction( 
'glStartInstrumentsSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(),
doc='glStartInstrumentsSGIX() -> None',
argNames=(),
deprecated=_DEPRECATED,
)

glStopInstrumentsSGIX = platform.createExtensionFunction( 
'glStopInstrumentsSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLint,),
doc='glStopInstrumentsSGIX(GLint(marker)) -> None',
argNames=('marker',),
deprecated=_DEPRECATED,
)


def glInitInstrumentsSGIX():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
