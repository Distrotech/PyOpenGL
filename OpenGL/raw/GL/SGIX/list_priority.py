'''OpenGL extension SGIX.list_priority

Overview (from the spec)
	
	This extension provides a mechanism for specifying the relative
	importance of display lists.  This information can be used by
	an OpenGL implementation to guide the placement of display
	list data in a storage hierarchy.

The official definition of this extension is available here:
	http://oss.sgi.com/projects/ogl-sample/registry/SGIX/list_priority.txt

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_SGIX_list_priority'
GL_LIST_PRIORITY_SGIX = constant.Constant( 'GL_LIST_PRIORITY_SGIX', 0x8182 )
glGetListParameterfvSGIX = platform.createExtensionFunction( 
	'glGetListParameterfvSGIX', dll=platform.GL,
	extension=EXTENSION_NAME,
	resultType=None, 
	argTypes=(constants.GLuint, constants.GLenum, arrays.GLfloatArray,),
	doc = 'glGetListParameterfvSGIX( GLuint(list), GLenum(pname), GLfloatArray(params) ) -> None',
	argNames = ('list', 'pname', 'params',),
)

glGetListParameterivSGIX = platform.createExtensionFunction( 
	'glGetListParameterivSGIX', dll=platform.GL,
	extension=EXTENSION_NAME,
	resultType=None, 
	argTypes=(constants.GLuint, constants.GLenum, arrays.GLintArray,),
	doc = 'glGetListParameterivSGIX( GLuint(list), GLenum(pname), GLintArray(params) ) -> None',
	argNames = ('list', 'pname', 'params',),
)

glListParameterfSGIX = platform.createExtensionFunction( 
	'glListParameterfSGIX', dll=platform.GL,
	extension=EXTENSION_NAME,
	resultType=None, 
	argTypes=(constants.GLuint, constants.GLenum, constants.GLfloat,),
	doc = 'glListParameterfSGIX( GLuint(list), GLenum(pname), GLfloat(param) ) -> None',
	argNames = ('list', 'pname', 'param',),
)

glListParameterfvSGIX = platform.createExtensionFunction( 
	'glListParameterfvSGIX', dll=platform.GL,
	extension=EXTENSION_NAME,
	resultType=None, 
	argTypes=(constants.GLuint, constants.GLenum, arrays.GLfloatArray,),
	doc = 'glListParameterfvSGIX( GLuint(list), GLenum(pname), GLfloatArray(params) ) -> None',
	argNames = ('list', 'pname', 'params',),
)

glListParameteriSGIX = platform.createExtensionFunction( 
	'glListParameteriSGIX', dll=platform.GL,
	extension=EXTENSION_NAME,
	resultType=None, 
	argTypes=(constants.GLuint, constants.GLenum, constants.GLint,),
	doc = 'glListParameteriSGIX( GLuint(list), GLenum(pname), GLint(param) ) -> None',
	argNames = ('list', 'pname', 'param',),
)

glListParameterivSGIX = platform.createExtensionFunction( 
	'glListParameterivSGIX', dll=platform.GL,
	extension=EXTENSION_NAME,
	resultType=None, 
	argTypes=(constants.GLuint, constants.GLenum, arrays.GLintArray,),
	doc = 'glListParameterivSGIX( GLuint(list), GLenum(pname), GLintArray(params) ) -> None',
	argNames = ('list', 'pname', 'params',),
)


def glInitListPrioritySGIX():
	'''Return boolean indicating whether this extension is available'''
	return extensions.hasGLExtension( EXTENSION_NAME )
