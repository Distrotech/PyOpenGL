'''OpenGL extension SGIX.fragment_lighting

The official definition of this extension is available here:
http://oss.sgi.com/projects/ogl-sample/registry/SGIX/fragment_lighting.txt

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_SGIX_fragment_lighting'
_DEPRECATED = False
GL_FRAGMENT_LIGHTING_SGIX = constant.Constant( 'GL_FRAGMENT_LIGHTING_SGIX', 0x8400 )
GL_FRAGMENT_COLOR_MATERIAL_SGIX = constant.Constant( 'GL_FRAGMENT_COLOR_MATERIAL_SGIX', 0x8401 )
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX = constant.Constant( 'GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX', 0x8402 )
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = constant.Constant( 'GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX', 0x8403 )
GL_MAX_FRAGMENT_LIGHTS_SGIX = constant.Constant( 'GL_MAX_FRAGMENT_LIGHTS_SGIX', 0x8404 )
GL_MAX_ACTIVE_LIGHTS_SGIX = constant.Constant( 'GL_MAX_ACTIVE_LIGHTS_SGIX', 0x8405 )
GL_CURRENT_RASTER_NORMAL_SGIX = constant.Constant( 'GL_CURRENT_RASTER_NORMAL_SGIX', 0x8406 )
GL_LIGHT_ENV_MODE_SGIX = constant.Constant( 'GL_LIGHT_ENV_MODE_SGIX', 0x8407 )
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = constant.Constant( 'GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX', 0x8408 )
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = constant.Constant( 'GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX', 0x8409 )
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = constant.Constant( 'GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX', 0x840A )
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = constant.Constant( 'GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX', 0x840B )
GL_FRAGMENT_LIGHT0_SGIX = constant.Constant( 'GL_FRAGMENT_LIGHT0_SGIX', 0x840C )
GL_FRAGMENT_LIGHT1_SGIX = constant.Constant( 'GL_FRAGMENT_LIGHT1_SGIX', 0x840D )
GL_FRAGMENT_LIGHT2_SGIX = constant.Constant( 'GL_FRAGMENT_LIGHT2_SGIX', 0x840E )
GL_FRAGMENT_LIGHT3_SGIX = constant.Constant( 'GL_FRAGMENT_LIGHT3_SGIX', 0x840F )
GL_FRAGMENT_LIGHT4_SGIX = constant.Constant( 'GL_FRAGMENT_LIGHT4_SGIX', 0x8410 )
GL_FRAGMENT_LIGHT5_SGIX = constant.Constant( 'GL_FRAGMENT_LIGHT5_SGIX', 0x8411 )
GL_FRAGMENT_LIGHT6_SGIX = constant.Constant( 'GL_FRAGMENT_LIGHT6_SGIX', 0x8412 )
GL_FRAGMENT_LIGHT7_SGIX = constant.Constant( 'GL_FRAGMENT_LIGHT7_SGIX', 0x8413 )
glFragmentColorMaterialSGIX = platform.createExtensionFunction( 
'glFragmentColorMaterialSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,),
doc='glFragmentColorMaterialSGIX(GLenum(face), GLenum(mode)) -> None',
argNames=('face','mode',),
deprecated=_DEPRECATED,
)

glFragmentLightfSGIX = platform.createExtensionFunction( 
'glFragmentLightfSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,constants.GLfloat,),
doc='glFragmentLightfSGIX(GLenum(light), GLenum(pname), GLfloat(param)) -> None',
argNames=('light','pname','param',),
deprecated=_DEPRECATED,
)

glFragmentLightfvSGIX = platform.createExtensionFunction( 
'glFragmentLightfvSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,arrays.GLfloatArray,),
doc='glFragmentLightfvSGIX(GLenum(light), GLenum(pname), GLfloatArray(params)) -> None',
argNames=('light','pname','params',),
deprecated=_DEPRECATED,
)

glFragmentLightiSGIX = platform.createExtensionFunction( 
'glFragmentLightiSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,constants.GLint,),
doc='glFragmentLightiSGIX(GLenum(light), GLenum(pname), GLint(param)) -> None',
argNames=('light','pname','param',),
deprecated=_DEPRECATED,
)

glFragmentLightivSGIX = platform.createExtensionFunction( 
'glFragmentLightivSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,arrays.GLintArray,),
doc='glFragmentLightivSGIX(GLenum(light), GLenum(pname), GLintArray(params)) -> None',
argNames=('light','pname','params',),
deprecated=_DEPRECATED,
)

glFragmentLightModelfSGIX = platform.createExtensionFunction( 
'glFragmentLightModelfSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLfloat,),
doc='glFragmentLightModelfSGIX(GLenum(pname), GLfloat(param)) -> None',
argNames=('pname','param',),
deprecated=_DEPRECATED,
)

glFragmentLightModelfvSGIX = platform.createExtensionFunction( 
'glFragmentLightModelfvSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,arrays.GLfloatArray,),
doc='glFragmentLightModelfvSGIX(GLenum(pname), GLfloatArray(params)) -> None',
argNames=('pname','params',),
deprecated=_DEPRECATED,
)

glFragmentLightModeliSGIX = platform.createExtensionFunction( 
'glFragmentLightModeliSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLint,),
doc='glFragmentLightModeliSGIX(GLenum(pname), GLint(param)) -> None',
argNames=('pname','param',),
deprecated=_DEPRECATED,
)

glFragmentLightModelivSGIX = platform.createExtensionFunction( 
'glFragmentLightModelivSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,arrays.GLintArray,),
doc='glFragmentLightModelivSGIX(GLenum(pname), GLintArray(params)) -> None',
argNames=('pname','params',),
deprecated=_DEPRECATED,
)

glFragmentMaterialfSGIX = platform.createExtensionFunction( 
'glFragmentMaterialfSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,constants.GLfloat,),
doc='glFragmentMaterialfSGIX(GLenum(face), GLenum(pname), GLfloat(param)) -> None',
argNames=('face','pname','param',),
deprecated=_DEPRECATED,
)

glFragmentMaterialfvSGIX = platform.createExtensionFunction( 
'glFragmentMaterialfvSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,arrays.GLfloatArray,),
doc='glFragmentMaterialfvSGIX(GLenum(face), GLenum(pname), GLfloatArray(params)) -> None',
argNames=('face','pname','params',),
deprecated=_DEPRECATED,
)

glFragmentMaterialiSGIX = platform.createExtensionFunction( 
'glFragmentMaterialiSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,constants.GLint,),
doc='glFragmentMaterialiSGIX(GLenum(face), GLenum(pname), GLint(param)) -> None',
argNames=('face','pname','param',),
deprecated=_DEPRECATED,
)

glFragmentMaterialivSGIX = platform.createExtensionFunction( 
'glFragmentMaterialivSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,arrays.GLintArray,),
doc='glFragmentMaterialivSGIX(GLenum(face), GLenum(pname), GLintArray(params)) -> None',
argNames=('face','pname','params',),
deprecated=_DEPRECATED,
)

glGetFragmentLightfvSGIX = platform.createExtensionFunction( 
'glGetFragmentLightfvSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,arrays.GLfloatArray,),
doc='glGetFragmentLightfvSGIX(GLenum(light), GLenum(pname), GLfloatArray(params)) -> None',
argNames=('light','pname','params',),
deprecated=_DEPRECATED,
)

glGetFragmentLightivSGIX = platform.createExtensionFunction( 
'glGetFragmentLightivSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,arrays.GLintArray,),
doc='glGetFragmentLightivSGIX(GLenum(light), GLenum(pname), GLintArray(params)) -> None',
argNames=('light','pname','params',),
deprecated=_DEPRECATED,
)

glGetFragmentMaterialfvSGIX = platform.createExtensionFunction( 
'glGetFragmentMaterialfvSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,arrays.GLfloatArray,),
doc='glGetFragmentMaterialfvSGIX(GLenum(face), GLenum(pname), GLfloatArray(params)) -> None',
argNames=('face','pname','params',),
deprecated=_DEPRECATED,
)

glGetFragmentMaterialivSGIX = platform.createExtensionFunction( 
'glGetFragmentMaterialivSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,arrays.GLintArray,),
doc='glGetFragmentMaterialivSGIX(GLenum(face), GLenum(pname), GLintArray(params)) -> None',
argNames=('face','pname','params',),
deprecated=_DEPRECATED,
)

glLightEnviSGIX = platform.createExtensionFunction( 
'glLightEnviSGIX',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLint,),
doc='glLightEnviSGIX(GLenum(pname), GLint(param)) -> None',
argNames=('pname','param',),
deprecated=_DEPRECATED,
)


def glInitFragmentLightingSGIX():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
