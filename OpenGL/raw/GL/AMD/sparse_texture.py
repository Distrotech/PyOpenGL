'''Autogenerated by get_gl_extensions script, do not edit!'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_AMD_sparse_texture'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_AMD_sparse_texture',False)
_p.unpack_constants( """GL_VIRTUAL_PAGE_SIZE_X_AMD 0x9195
GL_VIRTUAL_PAGE_SIZE_Y_AMD 0x9196
GL_VIRTUAL_PAGE_SIZE_Z_AMD 0x9197
GL_MAX_SPARSE_TEXTURE_SIZE_AMD 0x9198
GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD 0x9199
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS 0x919A
GL_MIN_SPARSE_LEVEL_AMD 0x919B
GL_MIN_LOD_WARNING_AMD 0x919C
GL_TEXTURE_STORAGE_SPARSE_BIT_AMD 0x1""", globals())
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLsizei,_cs.GLsizei,_cs.GLsizei,_cs.GLsizei,_cs.GLbitfield)
def glTexStorageSparseAMD(target,internalFormat,width,height,depth,layers,flags):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLenum,_cs.GLenum,_cs.GLsizei,_cs.GLsizei,_cs.GLsizei,_cs.GLsizei,_cs.GLbitfield)
def glTextureStorageSparseAMD(texture,target,internalFormat,width,height,depth,layers,flags):pass


def glInitSparseTextureAMD():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
