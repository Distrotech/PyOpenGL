'''Autogenerated by get_gl_extensions script, do not edit!'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_AMD_debug_output'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_AMD_debug_output',False)
_p.unpack_constants( """GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
GL_DEBUG_SEVERITY_LOW_AMD 0x9148
GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
GL_DEBUG_CATEGORY_OTHER_AMD 0x9150""", globals())
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLsizei,arrays.GLuintArray,_cs.GLboolean)
def glDebugMessageEnableAMD(category,severity,count,ids,enabled):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLuint,_cs.GLsizei,arrays.GLcharArray)
def glDebugMessageInsertAMD(category,severity,id,length,buf):pass
@_f
@_p.types(None,_cs.GLDEBUGPROCAMD,ctypes.c_void_p)
def glDebugMessageCallbackAMD(callback,userParam):pass
@_f
@_p.types(_cs.GLuint,_cs.GLuint,_cs.GLsizei,arrays.GLuintArray,arrays.GLuintArray,arrays.GLuintArray,arrays.GLsizeiArray,arrays.GLcharArray)
def glGetDebugMessageLogAMD(count,bufsize,categories,severities,ids,lengths,message):pass


def glInitDebugOutputAMD():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
