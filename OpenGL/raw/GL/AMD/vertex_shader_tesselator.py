'''OpenGL extension AMD.vertex_shader_tesselator

The official definition of this extension is available here:
http://oss.sgi.com/projects/ogl-sample/registry/AMD/vertex_shader_tesselator.txt

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_AMD_vertex_shader_tesselator'
_DEPRECATED = False
GL_SAMPLER_BUFFER_AMD = constant.Constant( 'GL_SAMPLER_BUFFER_AMD', 0x9001 )
GL_INT_SAMPLER_BUFFER_AMD = constant.Constant( 'GL_INT_SAMPLER_BUFFER_AMD', 0x9002 )
GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD = constant.Constant( 'GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD', 0x9003 )
GL_TESSELLATION_MODE_AMD = constant.Constant( 'GL_TESSELLATION_MODE_AMD', 0x9004 )
GL_TESSELLATION_FACTOR_AMD = constant.Constant( 'GL_TESSELLATION_FACTOR_AMD', 0x9005 )
GL_DISCRETE_AMD = constant.Constant( 'GL_DISCRETE_AMD', 0x9006 )
GL_CONTINUOUS_AMD = constant.Constant( 'GL_CONTINUOUS_AMD', 0x9007 )
glTessellationFactorAMD = platform.createExtensionFunction( 
'glTessellationFactorAMD',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLfloat,),
doc='glTessellationFactorAMD(GLfloat(factor)) -> None',
argNames=('factor',),
deprecated=_DEPRECATED,
)

glTessellationModeAMD = platform.createExtensionFunction( 
'glTessellationModeAMD',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,),
doc='glTessellationModeAMD(GLenum(mode)) -> None',
argNames=('mode',),
deprecated=_DEPRECATED,
)


def glInitVertexShaderTesselatorAMD():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )