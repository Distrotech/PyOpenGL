'''OpenGL extension EXT.framebuffer_multisample

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_EXT_framebuffer_multisample'
_DEPRECATED = False
GL_RENDERBUFFER_SAMPLES_EXT = constant.Constant( 'GL_RENDERBUFFER_SAMPLES_EXT', 0x8CAB )
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = constant.Constant( 'GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT', 0x8D56 )
GL_MAX_SAMPLES_EXT = constant.Constant( 'GL_MAX_SAMPLES_EXT', 0x8D57 )
glget.addGLGetConstant( GL_MAX_SAMPLES_EXT, (1,) )
glRenderbufferStorageMultisampleEXT = platform.createExtensionFunction( 
'glRenderbufferStorageMultisampleEXT',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLsizei,constants.GLenum,constants.GLsizei,constants.GLsizei,),
doc='glRenderbufferStorageMultisampleEXT(GLenum(target), GLsizei(samples), GLenum(internalformat), GLsizei(width), GLsizei(height)) -> None',
argNames=('target','samples','internalformat','width','height',),
deprecated=_DEPRECATED,
)


def glInitFramebufferMultisampleEXT():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
