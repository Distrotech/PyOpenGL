'''Autogenerated by get_gl_extensions script, do not edit!'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_EXT_gpu_shader4'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_EXT_gpu_shader4',False)
_p.unpack_constants( """GL_SAMPLER_1D_ARRAY_EXT 0x8DC0
GL_SAMPLER_2D_ARRAY_EXT 0x8DC1
GL_SAMPLER_BUFFER_EXT 0x8DC2
GL_SAMPLER_1D_ARRAY_SHADOW_EXT 0x8DC3
GL_SAMPLER_2D_ARRAY_SHADOW_EXT 0x8DC4
GL_SAMPLER_CUBE_SHADOW_EXT 0x8DC5
GL_UNSIGNED_INT_VEC2_EXT 0x8DC6
GL_UNSIGNED_INT_VEC3_EXT 0x8DC7
GL_UNSIGNED_INT_VEC4_EXT 0x8DC8
GL_INT_SAMPLER_1D_EXT 0x8DC9
GL_INT_SAMPLER_2D_EXT 0x8DCA
GL_INT_SAMPLER_3D_EXT 0x8DCB
GL_INT_SAMPLER_CUBE_EXT 0x8DCC
GL_INT_SAMPLER_2D_RECT_EXT 0x8DCD
GL_INT_SAMPLER_1D_ARRAY_EXT 0x8DCE
GL_INT_SAMPLER_2D_ARRAY_EXT 0x8DCF
GL_INT_SAMPLER_BUFFER_EXT 0x8DD0
GL_UNSIGNED_INT_SAMPLER_1D_EXT 0x8DD1
GL_UNSIGNED_INT_SAMPLER_2D_EXT 0x8DD2
GL_UNSIGNED_INT_SAMPLER_3D_EXT 0x8DD3
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT 0x8DD4
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT 0x8DD5
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT 0x8DD6
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT 0x8DD7
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT 0x8DD8""", globals())
@_f
@_p.types(None,_cs.GLuint,_cs.GLint,arrays.GLuintArray)
def glGetUniformuivEXT( program,location,params ):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLuint,arrays.GLcharArray)
def glBindFragDataLocationEXT( program,color,name ):pass
@_f
@_p.types(_cs.GLint,_cs.GLuint,arrays.GLcharArray)
def glGetFragDataLocationEXT( program,name ):pass
@_f
@_p.types(None,_cs.GLint,_cs.GLuint)
def glUniform1uiEXT( location,v0 ):pass
@_f
@_p.types(None,_cs.GLint,_cs.GLuint,_cs.GLuint)
def glUniform2uiEXT( location,v0,v1 ):pass
@_f
@_p.types(None,_cs.GLint,_cs.GLuint,_cs.GLuint,_cs.GLuint)
def glUniform3uiEXT( location,v0,v1,v2 ):pass
@_f
@_p.types(None,_cs.GLint,_cs.GLuint,_cs.GLuint,_cs.GLuint,_cs.GLuint)
def glUniform4uiEXT( location,v0,v1,v2,v3 ):pass
@_f
@_p.types(None,_cs.GLint,_cs.GLsizei,arrays.GLuintArray)
def glUniform1uivEXT( location,count,value ):pass
@_f
@_p.types(None,_cs.GLint,_cs.GLsizei,arrays.GLuintArray)
def glUniform2uivEXT( location,count,value ):pass
@_f
@_p.types(None,_cs.GLint,_cs.GLsizei,arrays.GLuintArray)
def glUniform3uivEXT( location,count,value ):pass
@_f
@_p.types(None,_cs.GLint,_cs.GLsizei,arrays.GLuintArray)
def glUniform4uivEXT( location,count,value ):pass


def glInitGpuShader4EXT():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
