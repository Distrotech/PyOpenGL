'''OpenGL extension EXT.fog_coord

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_EXT_fog_coord'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_EXT_fog_coord',False)
_p.unpack_constants( """GL_FOG_COORDINATE_SOURCE_EXT 0x8450
GL_FOG_COORDINATE_EXT 0x8451
GL_FRAGMENT_DEPTH_EXT 0x8452
GL_CURRENT_FOG_COORDINATE_EXT 0x8453
GL_FOG_COORDINATE_ARRAY_TYPE_EXT 0x8454
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT 0x8455
GL_FOG_COORDINATE_ARRAY_POINTER_EXT 0x8456
GL_FOG_COORDINATE_ARRAY_EXT 0x8457""", globals())
glget.addGLGetConstant( GL_CURRENT_FOG_COORDINATE_EXT, (1,) )
glget.addGLGetConstant( GL_FOG_COORDINATE_ARRAY_TYPE_EXT, (1,) )
glget.addGLGetConstant( GL_FOG_COORDINATE_ARRAY_STRIDE_EXT, (1,) )
@_f
@_p.types(None,_cs.GLfloat)
def glFogCoordfEXT( coord ):pass
@_f
@_p.types(None,arrays.GLfloatArray)
def glFogCoordfvEXT( coord ):pass
@_f
@_p.types(None,_cs.GLdouble)
def glFogCoorddEXT( coord ):pass
@_f
@_p.types(None,arrays.GLdoubleArray)
def glFogCoorddvEXT( coord ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLsizei,ctypes.c_void_p)
def glFogCoordPointerEXT( type,stride,pointer ):pass


def glInitFogCoordEXT():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
