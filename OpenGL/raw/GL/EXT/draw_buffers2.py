'''Autogenerated by get_gl_extensions script, do not edit!'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_EXT_draw_buffers2'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_EXT_draw_buffers2',False)

@_f
@_p.types(None,_cs.GLuint,_cs.GLboolean,_cs.GLboolean,_cs.GLboolean,_cs.GLboolean)
def glColorMaskIndexedEXT( index,r,g,b,a ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLuint,arrays.GLbooleanArray)
def glGetBooleanIndexedvEXT( target,index,data ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLuint,arrays.GLintArray)
def glGetIntegerIndexedvEXT( target,index,data ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLuint)
def glEnableIndexedEXT( target,index ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLuint)
def glDisableIndexedEXT( target,index ):pass
@_f
@_p.types(_cs.GLboolean,_cs.GLenum,_cs.GLuint)
def glIsEnabledIndexedEXT( target,index ):pass


def glInitDrawBuffers2EXT():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
