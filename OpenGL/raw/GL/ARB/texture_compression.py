'''OpenGL extension ARB.texture_compression

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_texture_compression'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_ARB_texture_compression',False)
_p.unpack_constants( """GL_COMPRESSED_ALPHA_ARB 0x84E9
GL_COMPRESSED_LUMINANCE_ARB 0x84EA
GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
GL_COMPRESSED_INTENSITY_ARB 0x84EC
GL_COMPRESSED_RGB_ARB 0x84ED
GL_COMPRESSED_RGBA_ARB 0x84EE
GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
GL_TEXTURE_COMPRESSED_ARB 0x86A1
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3""", globals())
glget.addGLGetConstant( GL_TEXTURE_COMPRESSION_HINT_ARB, (1,) )
glget.addGLGetConstant( GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB, (1,) )
glget.addGLGetConstant( GL_COMPRESSED_TEXTURE_FORMATS_ARB, (1,) )
@_f
@_p.types(None,_cs.GLenum,_cs.GLint,_cs.GLenum,_cs.GLsizei,_cs.GLsizei,_cs.GLsizei,_cs.GLint,_cs.GLsizei,ctypes.c_void_p)
def glCompressedTexImage3DARB( target,level,internalformat,width,height,depth,border,imageSize,data ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLint,_cs.GLenum,_cs.GLsizei,_cs.GLsizei,_cs.GLint,_cs.GLsizei,ctypes.c_void_p)
def glCompressedTexImage2DARB( target,level,internalformat,width,height,border,imageSize,data ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLint,_cs.GLenum,_cs.GLsizei,_cs.GLint,_cs.GLsizei,ctypes.c_void_p)
def glCompressedTexImage1DARB( target,level,internalformat,width,border,imageSize,data ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLint,_cs.GLint,_cs.GLint,_cs.GLint,_cs.GLsizei,_cs.GLsizei,_cs.GLsizei,_cs.GLenum,_cs.GLsizei,ctypes.c_void_p)
def glCompressedTexSubImage3DARB( target,level,xoffset,yoffset,zoffset,width,height,depth,format,imageSize,data ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLint,_cs.GLint,_cs.GLint,_cs.GLsizei,_cs.GLsizei,_cs.GLenum,_cs.GLsizei,ctypes.c_void_p)
def glCompressedTexSubImage2DARB( target,level,xoffset,yoffset,width,height,format,imageSize,data ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLint,_cs.GLint,_cs.GLsizei,_cs.GLenum,_cs.GLsizei,ctypes.c_void_p)
def glCompressedTexSubImage1DARB( target,level,xoffset,width,format,imageSize,data ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLint,ctypes.c_void_p)
def glGetCompressedTexImageARB( target,level,img ):pass


def glInitTextureCompressionARB():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
