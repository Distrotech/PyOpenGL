'''OpenGL extension ARB.imaging

The official definition of this extension is available here:
	http://oss.sgi.com/projects/ogl-sample/registry/ARB/imaging.txt

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_imaging'
GL_CONSTANT_COLOR = constant.Constant( 'GL_CONSTANT_COLOR', 0x8001 )
GL_ONE_MINUS_CONSTANT_COLOR = constant.Constant( 'GL_ONE_MINUS_CONSTANT_COLOR', 0x8002 )
GL_CONSTANT_ALPHA = constant.Constant( 'GL_CONSTANT_ALPHA', 0x8003 )
GL_ONE_MINUS_CONSTANT_ALPHA = constant.Constant( 'GL_ONE_MINUS_CONSTANT_ALPHA', 0x8004 )
GL_BLEND_COLOR = constant.Constant( 'GL_BLEND_COLOR', 0x8005 )
GL_FUNC_ADD = constant.Constant( 'GL_FUNC_ADD', 0x8006 )
GL_MIN = constant.Constant( 'GL_MIN', 0x8007 )
GL_MAX = constant.Constant( 'GL_MAX', 0x8008 )
GL_BLEND_EQUATION = constant.Constant( 'GL_BLEND_EQUATION', 0x8009 )
GL_FUNC_SUBTRACT = constant.Constant( 'GL_FUNC_SUBTRACT', 0x800A )
GL_FUNC_REVERSE_SUBTRACT = constant.Constant( 'GL_FUNC_REVERSE_SUBTRACT', 0x800B )
# import legacy entry points to allow checking for bool(entryPoint)
from OpenGL.raw.GL.ARB.imaging_DEPRECATED import *

def glInitImagingARB():
	'''Return boolean indicating whether this extension is available'''
	return extensions.hasGLExtension( EXTENSION_NAME )
