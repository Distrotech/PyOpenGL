'''OpenGL extension ARB.timer_query

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_timer_query'
_DEPRECATED = False
GL_TIME_ELAPSED = constant.Constant( 'GL_TIME_ELAPSED', 0x88BF )
GL_TIMESTAMP = constant.Constant( 'GL_TIMESTAMP', 0x8E28 )
glQueryCounter = platform.createExtensionFunction( 
'glQueryCounter',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLenum,),
doc='glQueryCounter(GLuint(id), GLenum(target)) -> None',
argNames=('id','target',),
deprecated=_DEPRECATED,
)

glGetQueryObjecti64v = platform.createExtensionFunction( 
'glGetQueryObjecti64v',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLenum,arrays.GLint64Array,),
doc='glGetQueryObjecti64v(GLuint(id), GLenum(pname), GLint64Array(params)) -> None',
argNames=('id','pname','params',),
deprecated=_DEPRECATED,
)

glGetQueryObjectui64v = platform.createExtensionFunction( 
'glGetQueryObjectui64v',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLenum,arrays.GLuint64Array,),
doc='glGetQueryObjectui64v(GLuint(id), GLenum(pname), GLuint64Array(params)) -> None',
argNames=('id','pname','params',),
deprecated=_DEPRECATED,
)


def glInitTimerQueryARB():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
