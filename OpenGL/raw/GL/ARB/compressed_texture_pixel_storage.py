'''OpenGL extension ARB.compressed_texture_pixel_storage

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_compressed_texture_pixel_storage'
_DEPRECATED = False
GL_UNPACK_COMPRESSED_BLOCK_WIDTH = constant.Constant( 'GL_UNPACK_COMPRESSED_BLOCK_WIDTH', 0x9127 )
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = constant.Constant( 'GL_UNPACK_COMPRESSED_BLOCK_HEIGHT', 0x9128 )
GL_UNPACK_COMPRESSED_BLOCK_DEPTH = constant.Constant( 'GL_UNPACK_COMPRESSED_BLOCK_DEPTH', 0x9129 )
GL_UNPACK_COMPRESSED_BLOCK_SIZE = constant.Constant( 'GL_UNPACK_COMPRESSED_BLOCK_SIZE', 0x912A )
GL_PACK_COMPRESSED_BLOCK_WIDTH = constant.Constant( 'GL_PACK_COMPRESSED_BLOCK_WIDTH', 0x912B )
GL_PACK_COMPRESSED_BLOCK_HEIGHT = constant.Constant( 'GL_PACK_COMPRESSED_BLOCK_HEIGHT', 0x912C )
GL_PACK_COMPRESSED_BLOCK_DEPTH = constant.Constant( 'GL_PACK_COMPRESSED_BLOCK_DEPTH', 0x912D )
GL_PACK_COMPRESSED_BLOCK_SIZE = constant.Constant( 'GL_PACK_COMPRESSED_BLOCK_SIZE', 0x912E )


def glInitCompressedTexturePixelStorageARB():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
