'''Autogenerated by get_gl_extensions script, do not edit!'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_matrix_palette'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_ARB_matrix_palette',False)
_p.unpack_constants( """GL_MATRIX_PALETTE_ARB 0x8840
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
GL_MAX_PALETTE_MATRICES_ARB 0x8842
GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
GL_MATRIX_INDEX_ARRAY_ARB 0x8844
GL_CURRENT_MATRIX_INDEX_ARB 0x8845
GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849""", globals())
glget.addGLGetConstant( GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB, (1,) )
glget.addGLGetConstant( GL_MAX_PALETTE_MATRICES_ARB, (1,) )
glget.addGLGetConstant( GL_MATRIX_INDEX_ARRAY_SIZE_ARB, (1,) )
glget.addGLGetConstant( GL_MATRIX_INDEX_ARRAY_TYPE_ARB, (1,) )
glget.addGLGetConstant( GL_MATRIX_INDEX_ARRAY_STRIDE_ARB, (1,) )
@_f
@_p.types(None,_cs.GLint)
def glCurrentPaletteMatrixARB( index ):pass
@_f
@_p.types(None,_cs.GLint,arrays.GLubyteArray)
def glMatrixIndexubvARB( size,indices ):pass
@_f
@_p.types(None,_cs.GLint,arrays.GLushortArray)
def glMatrixIndexusvARB( size,indices ):pass
@_f
@_p.types(None,_cs.GLint,arrays.GLuintArray)
def glMatrixIndexuivARB( size,indices ):pass
@_f
@_p.types(None,_cs.GLint,_cs.GLenum,_cs.GLsizei,ctypes.c_void_p)
def glMatrixIndexPointerARB( size,type,stride,pointer ):pass


def glInitMatrixPaletteARB():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
