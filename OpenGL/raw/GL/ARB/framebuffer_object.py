'''Autogenerated by get_gl_extensions script, do not edit!'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_framebuffer_object'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_ARB_framebuffer_object',False)
_p.unpack_constants( """GL_INVALID_FRAMEBUFFER_OPERATION 0x506
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
GL_FRAMEBUFFER_DEFAULT 0x8218
GL_FRAMEBUFFER_UNDEFINED 0x8219
GL_DEPTH_STENCIL_ATTACHMENT 0x821A
GL_MAX_RENDERBUFFER_SIZE 0x84E8
GL_DEPTH_STENCIL 0x84F9
GL_UNSIGNED_INT_24_8 0x84FA
GL_DEPTH24_STENCIL8 0x88F0
GL_TEXTURE_STENCIL_SIZE 0x88F1
GL_TEXTURE_RED_TYPE 0x8C10
GL_TEXTURE_GREEN_TYPE 0x8C11
GL_TEXTURE_BLUE_TYPE 0x8C12
GL_TEXTURE_ALPHA_TYPE 0x8C13
GL_TEXTURE_DEPTH_TYPE 0x8C16
GL_UNSIGNED_NORMALIZED 0x8C17
GL_FRAMEBUFFER_BINDING 0x8CA6
GL_RENDERBUFFER_BINDING 0x8CA7
GL_READ_FRAMEBUFFER 0x8CA8
GL_DRAW_FRAMEBUFFER 0x8CA9
GL_READ_FRAMEBUFFER_BINDING 0x8CAA
GL_RENDERBUFFER_SAMPLES 0x8CAB
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
GL_FRAMEBUFFER_COMPLETE 0x8CD5
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
GL_MAX_COLOR_ATTACHMENTS 0x8CDF
GL_COLOR_ATTACHMENT0 0x8CE0
GL_COLOR_ATTACHMENT1 0x8CE1
GL_COLOR_ATTACHMENT2 0x8CE2
GL_COLOR_ATTACHMENT3 0x8CE3
GL_COLOR_ATTACHMENT4 0x8CE4
GL_COLOR_ATTACHMENT5 0x8CE5
GL_COLOR_ATTACHMENT6 0x8CE6
GL_COLOR_ATTACHMENT7 0x8CE7
GL_COLOR_ATTACHMENT8 0x8CE8
GL_COLOR_ATTACHMENT9 0x8CE9
GL_COLOR_ATTACHMENT10 0x8CEA
GL_COLOR_ATTACHMENT11 0x8CEB
GL_COLOR_ATTACHMENT12 0x8CEC
GL_COLOR_ATTACHMENT13 0x8CED
GL_COLOR_ATTACHMENT14 0x8CEE
GL_COLOR_ATTACHMENT15 0x8CEF
GL_DEPTH_ATTACHMENT 0x8D00
GL_STENCIL_ATTACHMENT 0x8D20
GL_FRAMEBUFFER 0x8D40
GL_RENDERBUFFER 0x8D41
GL_RENDERBUFFER_WIDTH 0x8D42
GL_RENDERBUFFER_HEIGHT 0x8D43
GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
GL_STENCIL_INDEX1 0x8D46
GL_STENCIL_INDEX4 0x8D47
GL_STENCIL_INDEX8 0x8D48
GL_STENCIL_INDEX16 0x8D49
GL_RENDERBUFFER_RED_SIZE 0x8D50
GL_RENDERBUFFER_GREEN_SIZE 0x8D51
GL_RENDERBUFFER_BLUE_SIZE 0x8D52
GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
GL_MAX_SAMPLES 0x8D57""", globals())
glget.addGLGetConstant( GL_MAX_RENDERBUFFER_SIZE, (1,) )
glget.addGLGetConstant( GL_RENDERBUFFER_BINDING, (1,) )
glget.addGLGetConstant( GL_MAX_COLOR_ATTACHMENTS, (1,) )
glget.addGLGetConstant( GL_MAX_SAMPLES, (1,) )
@_f
@_p.types(_cs.GLboolean,_cs.GLuint)
def glIsRenderbuffer( renderbuffer ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLuint)
def glBindRenderbuffer( target,renderbuffer ):pass
@_f
@_p.types(None,_cs.GLsizei,arrays.GLuintArray)
def glDeleteRenderbuffers( n,renderbuffers ):pass
@_f
@_p.types(None,_cs.GLsizei,arrays.GLuintArray)
def glGenRenderbuffers( n,renderbuffers ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLsizei,_cs.GLsizei)
def glRenderbufferStorage( target,internalformat,width,height ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,arrays.GLintArray)
def glGetRenderbufferParameteriv( target,pname,params ):pass
@_f
@_p.types(_cs.GLboolean,_cs.GLuint)
def glIsFramebuffer( framebuffer ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLuint)
def glBindFramebuffer( target,framebuffer ):pass
@_f
@_p.types(None,_cs.GLsizei,arrays.GLuintArray)
def glDeleteFramebuffers( n,framebuffers ):pass
@_f
@_p.types(None,_cs.GLsizei,arrays.GLuintArray)
def glGenFramebuffers( n,framebuffers ):pass
@_f
@_p.types(_cs.GLenum,_cs.GLenum)
def glCheckFramebufferStatus( target ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLenum,_cs.GLuint,_cs.GLint)
def glFramebufferTexture1D( target,attachment,textarget,texture,level ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLenum,_cs.GLuint,_cs.GLint)
def glFramebufferTexture2D( target,attachment,textarget,texture,level ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLenum,_cs.GLuint,_cs.GLint,_cs.GLint)
def glFramebufferTexture3D( target,attachment,textarget,texture,level,zoffset ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLenum,_cs.GLuint)
def glFramebufferRenderbuffer( target,attachment,renderbuffertarget,renderbuffer ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLenum,arrays.GLintArray)
def glGetFramebufferAttachmentParameteriv( target,attachment,pname,params ):pass
@_f
@_p.types(None,_cs.GLenum)
def glGenerateMipmap( target ):pass
@_f
@_p.types(None,_cs.GLint,_cs.GLint,_cs.GLint,_cs.GLint,_cs.GLint,_cs.GLint,_cs.GLint,_cs.GLint,_cs.GLbitfield,_cs.GLenum)
def glBlitFramebuffer( srcX0,srcY0,srcX1,srcY1,dstX0,dstY0,dstX1,dstY1,mask,filter ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLsizei,_cs.GLenum,_cs.GLsizei,_cs.GLsizei)
def glRenderbufferStorageMultisample( target,samples,internalformat,width,height ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLuint,_cs.GLint,_cs.GLint)
def glFramebufferTextureLayer( target,attachment,texture,level,layer ):pass
# import deprecated
from OpenGL.raw.GL.ARB.framebuffer_object_DEPRECATED import *

def glInitFramebufferObjectARB():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
