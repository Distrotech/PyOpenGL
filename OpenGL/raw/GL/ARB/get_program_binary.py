'''Autogenerated by get_gl_extensions script, do not edit!'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_get_program_binary'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_ARB_get_program_binary',False)
_p.unpack_constants( """GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
GL_PROGRAM_BINARY_LENGTH 0x8741
GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
GL_PROGRAM_BINARY_FORMATS 0x87FF""", globals())
@_f
@_p.types(None,_cs.GLuint,_cs.GLsizei,arrays.GLsizeiArray,arrays.GLuintArray,ctypes.c_void_p)
def glGetProgramBinary( program,bufSize,length,binaryFormat,binary ):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLenum,ctypes.c_void_p,_cs.GLsizei)
def glProgramBinary( program,binaryFormat,binary,length ):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLenum,_cs.GLint)
def glProgramParameteri( program,pname,value ):pass


def glInitGetProgramBinaryARB():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
