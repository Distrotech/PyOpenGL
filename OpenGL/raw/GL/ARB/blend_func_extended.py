'''OpenGL extension ARB.blend_func_extended

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_blend_func_extended'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_ARB_blend_func_extended',False)
_p.unpack_constants( """GL_SRC1_COLOR 0x88F9
GL_ONE_MINUS_SRC1_COLOR 0x88FA
GL_ONE_MINUS_SRC1_ALPHA 0x88FB
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC""", globals())
@_f
@_p.types(None,_cs.GLuint,_cs.GLuint,_cs.GLuint,arrays.GLcharArray)
def glBindFragDataLocationIndexed( program,colorNumber,index,name ):pass
@_f
@_p.types(_cs.GLint,_cs.GLuint,arrays.GLcharArray)
def glGetFragDataIndex( program,name ):pass


def glInitBlendFuncExtendedARB():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
