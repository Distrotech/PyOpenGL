'''OpenGL extension ARB.transform_feedback3

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_transform_feedback3'
_DEPRECATED = False
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = constant.Constant( 'GL_MAX_TRANSFORM_FEEDBACK_BUFFERS', 0x8E70 )
glDrawTransformFeedbackStream = platform.createExtensionFunction( 
'glDrawTransformFeedbackStream',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLuint,constants.GLuint,),
doc='glDrawTransformFeedbackStream(GLenum(mode), GLuint(id), GLuint(stream)) -> None',
argNames=('mode','id','stream',),
deprecated=_DEPRECATED,
)

glBeginQueryIndexed = platform.createExtensionFunction( 
'glBeginQueryIndexed',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLuint,constants.GLuint,),
doc='glBeginQueryIndexed(GLenum(target), GLuint(index), GLuint(id)) -> None',
argNames=('target','index','id',),
deprecated=_DEPRECATED,
)

glEndQueryIndexed = platform.createExtensionFunction( 
'glEndQueryIndexed',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLuint,),
doc='glEndQueryIndexed(GLenum(target), GLuint(index)) -> None',
argNames=('target','index',),
deprecated=_DEPRECATED,
)

glGetQueryIndexediv = platform.createExtensionFunction( 
'glGetQueryIndexediv',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLuint,constants.GLenum,arrays.GLintArray,),
doc='glGetQueryIndexediv(GLenum(target), GLuint(index), GLenum(pname), GLintArray(params)) -> None',
argNames=('target','index','pname','params',),
deprecated=_DEPRECATED,
)


def glInitTransformFeedback3ARB():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
