'''OpenGL extension ARB.draw_buffers_blend

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_draw_buffers_blend'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_ARB_draw_buffers_blend',False)

@_f
@_p.types(None,_cs.GLuint,_cs.GLenum)
def glBlendEquationiARB( buf,mode ):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLenum,_cs.GLenum)
def glBlendEquationSeparateiARB( buf,modeRGB,modeAlpha ):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLenum,_cs.GLenum)
def glBlendFunciARB( buf,src,dst ):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLenum,_cs.GLenum,_cs.GLenum,_cs.GLenum)
def glBlendFuncSeparateiARB( buf,srcRGB,dstRGB,srcAlpha,dstAlpha ):pass


def glInitDrawBuffersBlendARB():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
