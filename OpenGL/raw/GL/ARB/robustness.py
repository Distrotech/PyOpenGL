'''Autogenerated by get_gl_extensions script, do not edit!'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_robustness'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_ARB_robustness',False)
_p.unpack_constants( """GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x4
GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
GL_GUILTY_CONTEXT_RESET_ARB 0x8253
GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
GL_NO_RESET_NOTIFICATION_ARB 0x8261""", globals())
@_f
@_p.types(_cs.GLenum,)
def glGetGraphicsResetStatusARB():pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLsizei,arrays.GLdoubleArray)
def glGetnMapdvARB(target,query,bufSize,v):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLsizei,arrays.GLfloatArray)
def glGetnMapfvARB(target,query,bufSize,v):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLsizei,arrays.GLintArray)
def glGetnMapivARB(target,query,bufSize,v):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLsizei,arrays.GLfloatArray)
def glGetnPixelMapfvARB(map,bufSize,values):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLsizei,arrays.GLuintArray)
def glGetnPixelMapuivARB(map,bufSize,values):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLsizei,arrays.GLushortArray)
def glGetnPixelMapusvARB(map,bufSize,values):pass
@_f
@_p.types(None,_cs.GLsizei,arrays.GLubyteArray)
def glGetnPolygonStippleARB(bufSize,pattern):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLenum,_cs.GLsizei,ctypes.c_void_p)
def glGetnColorTableARB(target,format,type,bufSize,table):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLenum,_cs.GLsizei,ctypes.c_void_p)
def glGetnConvolutionFilterARB(target,format,type,bufSize,image):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum,_cs.GLenum,_cs.GLsizei,ctypes.c_void_p,_cs.GLsizei,ctypes.c_void_p,ctypes.c_void_p)
def glGetnSeparableFilterARB(target,format,type,rowBufSize,row,columnBufSize,column,span):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLboolean,_cs.GLenum,_cs.GLenum,_cs.GLsizei,ctypes.c_void_p)
def glGetnHistogramARB(target,reset,format,type,bufSize,values):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLboolean,_cs.GLenum,_cs.GLenum,_cs.GLsizei,ctypes.c_void_p)
def glGetnMinmaxARB(target,reset,format,type,bufSize,values):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLint,_cs.GLenum,_cs.GLenum,_cs.GLsizei,ctypes.c_void_p)
def glGetnTexImageARB(target,level,format,type,bufSize,img):pass
@_f
@_p.types(None,_cs.GLint,_cs.GLint,_cs.GLsizei,_cs.GLsizei,_cs.GLenum,_cs.GLenum,_cs.GLsizei,ctypes.c_void_p)
def glReadnPixelsARB(x,y,width,height,format,type,bufSize,data):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLint,_cs.GLsizei,ctypes.c_void_p)
def glGetnCompressedTexImageARB(target,lod,bufSize,img):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLint,_cs.GLsizei,arrays.GLfloatArray)
def glGetnUniformfvARB(program,location,bufSize,params):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLint,_cs.GLsizei,arrays.GLintArray)
def glGetnUniformivARB(program,location,bufSize,params):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLint,_cs.GLsizei,arrays.GLuintArray)
def glGetnUniformuivARB(program,location,bufSize,params):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLint,_cs.GLsizei,arrays.GLdoubleArray)
def glGetnUniformdvARB(program,location,bufSize,params):pass


def glInitRobustnessARB():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
