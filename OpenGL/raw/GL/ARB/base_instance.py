'''OpenGL extension ARB.base_instance

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_base_instance'
_DEPRECATED = False

glDrawArraysInstancedBaseInstance = platform.createExtensionFunction( 
'glDrawArraysInstancedBaseInstance',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLint,constants.GLsizei,constants.GLsizei,constants.GLuint,),
doc='glDrawArraysInstancedBaseInstance(GLenum(mode), GLint(first), GLsizei(count), GLsizei(primcount), GLuint(baseinstance)) -> None',
argNames=('mode','first','count','primcount','baseinstance',),
deprecated=_DEPRECATED,
)

glDrawElementsInstancedBaseInstance = platform.createExtensionFunction( 
'glDrawElementsInstancedBaseInstance',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLsizei,constants.GLenum,ctypes.POINTER(constants.void),constants.GLsizei,constants.GLuint,),
doc='glDrawElementsInstancedBaseInstance(GLenum(mode), GLsizei(count), GLenum(type), POINTER(constants.void)(indices), GLsizei(primcount), GLuint(baseinstance)) -> None',
argNames=('mode','count','type','indices','primcount','baseinstance',),
deprecated=_DEPRECATED,
)

glDrawElementsInstancedBaseVertexBaseInstance = platform.createExtensionFunction( 
'glDrawElementsInstancedBaseVertexBaseInstance',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLsizei,constants.GLenum,ctypes.POINTER(constants.void),constants.GLsizei,constants.GLint,constants.GLuint,),
doc='glDrawElementsInstancedBaseVertexBaseInstance(GLenum(mode), GLsizei(count), GLenum(type), POINTER(constants.void)(indices), GLsizei(primcount), GLint(basevertex), GLuint(baseinstance)) -> None',
argNames=('mode','count','type','indices','primcount','basevertex','baseinstance',),
deprecated=_DEPRECATED,
)


def glInitBaseInstanceARB():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
