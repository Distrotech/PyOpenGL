'''OpenGL extension ARB.draw_indirect

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_draw_indirect'
_DEPRECATED = False
GL_DRAW_INDIRECT_BUFFER = constant.Constant( 'GL_DRAW_INDIRECT_BUFFER', 0x8F3F )
GL_DRAW_INDIRECT_BUFFER_BINDING = constant.Constant( 'GL_DRAW_INDIRECT_BUFFER_BINDING', 0x8F43 )
glDrawArraysIndirect = platform.createExtensionFunction( 
'glDrawArraysIndirect',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,ctypes.c_void_p,),
doc='glDrawArraysIndirect(GLenum(mode), c_void_p(indirect)) -> None',
argNames=('mode','indirect',),
deprecated=_DEPRECATED,
)

glDrawElementsIndirect = platform.createExtensionFunction( 
'glDrawElementsIndirect',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,ctypes.c_void_p,),
doc='glDrawElementsIndirect(GLenum(mode), GLenum(type), c_void_p(indirect)) -> None',
argNames=('mode','type','indirect',),
deprecated=_DEPRECATED,
)


def glInitDrawIndirectARB():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
