'''Autogenerated by get_gl_extensions script, do not edit!'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_texture_multisample'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_ARB_texture_multisample',False)
_p.unpack_constants( """GL_SAMPLE_POSITION 0x8E50
GL_SAMPLE_MASK 0x8E51
GL_SAMPLE_MASK_VALUE 0x8E52
GL_MAX_SAMPLE_MASK_WORDS 0x8E59
GL_TEXTURE_2D_MULTISAMPLE 0x9100
GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
GL_TEXTURE_SAMPLES 0x9106
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
GL_SAMPLER_2D_MULTISAMPLE 0x9108
GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
GL_MAX_INTEGER_SAMPLES 0x9110""", globals())
glget.addGLGetConstant( GL_MAX_SAMPLE_MASK_WORDS, (1,) )
glget.addGLGetConstant( GL_TEXTURE_BINDING_2D_MULTISAMPLE, (1,) )
glget.addGLGetConstant( GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY, (1,) )
glget.addGLGetConstant( GL_MAX_COLOR_TEXTURE_SAMPLES, (1,) )
glget.addGLGetConstant( GL_MAX_DEPTH_TEXTURE_SAMPLES, (1,) )
glget.addGLGetConstant( GL_MAX_INTEGER_SAMPLES, (1,) )
@_f
@_p.types(None,_cs.GLenum,_cs.GLsizei,_cs.GLint,_cs.GLsizei,_cs.GLsizei,_cs.GLboolean)
def glTexImage2DMultisample( target,samples,internalformat,width,height,fixedsamplelocations ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLsizei,_cs.GLint,_cs.GLsizei,_cs.GLsizei,_cs.GLsizei,_cs.GLboolean)
def glTexImage3DMultisample( target,samples,internalformat,width,height,depth,fixedsamplelocations ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLuint,arrays.GLfloatArray)
def glGetMultisamplefv( pname,index,val ):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLbitfield)
def glSampleMaski( index,mask ):pass


def glInitTextureMultisampleARB():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
