'''OpenGL extension ARB.texture_storage

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_texture_storage'
_DEPRECATED = False
GL_TEXTURE_IMMUTABLE_FORMAT = constant.Constant( 'GL_TEXTURE_IMMUTABLE_FORMAT', 0x912F )
glTexStorage1D = platform.createExtensionFunction( 
'glTexStorage1D',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLsizei,constants.GLenum,constants.GLsizei,),
doc='glTexStorage1D(GLenum(target), GLsizei(levels), GLenum(internalformat), GLsizei(width)) -> None',
argNames=('target','levels','internalformat','width',),
deprecated=_DEPRECATED,
)

glTexStorage2D = platform.createExtensionFunction( 
'glTexStorage2D',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLsizei,constants.GLenum,constants.GLsizei,constants.GLsizei,),
doc='glTexStorage2D(GLenum(target), GLsizei(levels), GLenum(internalformat), GLsizei(width), GLsizei(height)) -> None',
argNames=('target','levels','internalformat','width','height',),
deprecated=_DEPRECATED,
)

glTexStorage3D = platform.createExtensionFunction( 
'glTexStorage3D',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLsizei,constants.GLenum,constants.GLsizei,constants.GLsizei,constants.GLsizei,),
doc='glTexStorage3D(GLenum(target), GLsizei(levels), GLenum(internalformat), GLsizei(width), GLsizei(height), GLsizei(depth)) -> None',
argNames=('target','levels','internalformat','width','height','depth',),
deprecated=_DEPRECATED,
)

glTextureStorage1DEXT = platform.createExtensionFunction( 
'glTextureStorage1DEXT',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLenum,constants.GLsizei,constants.GLenum,constants.GLsizei,),
doc='glTextureStorage1DEXT(GLuint(texture), GLenum(target), GLsizei(levels), GLenum(internalformat), GLsizei(width)) -> None',
argNames=('texture','target','levels','internalformat','width',),
deprecated=_DEPRECATED,
)

glTextureStorage2DEXT = platform.createExtensionFunction( 
'glTextureStorage2DEXT',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLenum,constants.GLsizei,constants.GLenum,constants.GLsizei,constants.GLsizei,),
doc='glTextureStorage2DEXT(GLuint(texture), GLenum(target), GLsizei(levels), GLenum(internalformat), GLsizei(width), GLsizei(height)) -> None',
argNames=('texture','target','levels','internalformat','width','height',),
deprecated=_DEPRECATED,
)

glTextureStorage3DEXT = platform.createExtensionFunction( 
'glTextureStorage3DEXT',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLenum,constants.GLsizei,constants.GLenum,constants.GLsizei,constants.GLsizei,constants.GLsizei,),
doc='glTextureStorage3DEXT(GLuint(texture), GLenum(target), GLsizei(levels), GLenum(internalformat), GLsizei(width), GLsizei(height), GLsizei(depth)) -> None',
argNames=('texture','target','levels','internalformat','width','height','depth',),
deprecated=_DEPRECATED,
)


def glInitTextureStorageARB():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
