'''OpenGL extension ARB.transform_feedback2

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_transform_feedback2'
_DEPRECATED = False
GL_TRANSFORM_FEEDBACK = constant.Constant( 'GL_TRANSFORM_FEEDBACK', 0x8E22 )
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = constant.Constant( 'GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED', 0x8E23 )
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = constant.Constant( 'GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE', 0x8E24 )
GL_TRANSFORM_FEEDBACK_BINDING = constant.Constant( 'GL_TRANSFORM_FEEDBACK_BINDING', 0x8E25 )
glBindTransformFeedback = platform.createExtensionFunction( 
'glBindTransformFeedback',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLuint,),
doc='glBindTransformFeedback(GLenum(target), GLuint(id)) -> None',
argNames=('target','id',),
deprecated=_DEPRECATED,
)

glDeleteTransformFeedbacks = platform.createExtensionFunction( 
'glDeleteTransformFeedbacks',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLsizei,arrays.GLuintArray,),
doc='glDeleteTransformFeedbacks(GLsizei(n), GLuintArray(ids)) -> None',
argNames=('n','ids',),
deprecated=_DEPRECATED,
)

glGenTransformFeedbacks = platform.createExtensionFunction( 
'glGenTransformFeedbacks',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLsizei,arrays.GLuintArray,),
doc='glGenTransformFeedbacks(GLsizei(n), GLuintArray(ids)) -> None',
argNames=('n','ids',),
deprecated=_DEPRECATED,
)

glIsTransformFeedback = platform.createExtensionFunction( 
'glIsTransformFeedback',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=constants.GLboolean, 
argTypes=(constants.GLuint,),
doc='glIsTransformFeedback(GLuint(id)) -> constants.GLboolean',
argNames=('id',),
deprecated=_DEPRECATED,
)

glPauseTransformFeedback = platform.createExtensionFunction( 
'glPauseTransformFeedback',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(),
doc='glPauseTransformFeedback() -> None',
argNames=(),
deprecated=_DEPRECATED,
)

glResumeTransformFeedback = platform.createExtensionFunction( 
'glResumeTransformFeedback',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(),
doc='glResumeTransformFeedback() -> None',
argNames=(),
deprecated=_DEPRECATED,
)

glDrawTransformFeedback = platform.createExtensionFunction( 
'glDrawTransformFeedback',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLuint,),
doc='glDrawTransformFeedback(GLenum(mode), GLuint(id)) -> None',
argNames=('mode','id',),
deprecated=_DEPRECATED,
)


def glInitTransformFeedback2ARB():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
