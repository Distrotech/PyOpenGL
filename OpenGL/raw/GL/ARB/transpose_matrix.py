'''OpenGL extension ARB.transpose_matrix

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ARB_transpose_matrix'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_ARB_transpose_matrix',False)
_p.unpack_constants( """GL_TRANSPOSE_MODELVIEW_MATRIX_ARB 0x84E3
GL_TRANSPOSE_PROJECTION_MATRIX_ARB 0x84E4
GL_TRANSPOSE_TEXTURE_MATRIX_ARB 0x84E5
GL_TRANSPOSE_COLOR_MATRIX_ARB 0x84E6""", globals())
glget.addGLGetConstant( GL_TRANSPOSE_MODELVIEW_MATRIX_ARB, (4,4) )
glget.addGLGetConstant( GL_TRANSPOSE_PROJECTION_MATRIX_ARB, (4,4) )
glget.addGLGetConstant( GL_TRANSPOSE_TEXTURE_MATRIX_ARB, (4,4) )
glget.addGLGetConstant( GL_TRANSPOSE_COLOR_MATRIX_ARB, (4,4) )
@_f
@_p.types(None,arrays.GLfloatArray)
def glLoadTransposeMatrixfARB( m ):pass
@_f
@_p.types(None,arrays.GLdoubleArray)
def glLoadTransposeMatrixdARB( m ):pass
@_f
@_p.types(None,arrays.GLfloatArray)
def glMultTransposeMatrixfARB( m ):pass
@_f
@_p.types(None,arrays.GLdoubleArray)
def glMultTransposeMatrixdARB( m ):pass


def glInitTransposeMatrixARB():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
