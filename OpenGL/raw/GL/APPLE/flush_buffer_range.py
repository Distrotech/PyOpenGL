'''OpenGL extension APPLE.flush_buffer_range

The official definition of this extension is available here:
http://oss.sgi.com/projects/ogl-sample/registry/APPLE/flush_buffer_range.txt

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_APPLE_flush_buffer_range'
_DEPRECATED = False
GL_BUFFER_SERIALIZED_MODIFY_APPLE = constant.Constant( 'GL_BUFFER_SERIALIZED_MODIFY_APPLE', 0x8A12 )
GL_BUFFER_FLUSHING_UNMAP_APPLE = constant.Constant( 'GL_BUFFER_FLUSHING_UNMAP_APPLE', 0x8A13 )
glBufferParameteriAPPLE = platform.createExtensionFunction( 
'glBufferParameteriAPPLE',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,constants.GLint,),
doc='glBufferParameteriAPPLE(GLenum(target), GLenum(pname), GLint(param)) -> None',
argNames=('target','pname','param',),
deprecated=_DEPRECATED,
)

glFlushMappedBufferRangeAPPLE = platform.createExtensionFunction( 
'glFlushMappedBufferRangeAPPLE',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLintptr,constants.GLsizeiptr,),
doc='glFlushMappedBufferRangeAPPLE(GLenum(target), GLintptr(offset), GLsizeiptr(size)) -> None',
argNames=('target','offset','size',),
deprecated=_DEPRECATED,
)


def glInitFlushBufferRangeAPPLE():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
