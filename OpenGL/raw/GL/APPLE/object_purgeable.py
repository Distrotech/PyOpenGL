'''OpenGL extension APPLE.object_purgeable

The official definition of this extension is available here:
	http://oss.sgi.com/projects/ogl-sample/registry/APPLE/object_purgeable.txt

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_APPLE_object_purgeable'
GL_BUFFER_OBJECT_APPLE = constant.Constant( 'GL_BUFFER_OBJECT_APPLE', 0x85B3 )
GL_RELEASED_APPLE = constant.Constant( 'GL_RELEASED_APPLE', 0x8A19 )
GL_VOLATILE_APPLE = constant.Constant( 'GL_VOLATILE_APPLE', 0x8A1A )
GL_RETAINED_APPLE = constant.Constant( 'GL_RETAINED_APPLE', 0x8A1B )
GL_UNDEFINED_APPLE = constant.Constant( 'GL_UNDEFINED_APPLE', 0x8A1C )
GL_PURGEABLE_APPLE = constant.Constant( 'GL_PURGEABLE_APPLE', 0x8A1D )
glObjectPurgeableAPPLE = platform.createExtensionFunction( 
	'glObjectPurgeableAPPLE', dll=platform.GL,
	extension=EXTENSION_NAME,
	resultType=constants.GLenum, 
	argTypes=(constants.GLenum, constants.GLuint, constants.GLenum,),
	doc = 'glObjectPurgeableAPPLE( GLenum(objectType), GLuint(name), GLenum(option) ) -> constants.GLenum',
	argNames = ('objectType', 'name', 'option',),
)

glObjectUnpurgeableAPPLE = platform.createExtensionFunction( 
	'glObjectUnpurgeableAPPLE', dll=platform.GL,
	extension=EXTENSION_NAME,
	resultType=constants.GLenum, 
	argTypes=(constants.GLenum, constants.GLuint, constants.GLenum,),
	doc = 'glObjectUnpurgeableAPPLE( GLenum(objectType), GLuint(name), GLenum(option) ) -> constants.GLenum',
	argNames = ('objectType', 'name', 'option',),
)

glGetObjectParameterivAPPLE = platform.createExtensionFunction( 
	'glGetObjectParameterivAPPLE', dll=platform.GL,
	extension=EXTENSION_NAME,
	resultType=None, 
	argTypes=(constants.GLenum, constants.GLuint, constants.GLenum, arrays.GLintArray,),
	doc = 'glGetObjectParameterivAPPLE( GLenum(objectType), GLuint(name), GLenum(pname), GLintArray(params) ) -> None',
	argNames = ('objectType', 'name', 'pname', 'params',),
)


def glInitObjectPurgeableAPPLE():
	'''Return boolean indicating whether this extension is available'''
	return extensions.hasGLExtension( EXTENSION_NAME )
