'''Autogenerated by get_gl_extensions script, do not edit!'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_APPLE_fence'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_APPLE_fence',False)
_p.unpack_constants( """GL_DRAW_PIXELS_APPLE 0x8A0A
GL_FENCE_APPLE 0x8A0B""", globals())
@_f
@_p.types(None,_cs.GLsizei,arrays.GLuintArray)
def glGenFencesAPPLE(n,fences):pass
@_f
@_p.types(None,_cs.GLsizei,arrays.GLuintArray)
def glDeleteFencesAPPLE(n,fences):pass
@_f
@_p.types(None,_cs.GLuint)
def glSetFenceAPPLE(fence):pass
@_f
@_p.types(_cs.GLboolean,_cs.GLuint)
def glIsFenceAPPLE(fence):pass
@_f
@_p.types(_cs.GLboolean,_cs.GLuint)
def glTestFenceAPPLE(fence):pass
@_f
@_p.types(None,_cs.GLuint)
def glFinishFenceAPPLE(fence):pass
@_f
@_p.types(_cs.GLboolean,_cs.GLenum,_cs.GLuint)
def glTestObjectAPPLE(object,name):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLint)
def glFinishObjectAPPLE(object,name):pass


def glInitFenceAPPLE():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
