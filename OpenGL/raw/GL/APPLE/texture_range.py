'''OpenGL extension APPLE.texture_range

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_APPLE_texture_range'
_DEPRECATED = False
GL_TEXTURE_RANGE_LENGTH_APPLE = constant.Constant( 'GL_TEXTURE_RANGE_LENGTH_APPLE', 0x85B7 )
GL_TEXTURE_RANGE_POINTER_APPLE = constant.Constant( 'GL_TEXTURE_RANGE_POINTER_APPLE', 0x85B8 )
GL_TEXTURE_STORAGE_HINT_APPLE = constant.Constant( 'GL_TEXTURE_STORAGE_HINT_APPLE', 0x85BC )
GL_STORAGE_PRIVATE_APPLE = constant.Constant( 'GL_STORAGE_PRIVATE_APPLE', 0x85BD )
glTextureRangeAPPLE = platform.createExtensionFunction( 
'glTextureRangeAPPLE',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLsizei,ctypes.c_void_p,),
doc='glTextureRangeAPPLE(GLenum(target), GLsizei(length), c_void_p(pointer)) -> None',
argNames=('target','length','pointer',),
deprecated=_DEPRECATED,
)

glGetTexParameterPointervAPPLE = platform.createExtensionFunction( 
'glGetTexParameterPointervAPPLE',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,arrays.GLvoidpArray,),
doc='glGetTexParameterPointervAPPLE(GLenum(target), GLenum(pname), GLvoidpArray(params)) -> None',
argNames=('target','pname','params',),
deprecated=_DEPRECATED,
)


def glInitTextureRangeAPPLE():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
