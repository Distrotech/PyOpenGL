'''OpenGL extension APPLE.vertex_array_object

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_APPLE_vertex_array_object'
_DEPRECATED = False
GL_VERTEX_ARRAY_BINDING_APPLE = constant.Constant( 'GL_VERTEX_ARRAY_BINDING_APPLE', 0x85B5 )
glBindVertexArrayAPPLE = platform.createExtensionFunction( 
'glBindVertexArrayAPPLE',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,),
doc='glBindVertexArrayAPPLE(GLuint(array)) -> None',
argNames=('array',),
deprecated=_DEPRECATED,
)

glDeleteVertexArraysAPPLE = platform.createExtensionFunction( 
'glDeleteVertexArraysAPPLE',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLsizei,arrays.GLuintArray,),
doc='glDeleteVertexArraysAPPLE(GLsizei(n), GLuintArray(arrays)) -> None',
argNames=('n','arrays',),
deprecated=_DEPRECATED,
)

glGenVertexArraysAPPLE = platform.createExtensionFunction( 
'glGenVertexArraysAPPLE',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLsizei,arrays.GLuintArray,),
doc='glGenVertexArraysAPPLE(GLsizei(n), GLuintArray(arrays)) -> None',
argNames=('n','arrays',),
deprecated=_DEPRECATED,
)

glIsVertexArrayAPPLE = platform.createExtensionFunction( 
'glIsVertexArrayAPPLE',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=constants.GLboolean, 
argTypes=(constants.GLuint,),
doc='glIsVertexArrayAPPLE(GLuint(array)) -> constants.GLboolean',
argNames=('array',),
deprecated=_DEPRECATED,
)


def glInitVertexArrayObjectAPPLE():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
