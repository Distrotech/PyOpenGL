'''Autogenerated by get_gl_extensions script, do not edit!'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_SGIS_texture4D'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_SGIS_texture4D',False)
_p.unpack_constants( """GL_PACK_SKIP_VOLUMES_SGIS 0x8130
GL_PACK_IMAGE_DEPTH_SGIS 0x8131
GL_UNPACK_SKIP_VOLUMES_SGIS 0x8132
GL_UNPACK_IMAGE_DEPTH_SGIS 0x8133
GL_TEXTURE_4D_SGIS 0x8134
GL_PROXY_TEXTURE_4D_SGIS 0x8135
GL_TEXTURE_4DSIZE_SGIS 0x8136
GL_TEXTURE_WRAP_Q_SGIS 0x8137
GL_MAX_4D_TEXTURE_SIZE_SGIS 0x8138
GL_TEXTURE_4D_BINDING_SGIS 0x814F""", globals())
@_f
@_p.types(None,_cs.GLenum,_cs.GLint,_cs.GLenum,_cs.GLsizei,_cs.GLsizei,_cs.GLsizei,_cs.GLsizei,_cs.GLint,_cs.GLenum,_cs.GLenum,ctypes.c_void_p)
def glTexImage4DSGIS(target,level,internalformat,width,height,depth,size4d,border,format,type,pixels):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLint,_cs.GLint,_cs.GLint,_cs.GLint,_cs.GLint,_cs.GLsizei,_cs.GLsizei,_cs.GLsizei,_cs.GLsizei,_cs.GLenum,_cs.GLenum,ctypes.c_void_p)
def glTexSubImage4DSGIS(target,level,xoffset,yoffset,zoffset,woffset,width,height,depth,size4d,format,type,pixels):pass


def glInitTexture4DSGIS():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
