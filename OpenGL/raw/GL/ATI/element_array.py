'''Autogenerated by get_gl_extensions script, do not edit!'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_ATI_element_array'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_ATI_element_array',False)
_p.unpack_constants( """GL_ELEMENT_ARRAY_ATI 0x8768
GL_ELEMENT_ARRAY_TYPE_ATI 0x8769
GL_ELEMENT_ARRAY_POINTER_ATI 0x876A""", globals())
glget.addGLGetConstant( GL_ELEMENT_ARRAY_TYPE_ATI, (1,) )
@_f
@_p.types(None,_cs.GLenum,ctypes.c_void_p)
def glElementPointerATI( type,pointer ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLsizei)
def glDrawElementArrayATI( mode,count ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLuint,_cs.GLuint,_cs.GLsizei)
def glDrawRangeElementArrayATI( mode,start,end,count ):pass


def glInitElementArrayATI():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
