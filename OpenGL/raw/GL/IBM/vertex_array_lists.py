'''OpenGL extension IBM.vertex_array_lists

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_IBM_vertex_array_lists'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_IBM_vertex_array_lists',False)

@_f
@_p.types(None,_cs.GLint,_cs.GLenum,_cs.GLint,arrays.GLvoidpArray,_cs.GLint)
def glColorPointerListIBM( size,type,stride,pointer,ptrstride ):pass
@_f
@_p.types(None,_cs.GLint,_cs.GLenum,_cs.GLint,arrays.GLvoidpArray,_cs.GLint)
def glSecondaryColorPointerListIBM( size,type,stride,pointer,ptrstride ):pass
@_f
@_p.types(None,_cs.GLint,arrays.GLbooleanArray,_cs.GLint)
def glEdgeFlagPointerListIBM( stride,pointer,ptrstride ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLint,arrays.GLvoidpArray,_cs.GLint)
def glFogCoordPointerListIBM( type,stride,pointer,ptrstride ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLint,arrays.GLvoidpArray,_cs.GLint)
def glIndexPointerListIBM( type,stride,pointer,ptrstride ):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLint,arrays.GLvoidpArray,_cs.GLint)
def glNormalPointerListIBM( type,stride,pointer,ptrstride ):pass
@_f
@_p.types(None,_cs.GLint,_cs.GLenum,_cs.GLint,arrays.GLvoidpArray,_cs.GLint)
def glTexCoordPointerListIBM( size,type,stride,pointer,ptrstride ):pass
@_f
@_p.types(None,_cs.GLint,_cs.GLenum,_cs.GLint,arrays.GLvoidpArray,_cs.GLint)
def glVertexPointerListIBM( size,type,stride,pointer,ptrstride ):pass


def glInitVertexArrayListsIBM():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
