'''OpenGL extension VERSION.GL_1_3

The official definition of this extension is available here:
http://oss.sgi.com/projects/ogl-sample/registry/VERSION/GL_1_3.txt

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_VERSION_GL_1_3'
_DEPRECATED = False
GL_TEXTURE0 = constant.Constant( 'GL_TEXTURE0', 0x84C0 )
GL_TEXTURE1 = constant.Constant( 'GL_TEXTURE1', 0x84C1 )
GL_TEXTURE2 = constant.Constant( 'GL_TEXTURE2', 0x84C2 )
GL_TEXTURE3 = constant.Constant( 'GL_TEXTURE3', 0x84C3 )
GL_TEXTURE4 = constant.Constant( 'GL_TEXTURE4', 0x84C4 )
GL_TEXTURE5 = constant.Constant( 'GL_TEXTURE5', 0x84C5 )
GL_TEXTURE6 = constant.Constant( 'GL_TEXTURE6', 0x84C6 )
GL_TEXTURE7 = constant.Constant( 'GL_TEXTURE7', 0x84C7 )
GL_TEXTURE8 = constant.Constant( 'GL_TEXTURE8', 0x84C8 )
GL_TEXTURE9 = constant.Constant( 'GL_TEXTURE9', 0x84C9 )
GL_TEXTURE10 = constant.Constant( 'GL_TEXTURE10', 0x84CA )
GL_TEXTURE11 = constant.Constant( 'GL_TEXTURE11', 0x84CB )
GL_TEXTURE12 = constant.Constant( 'GL_TEXTURE12', 0x84CC )
GL_TEXTURE13 = constant.Constant( 'GL_TEXTURE13', 0x84CD )
GL_TEXTURE14 = constant.Constant( 'GL_TEXTURE14', 0x84CE )
GL_TEXTURE15 = constant.Constant( 'GL_TEXTURE15', 0x84CF )
GL_TEXTURE16 = constant.Constant( 'GL_TEXTURE16', 0x84D0 )
GL_TEXTURE17 = constant.Constant( 'GL_TEXTURE17', 0x84D1 )
GL_TEXTURE18 = constant.Constant( 'GL_TEXTURE18', 0x84D2 )
GL_TEXTURE19 = constant.Constant( 'GL_TEXTURE19', 0x84D3 )
GL_TEXTURE20 = constant.Constant( 'GL_TEXTURE20', 0x84D4 )
GL_TEXTURE21 = constant.Constant( 'GL_TEXTURE21', 0x84D5 )
GL_TEXTURE22 = constant.Constant( 'GL_TEXTURE22', 0x84D6 )
GL_TEXTURE23 = constant.Constant( 'GL_TEXTURE23', 0x84D7 )
GL_TEXTURE24 = constant.Constant( 'GL_TEXTURE24', 0x84D8 )
GL_TEXTURE25 = constant.Constant( 'GL_TEXTURE25', 0x84D9 )
GL_TEXTURE26 = constant.Constant( 'GL_TEXTURE26', 0x84DA )
GL_TEXTURE27 = constant.Constant( 'GL_TEXTURE27', 0x84DB )
GL_TEXTURE28 = constant.Constant( 'GL_TEXTURE28', 0x84DC )
GL_TEXTURE29 = constant.Constant( 'GL_TEXTURE29', 0x84DD )
GL_TEXTURE30 = constant.Constant( 'GL_TEXTURE30', 0x84DE )
GL_TEXTURE31 = constant.Constant( 'GL_TEXTURE31', 0x84DF )
GL_ACTIVE_TEXTURE = constant.Constant( 'GL_ACTIVE_TEXTURE', 0x84E0 )
GL_MULTISAMPLE = constant.Constant( 'GL_MULTISAMPLE', 0x809D )
GL_SAMPLE_ALPHA_TO_COVERAGE = constant.Constant( 'GL_SAMPLE_ALPHA_TO_COVERAGE', 0x809E )
GL_SAMPLE_ALPHA_TO_ONE = constant.Constant( 'GL_SAMPLE_ALPHA_TO_ONE', 0x809F )
GL_SAMPLE_COVERAGE = constant.Constant( 'GL_SAMPLE_COVERAGE', 0x80A0 )
GL_SAMPLE_BUFFERS = constant.Constant( 'GL_SAMPLE_BUFFERS', 0x80A8 )
GL_SAMPLES = constant.Constant( 'GL_SAMPLES', 0x80A9 )
GL_SAMPLE_COVERAGE_VALUE = constant.Constant( 'GL_SAMPLE_COVERAGE_VALUE', 0x80AA )
GL_SAMPLE_COVERAGE_INVERT = constant.Constant( 'GL_SAMPLE_COVERAGE_INVERT', 0x80AB )
GL_TEXTURE_CUBE_MAP = constant.Constant( 'GL_TEXTURE_CUBE_MAP', 0x8513 )
GL_TEXTURE_BINDING_CUBE_MAP = constant.Constant( 'GL_TEXTURE_BINDING_CUBE_MAP', 0x8514 )
GL_TEXTURE_CUBE_MAP_POSITIVE_X = constant.Constant( 'GL_TEXTURE_CUBE_MAP_POSITIVE_X', 0x8515 )
GL_TEXTURE_CUBE_MAP_NEGATIVE_X = constant.Constant( 'GL_TEXTURE_CUBE_MAP_NEGATIVE_X', 0x8516 )
GL_TEXTURE_CUBE_MAP_POSITIVE_Y = constant.Constant( 'GL_TEXTURE_CUBE_MAP_POSITIVE_Y', 0x8517 )
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = constant.Constant( 'GL_TEXTURE_CUBE_MAP_NEGATIVE_Y', 0x8518 )
GL_TEXTURE_CUBE_MAP_POSITIVE_Z = constant.Constant( 'GL_TEXTURE_CUBE_MAP_POSITIVE_Z', 0x8519 )
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = constant.Constant( 'GL_TEXTURE_CUBE_MAP_NEGATIVE_Z', 0x851A )
GL_PROXY_TEXTURE_CUBE_MAP = constant.Constant( 'GL_PROXY_TEXTURE_CUBE_MAP', 0x851B )
GL_MAX_CUBE_MAP_TEXTURE_SIZE = constant.Constant( 'GL_MAX_CUBE_MAP_TEXTURE_SIZE', 0x851C )
GL_COMPRESSED_RGB = constant.Constant( 'GL_COMPRESSED_RGB', 0x84ED )
GL_COMPRESSED_RGBA = constant.Constant( 'GL_COMPRESSED_RGBA', 0x84EE )
GL_TEXTURE_COMPRESSION_HINT = constant.Constant( 'GL_TEXTURE_COMPRESSION_HINT', 0x84EF )
GL_TEXTURE_COMPRESSED_IMAGE_SIZE = constant.Constant( 'GL_TEXTURE_COMPRESSED_IMAGE_SIZE', 0x86A0 )
GL_TEXTURE_COMPRESSED = constant.Constant( 'GL_TEXTURE_COMPRESSED', 0x86A1 )
GL_NUM_COMPRESSED_TEXTURE_FORMATS = constant.Constant( 'GL_NUM_COMPRESSED_TEXTURE_FORMATS', 0x86A2 )
GL_COMPRESSED_TEXTURE_FORMATS = constant.Constant( 'GL_COMPRESSED_TEXTURE_FORMATS', 0x86A3 )
GL_CLAMP_TO_BORDER = constant.Constant( 'GL_CLAMP_TO_BORDER', 0x812D )
glActiveTexture = platform.createExtensionFunction( 
'glActiveTexture',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,),
doc='glActiveTexture(GLenum(texture)) -> None',
argNames=('texture',),
deprecated=_DEPRECATED,
)

glSampleCoverage = platform.createExtensionFunction( 
'glSampleCoverage',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLclampf,constants.GLboolean,),
doc='glSampleCoverage(GLclampf(value), GLboolean(invert)) -> None',
argNames=('value','invert',),
deprecated=_DEPRECATED,
)

glCompressedTexImage3D = platform.createExtensionFunction( 
'glCompressedTexImage3D',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLint,constants.GLenum,constants.GLsizei,constants.GLsizei,constants.GLsizei,constants.GLint,constants.GLsizei,ctypes.c_void_p,),
doc='glCompressedTexImage3D(GLenum(target), GLint(level), GLenum(internalformat), GLsizei(width), GLsizei(height), GLsizei(depth), GLint(border), GLsizei(imageSize), c_void_p(data)) -> None',
argNames=('target','level','internalformat','width','height','depth','border','imageSize','data',),
deprecated=_DEPRECATED,
)

glCompressedTexImage2D = platform.createExtensionFunction( 
'glCompressedTexImage2D',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLint,constants.GLenum,constants.GLsizei,constants.GLsizei,constants.GLint,constants.GLsizei,ctypes.c_void_p,),
doc='glCompressedTexImage2D(GLenum(target), GLint(level), GLenum(internalformat), GLsizei(width), GLsizei(height), GLint(border), GLsizei(imageSize), c_void_p(data)) -> None',
argNames=('target','level','internalformat','width','height','border','imageSize','data',),
deprecated=_DEPRECATED,
)

glCompressedTexImage1D = platform.createExtensionFunction( 
'glCompressedTexImage1D',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLint,constants.GLenum,constants.GLsizei,constants.GLint,constants.GLsizei,ctypes.c_void_p,),
doc='glCompressedTexImage1D(GLenum(target), GLint(level), GLenum(internalformat), GLsizei(width), GLint(border), GLsizei(imageSize), c_void_p(data)) -> None',
argNames=('target','level','internalformat','width','border','imageSize','data',),
deprecated=_DEPRECATED,
)

glCompressedTexSubImage3D = platform.createExtensionFunction( 
'glCompressedTexSubImage3D',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLint,constants.GLint,constants.GLint,constants.GLint,constants.GLsizei,constants.GLsizei,constants.GLsizei,constants.GLenum,constants.GLsizei,ctypes.c_void_p,),
doc='glCompressedTexSubImage3D(GLenum(target), GLint(level), GLint(xoffset), GLint(yoffset), GLint(zoffset), GLsizei(width), GLsizei(height), GLsizei(depth), GLenum(format), GLsizei(imageSize), c_void_p(data)) -> None',
argNames=('target','level','xoffset','yoffset','zoffset','width','height','depth','format','imageSize','data',),
deprecated=_DEPRECATED,
)

glCompressedTexSubImage2D = platform.createExtensionFunction( 
'glCompressedTexSubImage2D',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLint,constants.GLint,constants.GLint,constants.GLsizei,constants.GLsizei,constants.GLenum,constants.GLsizei,ctypes.c_void_p,),
doc='glCompressedTexSubImage2D(GLenum(target), GLint(level), GLint(xoffset), GLint(yoffset), GLsizei(width), GLsizei(height), GLenum(format), GLsizei(imageSize), c_void_p(data)) -> None',
argNames=('target','level','xoffset','yoffset','width','height','format','imageSize','data',),
deprecated=_DEPRECATED,
)

glCompressedTexSubImage1D = platform.createExtensionFunction( 
'glCompressedTexSubImage1D',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLint,constants.GLint,constants.GLsizei,constants.GLenum,constants.GLsizei,ctypes.c_void_p,),
doc='glCompressedTexSubImage1D(GLenum(target), GLint(level), GLint(xoffset), GLsizei(width), GLenum(format), GLsizei(imageSize), c_void_p(data)) -> None',
argNames=('target','level','xoffset','width','format','imageSize','data',),
deprecated=_DEPRECATED,
)

glGetCompressedTexImage = platform.createExtensionFunction( 
'glGetCompressedTexImage',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLint,ctypes.c_void_p,),
doc='glGetCompressedTexImage(GLenum(target), GLint(level), c_void_p(img)) -> None',
argNames=('target','level','img',),
deprecated=_DEPRECATED,
)
# import legacy entry points to allow checking for bool(entryPoint)
from OpenGL.raw.GL.VERSION.GL_1_3_DEPRECATED import *