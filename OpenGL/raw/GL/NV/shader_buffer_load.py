'''OpenGL extension NV.shader_buffer_load

The official definition of this extension is available here:
http://oss.sgi.com/projects/ogl-sample/registry/NV/shader_buffer_load.txt

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_NV_shader_buffer_load'
_DEPRECATED = False
GL_BUFFER_GPU_ADDRESS_NV = constant.Constant( 'GL_BUFFER_GPU_ADDRESS_NV', 0x8F1D )
GL_GPU_ADDRESS_NV = constant.Constant( 'GL_GPU_ADDRESS_NV', 0x8F34 )
GL_MAX_SHADER_BUFFER_ADDRESS_NV = constant.Constant( 'GL_MAX_SHADER_BUFFER_ADDRESS_NV', 0x8F35 )
glMakeBufferResidentNV = platform.createExtensionFunction( 
'glMakeBufferResidentNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,),
doc='glMakeBufferResidentNV(GLenum(target), GLenum(access)) -> None',
argNames=('target','access',),
deprecated=_DEPRECATED,
)

glMakeBufferNonResidentNV = platform.createExtensionFunction( 
'glMakeBufferNonResidentNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,),
doc='glMakeBufferNonResidentNV(GLenum(target)) -> None',
argNames=('target',),
deprecated=_DEPRECATED,
)

glIsBufferResidentNV = platform.createExtensionFunction( 
'glIsBufferResidentNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=constants.GLboolean, 
argTypes=(constants.GLenum,),
doc='glIsBufferResidentNV(GLenum(target)) -> constants.GLboolean',
argNames=('target',),
deprecated=_DEPRECATED,
)

glNamedMakeBufferResidentNV = platform.createExtensionFunction( 
'glNamedMakeBufferResidentNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLenum,),
doc='glNamedMakeBufferResidentNV(GLuint(buffer), GLenum(access)) -> None',
argNames=('buffer','access',),
deprecated=_DEPRECATED,
)

glNamedMakeBufferNonResidentNV = platform.createExtensionFunction( 
'glNamedMakeBufferNonResidentNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,),
doc='glNamedMakeBufferNonResidentNV(GLuint(buffer)) -> None',
argNames=('buffer',),
deprecated=_DEPRECATED,
)

glIsNamedBufferResidentNV = platform.createExtensionFunction( 
'glIsNamedBufferResidentNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=constants.GLboolean, 
argTypes=(constants.GLuint,),
doc='glIsNamedBufferResidentNV(GLuint(buffer)) -> constants.GLboolean',
argNames=('buffer',),
deprecated=_DEPRECATED,
)

glGetBufferParameterui64vNV = platform.createExtensionFunction( 
'glGetBufferParameterui64vNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,ctypes.POINTER(constants.GLuint64EXT),),
doc='glGetBufferParameterui64vNV(GLenum(target), GLenum(pname), POINTER(constants.GLuint64EXT)(params)) -> None',
argNames=('target','pname','params',),
deprecated=_DEPRECATED,
)

glGetNamedBufferParameterui64vNV = platform.createExtensionFunction( 
'glGetNamedBufferParameterui64vNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLenum,ctypes.POINTER(constants.GLuint64EXT),),
doc='glGetNamedBufferParameterui64vNV(GLuint(buffer), GLenum(pname), POINTER(constants.GLuint64EXT)(params)) -> None',
argNames=('buffer','pname','params',),
deprecated=_DEPRECATED,
)

glGetIntegerui64vNV = platform.createExtensionFunction( 
'glGetIntegerui64vNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,ctypes.POINTER(constants.GLuint64EXT),),
doc='glGetIntegerui64vNV(GLenum(value), POINTER(constants.GLuint64EXT)(result)) -> None',
argNames=('value','result',),
deprecated=_DEPRECATED,
)

glUniformui64NV = platform.createExtensionFunction( 
'glUniformui64NV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLint,constants.GLuint64EXT,),
doc='glUniformui64NV(GLint(location), GLuint64EXT(value)) -> None',
argNames=('location','value',),
deprecated=_DEPRECATED,
)

glUniformui64vNV = platform.createExtensionFunction( 
'glUniformui64vNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLint,constants.GLsizei,ctypes.POINTER(constants.GLuint64EXT),),
doc='glUniformui64vNV(GLint(location), GLsizei(count), POINTER(constants.GLuint64EXT)(value)) -> None',
argNames=('location','count','value',),
deprecated=_DEPRECATED,
)

glGetUniformui64vNV = platform.createExtensionFunction( 
'glGetUniformui64vNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLint,ctypes.POINTER(constants.GLuint64EXT),),
doc='glGetUniformui64vNV(GLuint(program), GLint(location), POINTER(constants.GLuint64EXT)(params)) -> None',
argNames=('program','location','params',),
deprecated=_DEPRECATED,
)

glProgramUniformui64NV = platform.createExtensionFunction( 
'glProgramUniformui64NV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLint,constants.GLuint64EXT,),
doc='glProgramUniformui64NV(GLuint(program), GLint(location), GLuint64EXT(value)) -> None',
argNames=('program','location','value',),
deprecated=_DEPRECATED,
)

glProgramUniformui64vNV = platform.createExtensionFunction( 
'glProgramUniformui64vNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLint,constants.GLsizei,ctypes.POINTER(constants.GLuint64EXT),),
doc='glProgramUniformui64vNV(GLuint(program), GLint(location), GLsizei(count), POINTER(constants.GLuint64EXT)(value)) -> None',
argNames=('program','location','count','value',),
deprecated=_DEPRECATED,
)


def glInitShaderBufferLoadNV():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
