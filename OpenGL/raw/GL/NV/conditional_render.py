'''OpenGL extension NV.conditional_render

The official definition of this extension is available here:
http://oss.sgi.com/projects/ogl-sample/registry/NV/conditional_render.txt

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_NV_conditional_render'
_DEPRECATED = False
GL_QUERY_WAIT_NV = constant.Constant( 'GL_QUERY_WAIT_NV', 0x8E13 )
GL_QUERY_NO_WAIT_NV = constant.Constant( 'GL_QUERY_NO_WAIT_NV', 0x8E14 )
GL_QUERY_BY_REGION_WAIT_NV = constant.Constant( 'GL_QUERY_BY_REGION_WAIT_NV', 0x8E15 )
GL_QUERY_BY_REGION_NO_WAIT_NV = constant.Constant( 'GL_QUERY_BY_REGION_NO_WAIT_NV', 0x8E16 )
glBeginConditionalRenderNV = platform.createExtensionFunction( 
'glBeginConditionalRenderNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLenum,),
doc='glBeginConditionalRenderNV(GLuint(id), GLenum(mode)) -> None',
argNames=('id','mode',),
deprecated=_DEPRECATED,
)

glEndConditionalRenderNV = platform.createExtensionFunction( 
'glEndConditionalRenderNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(),
doc='glEndConditionalRenderNV() -> None',
argNames=(),
deprecated=_DEPRECATED,
)


def glInitConditionalRenderNV():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
