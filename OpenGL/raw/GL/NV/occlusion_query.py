'''OpenGL extension NV.occlusion_query

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_NV_occlusion_query'
_DEPRECATED = False
GL_PIXEL_COUNTER_BITS_NV = constant.Constant( 'GL_PIXEL_COUNTER_BITS_NV', 0x8864 )
glget.addGLGetConstant( GL_PIXEL_COUNTER_BITS_NV, (1,) )
GL_CURRENT_OCCLUSION_QUERY_ID_NV = constant.Constant( 'GL_CURRENT_OCCLUSION_QUERY_ID_NV', 0x8865 )
glget.addGLGetConstant( GL_CURRENT_OCCLUSION_QUERY_ID_NV, (1,) )
GL_PIXEL_COUNT_NV = constant.Constant( 'GL_PIXEL_COUNT_NV', 0x8866 )
GL_PIXEL_COUNT_AVAILABLE_NV = constant.Constant( 'GL_PIXEL_COUNT_AVAILABLE_NV', 0x8867 )
glGenOcclusionQueriesNV = platform.createExtensionFunction( 
'glGenOcclusionQueriesNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLsizei,arrays.GLuintArray,),
doc='glGenOcclusionQueriesNV(GLsizei(n), GLuintArray(ids)) -> None',
argNames=('n','ids',),
deprecated=_DEPRECATED,
)

glDeleteOcclusionQueriesNV = platform.createExtensionFunction( 
'glDeleteOcclusionQueriesNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLsizei,arrays.GLuintArray,),
doc='glDeleteOcclusionQueriesNV(GLsizei(n), GLuintArray(ids)) -> None',
argNames=('n','ids',),
deprecated=_DEPRECATED,
)

glIsOcclusionQueryNV = platform.createExtensionFunction( 
'glIsOcclusionQueryNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=constants.GLboolean, 
argTypes=(constants.GLuint,),
doc='glIsOcclusionQueryNV(GLuint(id)) -> constants.GLboolean',
argNames=('id',),
deprecated=_DEPRECATED,
)

glBeginOcclusionQueryNV = platform.createExtensionFunction( 
'glBeginOcclusionQueryNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,),
doc='glBeginOcclusionQueryNV(GLuint(id)) -> None',
argNames=('id',),
deprecated=_DEPRECATED,
)

glEndOcclusionQueryNV = platform.createExtensionFunction( 
'glEndOcclusionQueryNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(),
doc='glEndOcclusionQueryNV() -> None',
argNames=(),
deprecated=_DEPRECATED,
)

glGetOcclusionQueryivNV = platform.createExtensionFunction( 
'glGetOcclusionQueryivNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLenum,arrays.GLintArray,),
doc='glGetOcclusionQueryivNV(GLuint(id), GLenum(pname), GLintArray(params)) -> None',
argNames=('id','pname','params',),
deprecated=_DEPRECATED,
)

glGetOcclusionQueryuivNV = platform.createExtensionFunction( 
'glGetOcclusionQueryuivNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLuint,constants.GLenum,arrays.GLuintArray,),
doc='glGetOcclusionQueryuivNV(GLuint(id), GLenum(pname), GLuintArray(params)) -> None',
argNames=('id','pname','params',),
deprecated=_DEPRECATED,
)


def glInitOcclusionQueryNV():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
