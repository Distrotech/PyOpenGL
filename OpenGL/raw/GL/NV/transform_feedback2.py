'''OpenGL extension NV.transform_feedback2

The official definition of this extension is available here:
http://oss.sgi.com/projects/ogl-sample/registry/NV/transform_feedback2.txt

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_NV_transform_feedback2'
_DEPRECATED = False
GL_TRANSFORM_FEEDBACK_NV = constant.Constant( 'GL_TRANSFORM_FEEDBACK_NV', 0x8E22 )
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV = constant.Constant( 'GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV', 0x8E23 )
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV = constant.Constant( 'GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV', 0x8E24 )
GL_TRANSFORM_FEEDBACK_BINDING_NV = constant.Constant( 'GL_TRANSFORM_FEEDBACK_BINDING_NV', 0x8E25 )
glBindTransformFeedbackNV = platform.createExtensionFunction( 
'glBindTransformFeedbackNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLuint,),
doc='glBindTransformFeedbackNV(GLenum(target), GLuint(id)) -> None',
argNames=('target','id',),
deprecated=_DEPRECATED,
)

glDeleteTransformFeedbacksNV = platform.createExtensionFunction( 
'glDeleteTransformFeedbacksNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLsizei,arrays.GLuintArray,),
doc='glDeleteTransformFeedbacksNV(GLsizei(n), GLuintArray(ids)) -> None',
argNames=('n','ids',),
deprecated=_DEPRECATED,
)

glGenTransformFeedbacksNV = platform.createExtensionFunction( 
'glGenTransformFeedbacksNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLsizei,arrays.GLuintArray,),
doc='glGenTransformFeedbacksNV(GLsizei(n), GLuintArray(ids)) -> None',
argNames=('n','ids',),
deprecated=_DEPRECATED,
)

glIsTransformFeedbackNV = platform.createExtensionFunction( 
'glIsTransformFeedbackNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=constants.GLboolean, 
argTypes=(constants.GLuint,),
doc='glIsTransformFeedbackNV(GLuint(id)) -> constants.GLboolean',
argNames=('id',),
deprecated=_DEPRECATED,
)

glPauseTransformFeedbackNV = platform.createExtensionFunction( 
'glPauseTransformFeedbackNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(),
doc='glPauseTransformFeedbackNV() -> None',
argNames=(),
deprecated=_DEPRECATED,
)

glResumeTransformFeedbackNV = platform.createExtensionFunction( 
'glResumeTransformFeedbackNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(),
doc='glResumeTransformFeedbackNV() -> None',
argNames=(),
deprecated=_DEPRECATED,
)

glDrawTransformFeedbackNV = platform.createExtensionFunction( 
'glDrawTransformFeedbackNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLuint,),
doc='glDrawTransformFeedbackNV(GLenum(mode), GLuint(id)) -> None',
argNames=('mode','id',),
deprecated=_DEPRECATED,
)


def glInitTransformFeedback2NV():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
