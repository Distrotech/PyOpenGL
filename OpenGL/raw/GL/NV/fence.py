'''Autogenerated by get_gl_extensions script, do not edit!'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_NV_fence'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_NV_fence',False)
_p.unpack_constants( """GL_ALL_COMPLETED_NV 0x84F2
GL_FENCE_STATUS_NV 0x84F3
GL_FENCE_CONDITION_NV 0x84F4""", globals())
@_f
@_p.types(None,_cs.GLsizei,arrays.GLuintArray)
def glDeleteFencesNV(n,fences):pass
@_f
@_p.types(None,_cs.GLsizei,arrays.GLuintArray)
def glGenFencesNV(n,fences):pass
@_f
@_p.types(_cs.GLboolean,_cs.GLuint)
def glIsFenceNV(fence):pass
@_f
@_p.types(_cs.GLboolean,_cs.GLuint)
def glTestFenceNV(fence):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLenum,arrays.GLintArray)
def glGetFenceivNV(fence,pname,params):pass
@_f
@_p.types(None,_cs.GLuint)
def glFinishFenceNV(fence):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLenum)
def glSetFenceNV(fence,condition):pass


def glInitFenceNV():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
