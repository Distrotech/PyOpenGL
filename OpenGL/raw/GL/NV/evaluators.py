'''OpenGL extension NV.evaluators

Automatically generated by the get_gl_extensions script, do not edit!
'''
from OpenGL import platform, constants, constant, arrays
from OpenGL import extensions
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_NV_evaluators'
_DEPRECATED = False
GL_EVAL_2D_NV = constant.Constant( 'GL_EVAL_2D_NV', 0x86C0 )
GL_EVAL_TRIANGULAR_2D_NV = constant.Constant( 'GL_EVAL_TRIANGULAR_2D_NV', 0x86C1 )
GL_MAP_TESSELLATION_NV = constant.Constant( 'GL_MAP_TESSELLATION_NV', 0x86C2 )
GL_MAP_ATTRIB_U_ORDER_NV = constant.Constant( 'GL_MAP_ATTRIB_U_ORDER_NV', 0x86C3 )
GL_MAP_ATTRIB_V_ORDER_NV = constant.Constant( 'GL_MAP_ATTRIB_V_ORDER_NV', 0x86C4 )
GL_EVAL_FRACTIONAL_TESSELLATION_NV = constant.Constant( 'GL_EVAL_FRACTIONAL_TESSELLATION_NV', 0x86C5 )
glget.addGLGetConstant( GL_EVAL_FRACTIONAL_TESSELLATION_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB0_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB0_NV', 0x86C6 )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB0_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB1_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB1_NV', 0x86C7 )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB1_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB2_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB2_NV', 0x86C8 )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB2_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB3_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB3_NV', 0x86C9 )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB3_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB4_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB4_NV', 0x86CA )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB4_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB5_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB5_NV', 0x86CB )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB5_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB6_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB6_NV', 0x86CC )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB6_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB7_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB7_NV', 0x86CD )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB7_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB8_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB8_NV', 0x86CE )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB8_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB9_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB9_NV', 0x86CF )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB9_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB10_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB10_NV', 0x86D0 )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB10_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB11_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB11_NV', 0x86D1 )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB11_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB12_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB12_NV', 0x86D2 )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB12_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB13_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB13_NV', 0x86D3 )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB13_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB14_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB14_NV', 0x86D4 )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB14_NV, (1,) )
GL_EVAL_VERTEX_ATTRIB15_NV = constant.Constant( 'GL_EVAL_VERTEX_ATTRIB15_NV', 0x86D5 )
glget.addGLGetConstant( GL_EVAL_VERTEX_ATTRIB15_NV, (1,) )
GL_MAX_MAP_TESSELLATION_NV = constant.Constant( 'GL_MAX_MAP_TESSELLATION_NV', 0x86D6 )
glget.addGLGetConstant( GL_MAX_MAP_TESSELLATION_NV, (1,) )
GL_MAX_RATIONAL_EVAL_ORDER_NV = constant.Constant( 'GL_MAX_RATIONAL_EVAL_ORDER_NV', 0x86D7 )
glget.addGLGetConstant( GL_MAX_RATIONAL_EVAL_ORDER_NV, (1,) )
glMapControlPointsNV = platform.createExtensionFunction( 
'glMapControlPointsNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLuint,constants.GLenum,constants.GLsizei,constants.GLsizei,constants.GLint,constants.GLint,constants.GLboolean,ctypes.c_void_p,),
doc='glMapControlPointsNV(GLenum(target), GLuint(index), GLenum(type), GLsizei(ustride), GLsizei(vstride), GLint(uorder), GLint(vorder), GLboolean(packed), c_void_p(points)) -> None',
argNames=('target','index','type','ustride','vstride','uorder','vorder','packed','points',),
deprecated=_DEPRECATED,
)

glMapParameterivNV = platform.createExtensionFunction( 
'glMapParameterivNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,arrays.GLintArray,),
doc='glMapParameterivNV(GLenum(target), GLenum(pname), GLintArray(params)) -> None',
argNames=('target','pname','params',),
deprecated=_DEPRECATED,
)

glMapParameterfvNV = platform.createExtensionFunction( 
'glMapParameterfvNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,arrays.GLfloatArray,),
doc='glMapParameterfvNV(GLenum(target), GLenum(pname), GLfloatArray(params)) -> None',
argNames=('target','pname','params',),
deprecated=_DEPRECATED,
)

glGetMapControlPointsNV = platform.createExtensionFunction( 
'glGetMapControlPointsNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLuint,constants.GLenum,constants.GLsizei,constants.GLsizei,constants.GLboolean,ctypes.c_void_p,),
doc='glGetMapControlPointsNV(GLenum(target), GLuint(index), GLenum(type), GLsizei(ustride), GLsizei(vstride), GLboolean(packed), c_void_p(points)) -> None',
argNames=('target','index','type','ustride','vstride','packed','points',),
deprecated=_DEPRECATED,
)

glGetMapParameterivNV = platform.createExtensionFunction( 
'glGetMapParameterivNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,arrays.GLintArray,),
doc='glGetMapParameterivNV(GLenum(target), GLenum(pname), GLintArray(params)) -> None',
argNames=('target','pname','params',),
deprecated=_DEPRECATED,
)

glGetMapParameterfvNV = platform.createExtensionFunction( 
'glGetMapParameterfvNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,arrays.GLfloatArray,),
doc='glGetMapParameterfvNV(GLenum(target), GLenum(pname), GLfloatArray(params)) -> None',
argNames=('target','pname','params',),
deprecated=_DEPRECATED,
)

glGetMapAttribParameterivNV = platform.createExtensionFunction( 
'glGetMapAttribParameterivNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLuint,constants.GLenum,arrays.GLintArray,),
doc='glGetMapAttribParameterivNV(GLenum(target), GLuint(index), GLenum(pname), GLintArray(params)) -> None',
argNames=('target','index','pname','params',),
deprecated=_DEPRECATED,
)

glGetMapAttribParameterfvNV = platform.createExtensionFunction( 
'glGetMapAttribParameterfvNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLuint,constants.GLenum,arrays.GLfloatArray,),
doc='glGetMapAttribParameterfvNV(GLenum(target), GLuint(index), GLenum(pname), GLfloatArray(params)) -> None',
argNames=('target','index','pname','params',),
deprecated=_DEPRECATED,
)

glEvalMapsNV = platform.createExtensionFunction( 
'glEvalMapsNV',dll=platform.GL,
extension=EXTENSION_NAME,
resultType=None, 
argTypes=(constants.GLenum,constants.GLenum,),
doc='glEvalMapsNV(GLenum(target), GLenum(mode)) -> None',
argNames=('target','mode',),
deprecated=_DEPRECATED,
)


def glInitEvaluatorsNV():
    '''Return boolean indicating whether this extension is available'''
    return extensions.hasGLExtension( EXTENSION_NAME )
