'''Autogenerated by get_gl_extensions script, do not edit!'''
from OpenGL import platform as _p, constants as _cs, arrays
from OpenGL.GL import glget
import ctypes
EXTENSION_NAME = 'GL_NV_fragment_program'
def _f( function ):
    return _p.createFunction( function,_p.GL,'GL_NV_fragment_program',False)
_p.unpack_constants( """GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV 0x8868
GL_FRAGMENT_PROGRAM_NV 0x8870
GL_MAX_TEXTURE_COORDS_NV 0x8871
GL_MAX_TEXTURE_IMAGE_UNITS_NV 0x8872
GL_FRAGMENT_PROGRAM_BINDING_NV 0x8873
GL_PROGRAM_ERROR_STRING_NV 0x8874""", globals())
glget.addGLGetConstant( GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV, (1,) )
glget.addGLGetConstant( GL_FRAGMENT_PROGRAM_NV, (1,) )
glget.addGLGetConstant( GL_MAX_TEXTURE_COORDS_NV, (1,) )
glget.addGLGetConstant( GL_MAX_TEXTURE_IMAGE_UNITS_NV, (1,) )
glget.addGLGetConstant( GL_FRAGMENT_PROGRAM_BINDING_NV, (1,) )
@_f
@_p.types(None,_cs.GLuint,_cs.GLsizei,arrays.GLubyteArray,_cs.GLfloat,_cs.GLfloat,_cs.GLfloat,_cs.GLfloat)
def glProgramNamedParameter4fNV(id,len,name,x,y,z,w):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLsizei,arrays.GLubyteArray,arrays.GLfloatArray)
def glProgramNamedParameter4fvNV(id,len,name,v):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLsizei,arrays.GLubyteArray,_cs.GLdouble,_cs.GLdouble,_cs.GLdouble,_cs.GLdouble)
def glProgramNamedParameter4dNV(id,len,name,x,y,z,w):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLsizei,arrays.GLubyteArray,arrays.GLdoubleArray)
def glProgramNamedParameter4dvNV(id,len,name,v):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLsizei,arrays.GLubyteArray,arrays.GLfloatArray)
def glGetProgramNamedParameterfvNV(id,len,name,params):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLsizei,arrays.GLubyteArray,arrays.GLdoubleArray)
def glGetProgramNamedParameterdvNV(id,len,name,params):pass


def glInitFragmentProgramNV():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( EXTENSION_NAME )
