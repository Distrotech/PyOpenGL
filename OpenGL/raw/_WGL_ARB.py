# BEGIN GENERATED CONTENT (do not edit below this line)

# This content is generated by gengl.py.
# Wrapper for http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h
from OpenGL import platform, constant
from ctypes import *
c_void = None


# H (/home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:9)
# H (/home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:9)
GLAPI = constant.Constant( 'GLAPI', 0 )
WGL_WGLEXT_VERSION = constant.Constant( 'WGL_WGLEXT_VERSION', 6 )
# ARB_buffer_region (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:61)
WGL_FRONT_COLOR_BUFFER_BIT_ARB = constant.Constant( 'WGL_FRONT_COLOR_BUFFER_BIT_ARB', 1 )
WGL_BACK_COLOR_BUFFER_BIT_ARB = constant.Constant( 'WGL_BACK_COLOR_BUFFER_BIT_ARB', 2 )
WGL_DEPTH_BUFFER_BIT_ARB = constant.Constant( 'WGL_DEPTH_BUFFER_BIT_ARB', 4 )
WGL_STENCIL_BUFFER_BIT_ARB = constant.Constant( 'WGL_STENCIL_BUFFER_BIT_ARB', 8 )
# ARB_multisample (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:68)
WGL_SAMPLE_BUFFERS_ARB = constant.Constant( 'WGL_SAMPLE_BUFFERS_ARB', 8257 )
WGL_SAMPLES_ARB = constant.Constant( 'WGL_SAMPLES_ARB', 8258 )
# ARB_extensions_string (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:73)
# ARB_pixel_format (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:76)
WGL_NUMBER_PIXEL_FORMATS_ARB = constant.Constant( 'WGL_NUMBER_PIXEL_FORMATS_ARB', 8192 )
WGL_DRAW_TO_WINDOW_ARB = constant.Constant( 'WGL_DRAW_TO_WINDOW_ARB', 8193 )
WGL_DRAW_TO_BITMAP_ARB = constant.Constant( 'WGL_DRAW_TO_BITMAP_ARB', 8194 )
WGL_ACCELERATION_ARB = constant.Constant( 'WGL_ACCELERATION_ARB', 8195 )
WGL_NEED_PALETTE_ARB = constant.Constant( 'WGL_NEED_PALETTE_ARB', 8196 )
WGL_NEED_SYSTEM_PALETTE_ARB = constant.Constant( 'WGL_NEED_SYSTEM_PALETTE_ARB', 8197 )
WGL_SWAP_LAYER_BUFFERS_ARB = constant.Constant( 'WGL_SWAP_LAYER_BUFFERS_ARB', 8198 )
WGL_SWAP_METHOD_ARB = constant.Constant( 'WGL_SWAP_METHOD_ARB', 8199 )
WGL_NUMBER_OVERLAYS_ARB = constant.Constant( 'WGL_NUMBER_OVERLAYS_ARB', 8200 )
WGL_NUMBER_UNDERLAYS_ARB = constant.Constant( 'WGL_NUMBER_UNDERLAYS_ARB', 8201 )
WGL_TRANSPARENT_ARB = constant.Constant( 'WGL_TRANSPARENT_ARB', 8202 )
WGL_TRANSPARENT_RED_VALUE_ARB = constant.Constant( 'WGL_TRANSPARENT_RED_VALUE_ARB', 8247 )
WGL_TRANSPARENT_GREEN_VALUE_ARB = constant.Constant( 'WGL_TRANSPARENT_GREEN_VALUE_ARB', 8248 )
WGL_TRANSPARENT_BLUE_VALUE_ARB = constant.Constant( 'WGL_TRANSPARENT_BLUE_VALUE_ARB', 8249 )
WGL_TRANSPARENT_ALPHA_VALUE_ARB = constant.Constant( 'WGL_TRANSPARENT_ALPHA_VALUE_ARB', 8250 )
WGL_TRANSPARENT_INDEX_VALUE_ARB = constant.Constant( 'WGL_TRANSPARENT_INDEX_VALUE_ARB', 8251 )
WGL_SHARE_DEPTH_ARB = constant.Constant( 'WGL_SHARE_DEPTH_ARB', 8204 )
WGL_SHARE_STENCIL_ARB = constant.Constant( 'WGL_SHARE_STENCIL_ARB', 8205 )
WGL_SHARE_ACCUM_ARB = constant.Constant( 'WGL_SHARE_ACCUM_ARB', 8206 )
WGL_SUPPORT_GDI_ARB = constant.Constant( 'WGL_SUPPORT_GDI_ARB', 8207 )
WGL_SUPPORT_OPENGL_ARB = constant.Constant( 'WGL_SUPPORT_OPENGL_ARB', 8208 )
WGL_DOUBLE_BUFFER_ARB = constant.Constant( 'WGL_DOUBLE_BUFFER_ARB', 8209 )
WGL_STEREO_ARB = constant.Constant( 'WGL_STEREO_ARB', 8210 )
WGL_PIXEL_TYPE_ARB = constant.Constant( 'WGL_PIXEL_TYPE_ARB', 8211 )
WGL_COLOR_BITS_ARB = constant.Constant( 'WGL_COLOR_BITS_ARB', 8212 )
WGL_RED_BITS_ARB = constant.Constant( 'WGL_RED_BITS_ARB', 8213 )
WGL_RED_SHIFT_ARB = constant.Constant( 'WGL_RED_SHIFT_ARB', 8214 )
WGL_GREEN_BITS_ARB = constant.Constant( 'WGL_GREEN_BITS_ARB', 8215 )
WGL_GREEN_SHIFT_ARB = constant.Constant( 'WGL_GREEN_SHIFT_ARB', 8216 )
WGL_BLUE_BITS_ARB = constant.Constant( 'WGL_BLUE_BITS_ARB', 8217 )
WGL_BLUE_SHIFT_ARB = constant.Constant( 'WGL_BLUE_SHIFT_ARB', 8218 )
WGL_ALPHA_BITS_ARB = constant.Constant( 'WGL_ALPHA_BITS_ARB', 8219 )
WGL_ALPHA_SHIFT_ARB = constant.Constant( 'WGL_ALPHA_SHIFT_ARB', 8220 )
WGL_ACCUM_BITS_ARB = constant.Constant( 'WGL_ACCUM_BITS_ARB', 8221 )
WGL_ACCUM_RED_BITS_ARB = constant.Constant( 'WGL_ACCUM_RED_BITS_ARB', 8222 )
WGL_ACCUM_GREEN_BITS_ARB = constant.Constant( 'WGL_ACCUM_GREEN_BITS_ARB', 8223 )
WGL_ACCUM_BLUE_BITS_ARB = constant.Constant( 'WGL_ACCUM_BLUE_BITS_ARB', 8224 )
WGL_ACCUM_ALPHA_BITS_ARB = constant.Constant( 'WGL_ACCUM_ALPHA_BITS_ARB', 8225 )
WGL_DEPTH_BITS_ARB = constant.Constant( 'WGL_DEPTH_BITS_ARB', 8226 )
WGL_STENCIL_BITS_ARB = constant.Constant( 'WGL_STENCIL_BITS_ARB', 8227 )
WGL_AUX_BUFFERS_ARB = constant.Constant( 'WGL_AUX_BUFFERS_ARB', 8228 )
WGL_NO_ACCELERATION_ARB = constant.Constant( 'WGL_NO_ACCELERATION_ARB', 8229 )
WGL_GENERIC_ACCELERATION_ARB = constant.Constant( 'WGL_GENERIC_ACCELERATION_ARB', 8230 )
WGL_FULL_ACCELERATION_ARB = constant.Constant( 'WGL_FULL_ACCELERATION_ARB', 8231 )
WGL_SWAP_EXCHANGE_ARB = constant.Constant( 'WGL_SWAP_EXCHANGE_ARB', 8232 )
WGL_SWAP_COPY_ARB = constant.Constant( 'WGL_SWAP_COPY_ARB', 8233 )
WGL_SWAP_UNDEFINED_ARB = constant.Constant( 'WGL_SWAP_UNDEFINED_ARB', 8234 )
WGL_TYPE_RGBA_ARB = constant.Constant( 'WGL_TYPE_RGBA_ARB', 8235 )
WGL_TYPE_COLORINDEX_ARB = constant.Constant( 'WGL_TYPE_COLORINDEX_ARB', 8236 )
# ARB_make_current_read (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:128)
ERROR_INVALID_PIXEL_TYPE_ARB = constant.Constant( 'ERROR_INVALID_PIXEL_TYPE_ARB', 8259 )
ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB = constant.Constant( 'ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB', 8276 )
# ARB_pbuffer (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:133)
WGL_DRAW_TO_PBUFFER_ARB = constant.Constant( 'WGL_DRAW_TO_PBUFFER_ARB', 8237 )
WGL_MAX_PBUFFER_PIXELS_ARB = constant.Constant( 'WGL_MAX_PBUFFER_PIXELS_ARB', 8238 )
WGL_MAX_PBUFFER_WIDTH_ARB = constant.Constant( 'WGL_MAX_PBUFFER_WIDTH_ARB', 8239 )
WGL_MAX_PBUFFER_HEIGHT_ARB = constant.Constant( 'WGL_MAX_PBUFFER_HEIGHT_ARB', 8240 )
WGL_PBUFFER_LARGEST_ARB = constant.Constant( 'WGL_PBUFFER_LARGEST_ARB', 8243 )
WGL_PBUFFER_WIDTH_ARB = constant.Constant( 'WGL_PBUFFER_WIDTH_ARB', 8244 )
WGL_PBUFFER_HEIGHT_ARB = constant.Constant( 'WGL_PBUFFER_HEIGHT_ARB', 8245 )
WGL_PBUFFER_LOST_ARB = constant.Constant( 'WGL_PBUFFER_LOST_ARB', 8246 )
# ARB_render_texture (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:144)
WGL_BIND_TO_TEXTURE_RGB_ARB = constant.Constant( 'WGL_BIND_TO_TEXTURE_RGB_ARB', 8304 )
WGL_BIND_TO_TEXTURE_RGBA_ARB = constant.Constant( 'WGL_BIND_TO_TEXTURE_RGBA_ARB', 8305 )
WGL_TEXTURE_FORMAT_ARB = constant.Constant( 'WGL_TEXTURE_FORMAT_ARB', 8306 )
WGL_TEXTURE_TARGET_ARB = constant.Constant( 'WGL_TEXTURE_TARGET_ARB', 8307 )
WGL_MIPMAP_TEXTURE_ARB = constant.Constant( 'WGL_MIPMAP_TEXTURE_ARB', 8308 )
WGL_TEXTURE_RGB_ARB = constant.Constant( 'WGL_TEXTURE_RGB_ARB', 8309 )
WGL_TEXTURE_RGBA_ARB = constant.Constant( 'WGL_TEXTURE_RGBA_ARB', 8310 )
WGL_NO_TEXTURE_ARB = constant.Constant( 'WGL_NO_TEXTURE_ARB', 8311 )
WGL_TEXTURE_CUBE_MAP_ARB = constant.Constant( 'WGL_TEXTURE_CUBE_MAP_ARB', 8312 )
WGL_TEXTURE_1D_ARB = constant.Constant( 'WGL_TEXTURE_1D_ARB', 8313 )
WGL_TEXTURE_2D_ARB = constant.Constant( 'WGL_TEXTURE_2D_ARB', 8314 )
WGL_MIPMAP_LEVEL_ARB = constant.Constant( 'WGL_MIPMAP_LEVEL_ARB', 8315 )
WGL_CUBE_MAP_FACE_ARB = constant.Constant( 'WGL_CUBE_MAP_FACE_ARB', 8316 )
WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = constant.Constant( 'WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB', 8317 )
WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = constant.Constant( 'WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB', 8318 )
WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = constant.Constant( 'WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB', 8319 )
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = constant.Constant( 'WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB', 8320 )
WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = constant.Constant( 'WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB', 8321 )
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = constant.Constant( 'WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB', 8322 )
WGL_FRONT_LEFT_ARB = constant.Constant( 'WGL_FRONT_LEFT_ARB', 8323 )
WGL_FRONT_RIGHT_ARB = constant.Constant( 'WGL_FRONT_RIGHT_ARB', 8324 )
WGL_BACK_LEFT_ARB = constant.Constant( 'WGL_BACK_LEFT_ARB', 8325 )
WGL_BACK_RIGHT_ARB = constant.Constant( 'WGL_BACK_RIGHT_ARB', 8326 )
WGL_AUX0_ARB = constant.Constant( 'WGL_AUX0_ARB', 8327 )
WGL_AUX1_ARB = constant.Constant( 'WGL_AUX1_ARB', 8328 )
WGL_AUX2_ARB = constant.Constant( 'WGL_AUX2_ARB', 8329 )
WGL_AUX3_ARB = constant.Constant( 'WGL_AUX3_ARB', 8330 )
WGL_AUX4_ARB = constant.Constant( 'WGL_AUX4_ARB', 8331 )
WGL_AUX5_ARB = constant.Constant( 'WGL_AUX5_ARB', 8332 )
WGL_AUX6_ARB = constant.Constant( 'WGL_AUX6_ARB', 8333 )
WGL_AUX7_ARB = constant.Constant( 'WGL_AUX7_ARB', 8334 )
WGL_AUX8_ARB = constant.Constant( 'WGL_AUX8_ARB', 8335 )
WGL_AUX9_ARB = constant.Constant( 'WGL_AUX9_ARB', 8336 )
# ARB_pixel_format_float (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:180)
WGL_TYPE_RGBA_FLOAT_ARB = constant.Constant( 'WGL_TYPE_RGBA_FLOAT_ARB', 8608 )
# EXT_make_current_read (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:184)
ERROR_INVALID_PIXEL_TYPE_EXT = constant.Constant( 'ERROR_INVALID_PIXEL_TYPE_EXT', 8259 )
# EXT_pixel_format (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:188)
WGL_NUMBER_PIXEL_FORMATS_EXT = constant.Constant( 'WGL_NUMBER_PIXEL_FORMATS_EXT', 8192 )
WGL_DRAW_TO_WINDOW_EXT = constant.Constant( 'WGL_DRAW_TO_WINDOW_EXT', 8193 )
WGL_DRAW_TO_BITMAP_EXT = constant.Constant( 'WGL_DRAW_TO_BITMAP_EXT', 8194 )
WGL_ACCELERATION_EXT = constant.Constant( 'WGL_ACCELERATION_EXT', 8195 )
WGL_NEED_PALETTE_EXT = constant.Constant( 'WGL_NEED_PALETTE_EXT', 8196 )
WGL_NEED_SYSTEM_PALETTE_EXT = constant.Constant( 'WGL_NEED_SYSTEM_PALETTE_EXT', 8197 )
WGL_SWAP_LAYER_BUFFERS_EXT = constant.Constant( 'WGL_SWAP_LAYER_BUFFERS_EXT', 8198 )
WGL_SWAP_METHOD_EXT = constant.Constant( 'WGL_SWAP_METHOD_EXT', 8199 )
WGL_NUMBER_OVERLAYS_EXT = constant.Constant( 'WGL_NUMBER_OVERLAYS_EXT', 8200 )
WGL_NUMBER_UNDERLAYS_EXT = constant.Constant( 'WGL_NUMBER_UNDERLAYS_EXT', 8201 )
WGL_TRANSPARENT_EXT = constant.Constant( 'WGL_TRANSPARENT_EXT', 8202 )
WGL_TRANSPARENT_VALUE_EXT = constant.Constant( 'WGL_TRANSPARENT_VALUE_EXT', 8203 )
WGL_SHARE_DEPTH_EXT = constant.Constant( 'WGL_SHARE_DEPTH_EXT', 8204 )
WGL_SHARE_STENCIL_EXT = constant.Constant( 'WGL_SHARE_STENCIL_EXT', 8205 )
WGL_SHARE_ACCUM_EXT = constant.Constant( 'WGL_SHARE_ACCUM_EXT', 8206 )
WGL_SUPPORT_GDI_EXT = constant.Constant( 'WGL_SUPPORT_GDI_EXT', 8207 )
WGL_SUPPORT_OPENGL_EXT = constant.Constant( 'WGL_SUPPORT_OPENGL_EXT', 8208 )
WGL_DOUBLE_BUFFER_EXT = constant.Constant( 'WGL_DOUBLE_BUFFER_EXT', 8209 )
WGL_STEREO_EXT = constant.Constant( 'WGL_STEREO_EXT', 8210 )
WGL_PIXEL_TYPE_EXT = constant.Constant( 'WGL_PIXEL_TYPE_EXT', 8211 )
WGL_COLOR_BITS_EXT = constant.Constant( 'WGL_COLOR_BITS_EXT', 8212 )
WGL_RED_BITS_EXT = constant.Constant( 'WGL_RED_BITS_EXT', 8213 )
WGL_RED_SHIFT_EXT = constant.Constant( 'WGL_RED_SHIFT_EXT', 8214 )
WGL_GREEN_BITS_EXT = constant.Constant( 'WGL_GREEN_BITS_EXT', 8215 )
WGL_GREEN_SHIFT_EXT = constant.Constant( 'WGL_GREEN_SHIFT_EXT', 8216 )
WGL_BLUE_BITS_EXT = constant.Constant( 'WGL_BLUE_BITS_EXT', 8217 )
WGL_BLUE_SHIFT_EXT = constant.Constant( 'WGL_BLUE_SHIFT_EXT', 8218 )
WGL_ALPHA_BITS_EXT = constant.Constant( 'WGL_ALPHA_BITS_EXT', 8219 )
WGL_ALPHA_SHIFT_EXT = constant.Constant( 'WGL_ALPHA_SHIFT_EXT', 8220 )
WGL_ACCUM_BITS_EXT = constant.Constant( 'WGL_ACCUM_BITS_EXT', 8221 )
WGL_ACCUM_RED_BITS_EXT = constant.Constant( 'WGL_ACCUM_RED_BITS_EXT', 8222 )
WGL_ACCUM_GREEN_BITS_EXT = constant.Constant( 'WGL_ACCUM_GREEN_BITS_EXT', 8223 )
WGL_ACCUM_BLUE_BITS_EXT = constant.Constant( 'WGL_ACCUM_BLUE_BITS_EXT', 8224 )
WGL_ACCUM_ALPHA_BITS_EXT = constant.Constant( 'WGL_ACCUM_ALPHA_BITS_EXT', 8225 )
WGL_DEPTH_BITS_EXT = constant.Constant( 'WGL_DEPTH_BITS_EXT', 8226 )
WGL_STENCIL_BITS_EXT = constant.Constant( 'WGL_STENCIL_BITS_EXT', 8227 )
WGL_AUX_BUFFERS_EXT = constant.Constant( 'WGL_AUX_BUFFERS_EXT', 8228 )
WGL_NO_ACCELERATION_EXT = constant.Constant( 'WGL_NO_ACCELERATION_EXT', 8229 )
WGL_GENERIC_ACCELERATION_EXT = constant.Constant( 'WGL_GENERIC_ACCELERATION_EXT', 8230 )
WGL_FULL_ACCELERATION_EXT = constant.Constant( 'WGL_FULL_ACCELERATION_EXT', 8231 )
WGL_SWAP_EXCHANGE_EXT = constant.Constant( 'WGL_SWAP_EXCHANGE_EXT', 8232 )
WGL_SWAP_COPY_EXT = constant.Constant( 'WGL_SWAP_COPY_EXT', 8233 )
WGL_SWAP_UNDEFINED_EXT = constant.Constant( 'WGL_SWAP_UNDEFINED_EXT', 8234 )
WGL_TYPE_RGBA_EXT = constant.Constant( 'WGL_TYPE_RGBA_EXT', 8235 )
WGL_TYPE_COLORINDEX_EXT = constant.Constant( 'WGL_TYPE_COLORINDEX_EXT', 8236 )
# EXT_pbuffer (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:236)
WGL_DRAW_TO_PBUFFER_EXT = constant.Constant( 'WGL_DRAW_TO_PBUFFER_EXT', 8237 )
WGL_MAX_PBUFFER_PIXELS_EXT = constant.Constant( 'WGL_MAX_PBUFFER_PIXELS_EXT', 8238 )
WGL_MAX_PBUFFER_WIDTH_EXT = constant.Constant( 'WGL_MAX_PBUFFER_WIDTH_EXT', 8239 )
WGL_MAX_PBUFFER_HEIGHT_EXT = constant.Constant( 'WGL_MAX_PBUFFER_HEIGHT_EXT', 8240 )
WGL_OPTIMAL_PBUFFER_WIDTH_EXT = constant.Constant( 'WGL_OPTIMAL_PBUFFER_WIDTH_EXT', 8241 )
WGL_OPTIMAL_PBUFFER_HEIGHT_EXT = constant.Constant( 'WGL_OPTIMAL_PBUFFER_HEIGHT_EXT', 8242 )
WGL_PBUFFER_LARGEST_EXT = constant.Constant( 'WGL_PBUFFER_LARGEST_EXT', 8243 )
WGL_PBUFFER_WIDTH_EXT = constant.Constant( 'WGL_PBUFFER_WIDTH_EXT', 8244 )
WGL_PBUFFER_HEIGHT_EXT = constant.Constant( 'WGL_PBUFFER_HEIGHT_EXT', 8245 )
# EXT_depth_float (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:248)
WGL_DEPTH_FLOAT_EXT = constant.Constant( 'WGL_DEPTH_FLOAT_EXT', 8256 )
# 3DFX_multisample (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:252)
WGL_SAMPLE_BUFFERS_3DFX = constant.Constant( 'WGL_SAMPLE_BUFFERS_3DFX', 8288 )
WGL_SAMPLES_3DFX = constant.Constant( 'WGL_SAMPLES_3DFX', 8289 )
# EXT_multisample (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:257)
WGL_SAMPLE_BUFFERS_EXT = constant.Constant( 'WGL_SAMPLE_BUFFERS_EXT', 8257 )
WGL_SAMPLES_EXT = constant.Constant( 'WGL_SAMPLES_EXT', 8258 )
# I3D_digital_video_control (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:262)
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D = constant.Constant( 'WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D', 8272 )
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D = constant.Constant( 'WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D', 8273 )
WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D = constant.Constant( 'WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D', 8274 )
WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D = constant.Constant( 'WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D', 8275 )
# I3D_gamma (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:269)
WGL_GAMMA_TABLE_SIZE_I3D = constant.Constant( 'WGL_GAMMA_TABLE_SIZE_I3D', 8270 )
WGL_GAMMA_EXCLUDE_DESKTOP_I3D = constant.Constant( 'WGL_GAMMA_EXCLUDE_DESKTOP_I3D', 8271 )
# I3D_genlock (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:274)
WGL_GENLOCK_SOURCE_MULTIVIEW_I3D = constant.Constant( 'WGL_GENLOCK_SOURCE_MULTIVIEW_I3D', 8260 )
WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D = constant.Constant( 'WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D', 8261 )
WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D = constant.Constant( 'WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D', 8262 )
WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D = constant.Constant( 'WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D', 8263 )
WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D = constant.Constant( 'WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D', 8264 )
WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D = constant.Constant( 'WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D', 8265 )
WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D = constant.Constant( 'WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D', 8266 )
WGL_GENLOCK_SOURCE_EDGE_RISING_I3D = constant.Constant( 'WGL_GENLOCK_SOURCE_EDGE_RISING_I3D', 8267 )
WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D = constant.Constant( 'WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D', 8268 )
# I3D_image_buffer (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:286)
WGL_IMAGE_BUFFER_MIN_ACCESS_I3D = constant.Constant( 'WGL_IMAGE_BUFFER_MIN_ACCESS_I3D', 1 )
WGL_IMAGE_BUFFER_LOCK_I3D = constant.Constant( 'WGL_IMAGE_BUFFER_LOCK_I3D', 2 )
# I3D_swap_frame_lock (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:291)
# NV_render_depth_texture (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:294)
WGL_BIND_TO_TEXTURE_DEPTH_NV = constant.Constant( 'WGL_BIND_TO_TEXTURE_DEPTH_NV', 8355 )
WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV = constant.Constant( 'WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV', 8356 )
WGL_DEPTH_TEXTURE_FORMAT_NV = constant.Constant( 'WGL_DEPTH_TEXTURE_FORMAT_NV', 8357 )
WGL_TEXTURE_DEPTH_COMPONENT_NV = constant.Constant( 'WGL_TEXTURE_DEPTH_COMPONENT_NV', 8358 )
WGL_DEPTH_COMPONENT_NV = constant.Constant( 'WGL_DEPTH_COMPONENT_NV', 8359 )
# NV_render_texture_rectangle (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:302)
WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV = constant.Constant( 'WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV', 8352 )
WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV = constant.Constant( 'WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV', 8353 )
WGL_TEXTURE_RECTANGLE_NV = constant.Constant( 'WGL_TEXTURE_RECTANGLE_NV', 8354 )
# ATI_pixel_format_float (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:308)
WGL_TYPE_RGBA_FLOAT_ATI = constant.Constant( 'WGL_TYPE_RGBA_FLOAT_ATI', 8608 )
# NV_float_buffer (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:312)
WGL_FLOAT_COMPONENTS_NV = constant.Constant( 'WGL_FLOAT_COMPONENTS_NV', 8368 )
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV = constant.Constant( 'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV', 8369 )
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV = constant.Constant( 'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV', 8370 )
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV = constant.Constant( 'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV', 8371 )
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV = constant.Constant( 'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV', 8372 )
WGL_TEXTURE_FLOAT_R_NV = constant.Constant( 'WGL_TEXTURE_FLOAT_R_NV', 8373 )
WGL_TEXTURE_FLOAT_RG_NV = constant.Constant( 'WGL_TEXTURE_FLOAT_RG_NV', 8374 )
WGL_TEXTURE_FLOAT_RGB_NV = constant.Constant( 'WGL_TEXTURE_FLOAT_RGB_NV', 8375 )
WGL_TEXTURE_FLOAT_RGBA_NV = constant.Constant( 'WGL_TEXTURE_FLOAT_RGBA_NV', 8376 )
# ARB_pbuffer (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:327)
HANDLE = POINTER(None) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:60
HPBUFFERARB = HANDLE 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:328
# EXT_pbuffer (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:330)
HPBUFFEREXT = HANDLE 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:331
# ARB_buffer_region (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:334)
WGL_ARB_buffer_region = constant.Constant( 'WGL_ARB_buffer_region', 1 )
HDC = HANDLE 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:63
UINT = c_uint 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:52
wglCreateBufferRegionARB = platform.createBaseFunction(
    'wglCreateBufferRegionARB', dll=platform.GL, resultType=HANDLE, 
    argTypes=[HDC, c_int, UINT],
    doc='wglCreateBufferRegionARB( HDC(None), c_int(None), UINT(None) ) -> HANDLE', 
    argNames=['None', 'None', 'None'],
)

VOID = None 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:47
wglDeleteBufferRegionARB = platform.createBaseFunction(
    'wglDeleteBufferRegionARB', dll=platform.GL, resultType=VOID, 
    argTypes=[HANDLE],
    doc='wglDeleteBufferRegionARB( HANDLE(None) ) -> VOID', 
    argNames=['None'],
)

BOOL = c_long 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:54
wglSaveBufferRegionARB = platform.createBaseFunction(
    'wglSaveBufferRegionARB', dll=platform.GL, resultType=BOOL, 
    argTypes=[HANDLE, c_int, c_int, c_int, c_int],
    doc='wglSaveBufferRegionARB( HANDLE(None), c_int(None), c_int(None), c_int(None), c_int(None) ) -> BOOL', 
    argNames=['None', 'None', 'None', 'None', 'None'],
)

wglRestoreBufferRegionARB = platform.createBaseFunction(
    'wglRestoreBufferRegionARB', dll=platform.GL, resultType=BOOL, 
    argTypes=[HANDLE, c_int, c_int, c_int, c_int, c_int, c_int],
    doc='wglRestoreBufferRegionARB( HANDLE(None), c_int(None), c_int(None), c_int(None), c_int(None), c_int(None), c_int(None) ) -> BOOL', 
    argNames=['None', 'None', 'None', 'None', 'None', 'None', 'None'],
)

PFNWGLCREATEBUFFERREGIONARBPROC = CFUNCTYPE(HANDLE, HDC, c_int, UINT) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:342
PFNWGLDELETEBUFFERREGIONARBPROC = CFUNCTYPE(VOID, HANDLE) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:343
PFNWGLSAVEBUFFERREGIONARBPROC = CFUNCTYPE(BOOL, HANDLE, c_int, c_int, c_int, c_int) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:344
PFNWGLRESTOREBUFFERREGIONARBPROC = CFUNCTYPE(BOOL, HANDLE, c_int, c_int, c_int, c_int, c_int, c_int) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:345
# ARB_multisample (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:348)
WGL_ARB_multisample = constant.Constant( 'WGL_ARB_multisample', 1 )
# ARB_extensions_string (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:352)
WGL_ARB_extensions_string = constant.Constant( 'WGL_ARB_extensions_string', 1 )
wglGetExtensionsStringARB = platform.createBaseFunction(
    'wglGetExtensionsStringARB', dll=platform.GL, resultType=c_char_p, 
    argTypes=[HDC],
    doc='wglGetExtensionsStringARB( HDC(None) ) -> c_char_p', 
    argNames=['None'],
)

PFNWGLGETEXTENSIONSSTRINGARBPROC = CFUNCTYPE(c_char_p, HDC) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:357
# ARB_pixel_format (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:360)
WGL_ARB_pixel_format = constant.Constant( 'WGL_ARB_pixel_format', 1 )
wglGetPixelFormatAttribivARB = platform.createBaseFunction(
    'wglGetPixelFormatAttribivARB', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, c_int, c_int, UINT, POINTER(c_int), POINTER(c_int)],
    doc='wglGetPixelFormatAttribivARB( HDC(None), c_int(None), c_int(None), UINT(None), POINTER(c_int)(), POINTER(c_int)() ) -> BOOL', 
    argNames=['None', 'None', 'None', 'None', '', ''],
)

FLOAT = c_float 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:57
wglGetPixelFormatAttribfvARB = platform.createBaseFunction(
    'wglGetPixelFormatAttribfvARB', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, c_int, c_int, UINT, POINTER(c_int), POINTER(FLOAT)],
    doc='wglGetPixelFormatAttribfvARB( HDC(None), c_int(None), c_int(None), UINT(None), POINTER(c_int)(), POINTER(FLOAT)() ) -> BOOL', 
    argNames=['None', 'None', 'None', 'None', '', ''],
)

wglChoosePixelFormatARB = platform.createBaseFunction(
    'wglChoosePixelFormatARB', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, POINTER(c_int), POINTER(FLOAT), UINT, POINTER(c_int), POINTER(UINT)],
    doc='wglChoosePixelFormatARB( HDC(None), POINTER(c_int)(), POINTER(FLOAT)(), UINT(None), POINTER(c_int)(), POINTER(UINT)() ) -> BOOL', 
    argNames=['None', '', '', 'None', '', ''],
)

PFNWGLGETPIXELFORMATATTRIBIVARBPROC = CFUNCTYPE(BOOL, HDC, c_int, c_int, UINT, POINTER(c_int), POINTER(c_int)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:367
PFNWGLGETPIXELFORMATATTRIBFVARBPROC = CFUNCTYPE(BOOL, HDC, c_int, c_int, UINT, POINTER(c_int), POINTER(FLOAT)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:368
PFNWGLCHOOSEPIXELFORMATARBPROC = CFUNCTYPE(BOOL, HDC, POINTER(c_int), POINTER(FLOAT), UINT, POINTER(c_int), POINTER(UINT)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:369
# ARB_make_current_read (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:372)
WGL_ARB_make_current_read = constant.Constant( 'WGL_ARB_make_current_read', 1 )
HGLRC = HANDLE 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:62
wglMakeContextCurrentARB = platform.createBaseFunction(
    'wglMakeContextCurrentARB', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, HDC, HGLRC],
    doc='wglMakeContextCurrentARB( HDC(None), HDC(None), HGLRC(None) ) -> BOOL', 
    argNames=['None', 'None', 'None'],
)

wglGetCurrentReadDCARB = platform.createBaseFunction(
    'wglGetCurrentReadDCARB', dll=platform.GL, resultType=HDC, 
    argTypes=[],
    doc='wglGetCurrentReadDCARB(  ) -> HDC', 
    argNames=[],
)

PFNWGLMAKECONTEXTCURRENTARBPROC = CFUNCTYPE(BOOL, HDC, HDC, HGLRC) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:378
PFNWGLGETCURRENTREADDCARBPROC = CFUNCTYPE(HDC) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:379
# ARB_pbuffer (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:382)
WGL_ARB_pbuffer = constant.Constant( 'WGL_ARB_pbuffer', 1 )
wglCreatePbufferARB = platform.createBaseFunction(
    'wglCreatePbufferARB', dll=platform.GL, resultType=HPBUFFERARB, 
    argTypes=[HDC, c_int, c_int, c_int, POINTER(c_int)],
    doc='wglCreatePbufferARB( HDC(None), c_int(None), c_int(None), c_int(None), POINTER(c_int)() ) -> HPBUFFERARB', 
    argNames=['None', 'None', 'None', 'None', ''],
)

wglGetPbufferDCARB = platform.createBaseFunction(
    'wglGetPbufferDCARB', dll=platform.GL, resultType=HDC, 
    argTypes=[HPBUFFERARB],
    doc='wglGetPbufferDCARB( HPBUFFERARB(None) ) -> HDC', 
    argNames=['None'],
)

wglReleasePbufferDCARB = platform.createBaseFunction(
    'wglReleasePbufferDCARB', dll=platform.GL, resultType=c_int, 
    argTypes=[HPBUFFERARB, HDC],
    doc='wglReleasePbufferDCARB( HPBUFFERARB(None), HDC(None) ) -> c_int', 
    argNames=['None', 'None'],
)

wglDestroyPbufferARB = platform.createBaseFunction(
    'wglDestroyPbufferARB', dll=platform.GL, resultType=BOOL, 
    argTypes=[HPBUFFERARB],
    doc='wglDestroyPbufferARB( HPBUFFERARB(None) ) -> BOOL', 
    argNames=['None'],
)

wglQueryPbufferARB = platform.createBaseFunction(
    'wglQueryPbufferARB', dll=platform.GL, resultType=BOOL, 
    argTypes=[HPBUFFERARB, c_int, POINTER(c_int)],
    doc='wglQueryPbufferARB( HPBUFFERARB(None), c_int(None), POINTER(c_int)() ) -> BOOL', 
    argNames=['None', 'None', ''],
)

PFNWGLCREATEPBUFFERARBPROC = CFUNCTYPE(HPBUFFERARB, HDC, c_int, c_int, c_int, POINTER(c_int)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:391
PFNWGLGETPBUFFERDCARBPROC = CFUNCTYPE(HDC, HPBUFFERARB) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:392
PFNWGLRELEASEPBUFFERDCARBPROC = CFUNCTYPE(c_int, HPBUFFERARB, HDC) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:393
PFNWGLDESTROYPBUFFERARBPROC = CFUNCTYPE(BOOL, HPBUFFERARB) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:394
PFNWGLQUERYPBUFFERARBPROC = CFUNCTYPE(BOOL, HPBUFFERARB, c_int, POINTER(c_int)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:395
# ARB_render_texture (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:398)
WGL_ARB_render_texture = constant.Constant( 'WGL_ARB_render_texture', 1 )
wglBindTexImageARB = platform.createBaseFunction(
    'wglBindTexImageARB', dll=platform.GL, resultType=BOOL, 
    argTypes=[HPBUFFERARB, c_int],
    doc='wglBindTexImageARB( HPBUFFERARB(None), c_int(None) ) -> BOOL', 
    argNames=['None', 'None'],
)

wglReleaseTexImageARB = platform.createBaseFunction(
    'wglReleaseTexImageARB', dll=platform.GL, resultType=BOOL, 
    argTypes=[HPBUFFERARB, c_int],
    doc='wglReleaseTexImageARB( HPBUFFERARB(None), c_int(None) ) -> BOOL', 
    argNames=['None', 'None'],
)

wglSetPbufferAttribARB = platform.createBaseFunction(
    'wglSetPbufferAttribARB', dll=platform.GL, resultType=BOOL, 
    argTypes=[HPBUFFERARB, POINTER(c_int)],
    doc='wglSetPbufferAttribARB( HPBUFFERARB(None), POINTER(c_int)() ) -> BOOL', 
    argNames=['None', ''],
)

PFNWGLBINDTEXIMAGEARBPROC = CFUNCTYPE(BOOL, HPBUFFERARB, c_int) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:405
PFNWGLRELEASETEXIMAGEARBPROC = CFUNCTYPE(BOOL, HPBUFFERARB, c_int) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:406
PFNWGLSETPBUFFERATTRIBARBPROC = CFUNCTYPE(BOOL, HPBUFFERARB, POINTER(c_int)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:407
# ARB_pixel_format_float (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:410)
WGL_ARB_pixel_format_float = constant.Constant( 'WGL_ARB_pixel_format_float', 1 )
# EXT_display_color_table (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:414)
WGL_EXT_display_color_table = constant.Constant( 'WGL_EXT_display_color_table', 1 )
GLboolean = c_ubyte 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:20
GLushort = c_ushort 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:27
wglCreateDisplayColorTableEXT = platform.createBaseFunction(
    'wglCreateDisplayColorTableEXT', dll=platform.GL, resultType=GLboolean, 
    argTypes=[GLushort],
    doc='wglCreateDisplayColorTableEXT( GLushort(None) ) -> GLboolean', 
    argNames=['None'],
)

GLuint = c_uint 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:28
wglLoadDisplayColorTableEXT = platform.createBaseFunction(
    'wglLoadDisplayColorTableEXT', dll=platform.GL, resultType=GLboolean, 
    argTypes=[POINTER(GLushort), GLuint],
    doc='wglLoadDisplayColorTableEXT( POINTER(GLushort)(), GLuint(None) ) -> GLboolean', 
    argNames=['', 'None'],
)

wglBindDisplayColorTableEXT = platform.createBaseFunction(
    'wglBindDisplayColorTableEXT', dll=platform.GL, resultType=GLboolean, 
    argTypes=[GLushort],
    doc='wglBindDisplayColorTableEXT( GLushort(None) ) -> GLboolean', 
    argNames=['None'],
)

wglDestroyDisplayColorTableEXT = platform.createBaseFunction(
    'wglDestroyDisplayColorTableEXT', dll=platform.GL, resultType=VOID, 
    argTypes=[GLushort],
    doc='wglDestroyDisplayColorTableEXT( GLushort(None) ) -> VOID', 
    argNames=['None'],
)

PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC = CFUNCTYPE(GLboolean, GLushort) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:422
PFNWGLLOADDISPLAYCOLORTABLEEXTPROC = CFUNCTYPE(GLboolean, POINTER(GLushort), GLuint) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:423
PFNWGLBINDDISPLAYCOLORTABLEEXTPROC = CFUNCTYPE(GLboolean, GLushort) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:424
PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC = CFUNCTYPE(VOID, GLushort) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:425
# EXT_extensions_string (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:428)
WGL_EXT_extensions_string = constant.Constant( 'WGL_EXT_extensions_string', 1 )
wglGetExtensionsStringEXT = platform.createBaseFunction(
    'wglGetExtensionsStringEXT', dll=platform.GL, resultType=c_char_p, 
    argTypes=[],
    doc='wglGetExtensionsStringEXT(  ) -> c_char_p', 
    argNames=[],
)

PFNWGLGETEXTENSIONSSTRINGEXTPROC = CFUNCTYPE(c_char_p) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:433
# EXT_make_current_read (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:436)
WGL_EXT_make_current_read = constant.Constant( 'WGL_EXT_make_current_read', 1 )
wglMakeContextCurrentEXT = platform.createBaseFunction(
    'wglMakeContextCurrentEXT', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, HDC, HGLRC],
    doc='wglMakeContextCurrentEXT( HDC(None), HDC(None), HGLRC(None) ) -> BOOL', 
    argNames=['None', 'None', 'None'],
)

wglGetCurrentReadDCEXT = platform.createBaseFunction(
    'wglGetCurrentReadDCEXT', dll=platform.GL, resultType=HDC, 
    argTypes=[],
    doc='wglGetCurrentReadDCEXT(  ) -> HDC', 
    argNames=[],
)

PFNWGLMAKECONTEXTCURRENTEXTPROC = CFUNCTYPE(BOOL, HDC, HDC, HGLRC) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:442
PFNWGLGETCURRENTREADDCEXTPROC = CFUNCTYPE(HDC) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:443
# EXT_pbuffer (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:446)
WGL_EXT_pbuffer = constant.Constant( 'WGL_EXT_pbuffer', 1 )
wglCreatePbufferEXT = platform.createBaseFunction(
    'wglCreatePbufferEXT', dll=platform.GL, resultType=HPBUFFEREXT, 
    argTypes=[HDC, c_int, c_int, c_int, POINTER(c_int)],
    doc='wglCreatePbufferEXT( HDC(None), c_int(None), c_int(None), c_int(None), POINTER(c_int)() ) -> HPBUFFEREXT', 
    argNames=['None', 'None', 'None', 'None', ''],
)

wglGetPbufferDCEXT = platform.createBaseFunction(
    'wglGetPbufferDCEXT', dll=platform.GL, resultType=HDC, 
    argTypes=[HPBUFFEREXT],
    doc='wglGetPbufferDCEXT( HPBUFFEREXT(None) ) -> HDC', 
    argNames=['None'],
)

wglReleasePbufferDCEXT = platform.createBaseFunction(
    'wglReleasePbufferDCEXT', dll=platform.GL, resultType=c_int, 
    argTypes=[HPBUFFEREXT, HDC],
    doc='wglReleasePbufferDCEXT( HPBUFFEREXT(None), HDC(None) ) -> c_int', 
    argNames=['None', 'None'],
)

wglDestroyPbufferEXT = platform.createBaseFunction(
    'wglDestroyPbufferEXT', dll=platform.GL, resultType=BOOL, 
    argTypes=[HPBUFFEREXT],
    doc='wglDestroyPbufferEXT( HPBUFFEREXT(None) ) -> BOOL', 
    argNames=['None'],
)

wglQueryPbufferEXT = platform.createBaseFunction(
    'wglQueryPbufferEXT', dll=platform.GL, resultType=BOOL, 
    argTypes=[HPBUFFEREXT, c_int, POINTER(c_int)],
    doc='wglQueryPbufferEXT( HPBUFFEREXT(None), c_int(None), POINTER(c_int)() ) -> BOOL', 
    argNames=['None', 'None', ''],
)

PFNWGLCREATEPBUFFEREXTPROC = CFUNCTYPE(HPBUFFEREXT, HDC, c_int, c_int, c_int, POINTER(c_int)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:455
PFNWGLGETPBUFFERDCEXTPROC = CFUNCTYPE(HDC, HPBUFFEREXT) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:456
PFNWGLRELEASEPBUFFERDCEXTPROC = CFUNCTYPE(c_int, HPBUFFEREXT, HDC) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:457
PFNWGLDESTROYPBUFFEREXTPROC = CFUNCTYPE(BOOL, HPBUFFEREXT) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:458
PFNWGLQUERYPBUFFEREXTPROC = CFUNCTYPE(BOOL, HPBUFFEREXT, c_int, POINTER(c_int)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:459
# EXT_pixel_format (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:462)
WGL_EXT_pixel_format = constant.Constant( 'WGL_EXT_pixel_format', 1 )
wglGetPixelFormatAttribivEXT = platform.createBaseFunction(
    'wglGetPixelFormatAttribivEXT', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, c_int, c_int, UINT, POINTER(c_int), POINTER(c_int)],
    doc='wglGetPixelFormatAttribivEXT( HDC(None), c_int(None), c_int(None), UINT(None), POINTER(c_int)(), POINTER(c_int)() ) -> BOOL', 
    argNames=['None', 'None', 'None', 'None', '', ''],
)

wglGetPixelFormatAttribfvEXT = platform.createBaseFunction(
    'wglGetPixelFormatAttribfvEXT', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, c_int, c_int, UINT, POINTER(c_int), POINTER(FLOAT)],
    doc='wglGetPixelFormatAttribfvEXT( HDC(None), c_int(None), c_int(None), UINT(None), POINTER(c_int)(), POINTER(FLOAT)() ) -> BOOL', 
    argNames=['None', 'None', 'None', 'None', '', ''],
)

wglChoosePixelFormatEXT = platform.createBaseFunction(
    'wglChoosePixelFormatEXT', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, POINTER(c_int), POINTER(FLOAT), UINT, POINTER(c_int), POINTER(UINT)],
    doc='wglChoosePixelFormatEXT( HDC(None), POINTER(c_int)(), POINTER(FLOAT)(), UINT(None), POINTER(c_int)(), POINTER(UINT)() ) -> BOOL', 
    argNames=['None', '', '', 'None', '', ''],
)

PFNWGLGETPIXELFORMATATTRIBIVEXTPROC = CFUNCTYPE(BOOL, HDC, c_int, c_int, UINT, POINTER(c_int), POINTER(c_int)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:469
PFNWGLGETPIXELFORMATATTRIBFVEXTPROC = CFUNCTYPE(BOOL, HDC, c_int, c_int, UINT, POINTER(c_int), POINTER(FLOAT)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:470
PFNWGLCHOOSEPIXELFORMATEXTPROC = CFUNCTYPE(BOOL, HDC, POINTER(c_int), POINTER(FLOAT), UINT, POINTER(c_int), POINTER(UINT)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:471
# EXT_swap_control (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:474)
WGL_EXT_swap_control = constant.Constant( 'WGL_EXT_swap_control', 1 )
wglSwapIntervalEXT = platform.createBaseFunction(
    'wglSwapIntervalEXT', dll=platform.GL, resultType=BOOL, 
    argTypes=[c_int],
    doc='wglSwapIntervalEXT( c_int(None) ) -> BOOL', 
    argNames=['None'],
)

wglGetSwapIntervalEXT = platform.createBaseFunction(
    'wglGetSwapIntervalEXT', dll=platform.GL, resultType=c_int, 
    argTypes=[],
    doc='wglGetSwapIntervalEXT(  ) -> c_int', 
    argNames=[],
)

PFNWGLSWAPINTERVALEXTPROC = CFUNCTYPE(BOOL, c_int) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:480
PFNWGLGETSWAPINTERVALEXTPROC = CFUNCTYPE(c_int) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:481
# EXT_depth_float (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:484)
WGL_EXT_depth_float = constant.Constant( 'WGL_EXT_depth_float', 1 )
# NV_vertex_array_range (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:488)
WGL_NV_vertex_array_range = constant.Constant( 'WGL_NV_vertex_array_range', 1 )
GLsizei = c_int 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:25
GLfloat = c_float 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:29
wglAllocateMemoryNV = platform.createBaseFunction(
    'wglAllocateMemoryNV', dll=platform.GL, resultType=POINTER(c_void), 
    argTypes=[GLsizei, GLfloat, GLfloat, GLfloat],
    doc='wglAllocateMemoryNV( GLsizei(None), GLfloat(None), GLfloat(None), GLfloat(None) ) -> POINTER(c_void)', 
    argNames=['None', 'None', 'None', 'None'],
)

wglFreeMemoryNV = platform.createBaseFunction(
    'wglFreeMemoryNV', dll=platform.GL, resultType=None, 
    argTypes=[POINTER(None)],
    doc='wglFreeMemoryNV( POINTER(None)() ) -> None', 
    argNames=[''],
)

PFNWGLALLOCATEMEMORYNVPROC = CFUNCTYPE(POINTER(c_void), GLsizei, GLfloat, GLfloat, GLfloat) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:494
PFNWGLFREEMEMORYNVPROC = CFUNCTYPE(None, POINTER(None)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:495
# 3DFX_multisample (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:498)
WGL_3DFX_multisample = constant.Constant( 'WGL_3DFX_multisample', 1 )
# EXT_multisample (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:502)
WGL_EXT_multisample = constant.Constant( 'WGL_EXT_multisample', 1 )
# OML_sync_control (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:506)
WGL_OML_sync_control = constant.Constant( 'WGL_OML_sync_control', 1 )
INT64 = c_longlong 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:44
wglGetSyncValuesOML = platform.createBaseFunction(
    'wglGetSyncValuesOML', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, POINTER(INT64), POINTER(INT64), POINTER(INT64)],
    doc='wglGetSyncValuesOML( HDC(None), POINTER(INT64)(), POINTER(INT64)(), POINTER(INT64)() ) -> BOOL', 
    argNames=['None', '', '', ''],
)

INT32 = c_int 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:37
wglGetMscRateOML = platform.createBaseFunction(
    'wglGetMscRateOML', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, POINTER(INT32), POINTER(INT32)],
    doc='wglGetMscRateOML( HDC(None), POINTER(INT32)(), POINTER(INT32)() ) -> BOOL', 
    argNames=['None', '', ''],
)

wglSwapBuffersMscOML = platform.createBaseFunction(
    'wglSwapBuffersMscOML', dll=platform.GL, resultType=INT64, 
    argTypes=[HDC, INT64, INT64, INT64],
    doc='wglSwapBuffersMscOML( HDC(None), INT64(None), INT64(None), INT64(None) ) -> INT64', 
    argNames=['None', 'None', 'None', 'None'],
)

wglSwapLayerBuffersMscOML = platform.createBaseFunction(
    'wglSwapLayerBuffersMscOML', dll=platform.GL, resultType=INT64, 
    argTypes=[HDC, c_int, INT64, INT64, INT64],
    doc='wglSwapLayerBuffersMscOML( HDC(None), c_int(None), INT64(None), INT64(None), INT64(None) ) -> INT64', 
    argNames=['None', 'None', 'None', 'None', 'None'],
)

wglWaitForMscOML = platform.createBaseFunction(
    'wglWaitForMscOML', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, INT64, INT64, INT64, POINTER(INT64), POINTER(INT64), POINTER(INT64)],
    doc='wglWaitForMscOML( HDC(None), INT64(None), INT64(None), INT64(None), POINTER(INT64)(), POINTER(INT64)(), POINTER(INT64)() ) -> BOOL', 
    argNames=['None', 'None', 'None', 'None', '', '', ''],
)

wglWaitForSbcOML = platform.createBaseFunction(
    'wglWaitForSbcOML', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, INT64, POINTER(INT64), POINTER(INT64), POINTER(INT64)],
    doc='wglWaitForSbcOML( HDC(None), INT64(None), POINTER(INT64)(), POINTER(INT64)(), POINTER(INT64)() ) -> BOOL', 
    argNames=['None', 'None', '', '', ''],
)

PFNWGLGETSYNCVALUESOMLPROC = CFUNCTYPE(BOOL, HDC, POINTER(INT64), POINTER(INT64), POINTER(INT64)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:516
PFNWGLGETMSCRATEOMLPROC = CFUNCTYPE(BOOL, HDC, POINTER(INT32), POINTER(INT32)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:517
PFNWGLSWAPBUFFERSMSCOMLPROC = CFUNCTYPE(INT64, HDC, INT64, INT64, INT64) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:518
PFNWGLSWAPLAYERBUFFERSMSCOMLPROC = CFUNCTYPE(INT64, HDC, c_int, INT64, INT64, INT64) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:519
PFNWGLWAITFORMSCOMLPROC = CFUNCTYPE(BOOL, HDC, INT64, INT64, INT64, POINTER(INT64), POINTER(INT64), POINTER(INT64)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:520
PFNWGLWAITFORSBCOMLPROC = CFUNCTYPE(BOOL, HDC, INT64, POINTER(INT64), POINTER(INT64), POINTER(INT64)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:521
# I3D_digital_video_control (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:524)
WGL_I3D_digital_video_control = constant.Constant( 'WGL_I3D_digital_video_control', 1 )
wglGetDigitalVideoParametersI3D = platform.createBaseFunction(
    'wglGetDigitalVideoParametersI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, c_int, POINTER(c_int)],
    doc='wglGetDigitalVideoParametersI3D( HDC(None), c_int(None), POINTER(c_int)() ) -> BOOL', 
    argNames=['None', 'None', ''],
)

wglSetDigitalVideoParametersI3D = platform.createBaseFunction(
    'wglSetDigitalVideoParametersI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, c_int, POINTER(c_int)],
    doc='wglSetDigitalVideoParametersI3D( HDC(None), c_int(None), POINTER(c_int)() ) -> BOOL', 
    argNames=['None', 'None', ''],
)

PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC = CFUNCTYPE(BOOL, HDC, c_int, POINTER(c_int)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:530
PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC = CFUNCTYPE(BOOL, HDC, c_int, POINTER(c_int)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:531
# I3D_gamma (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:534)
WGL_I3D_gamma = constant.Constant( 'WGL_I3D_gamma', 1 )
wglGetGammaTableParametersI3D = platform.createBaseFunction(
    'wglGetGammaTableParametersI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, c_int, POINTER(c_int)],
    doc='wglGetGammaTableParametersI3D( HDC(None), c_int(None), POINTER(c_int)() ) -> BOOL', 
    argNames=['None', 'None', ''],
)

wglSetGammaTableParametersI3D = platform.createBaseFunction(
    'wglSetGammaTableParametersI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, c_int, POINTER(c_int)],
    doc='wglSetGammaTableParametersI3D( HDC(None), c_int(None), POINTER(c_int)() ) -> BOOL', 
    argNames=['None', 'None', ''],
)

USHORT = c_ushort 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:51
wglGetGammaTableI3D = platform.createBaseFunction(
    'wglGetGammaTableI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, c_int, POINTER(USHORT), POINTER(USHORT), POINTER(USHORT)],
    doc='wglGetGammaTableI3D( HDC(None), c_int(None), POINTER(USHORT)(), POINTER(USHORT)(), POINTER(USHORT)() ) -> BOOL', 
    argNames=['None', 'None', '', '', ''],
)

wglSetGammaTableI3D = platform.createBaseFunction(
    'wglSetGammaTableI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, c_int, POINTER(USHORT), POINTER(USHORT), POINTER(USHORT)],
    doc='wglSetGammaTableI3D( HDC(None), c_int(None), POINTER(USHORT)(), POINTER(USHORT)(), POINTER(USHORT)() ) -> BOOL', 
    argNames=['None', 'None', '', '', ''],
)

PFNWGLGETGAMMATABLEPARAMETERSI3DPROC = CFUNCTYPE(BOOL, HDC, c_int, POINTER(c_int)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:542
PFNWGLSETGAMMATABLEPARAMETERSI3DPROC = CFUNCTYPE(BOOL, HDC, c_int, POINTER(c_int)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:543
PFNWGLGETGAMMATABLEI3DPROC = CFUNCTYPE(BOOL, HDC, c_int, POINTER(USHORT), POINTER(USHORT), POINTER(USHORT)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:544
PFNWGLSETGAMMATABLEI3DPROC = CFUNCTYPE(BOOL, HDC, c_int, POINTER(USHORT), POINTER(USHORT), POINTER(USHORT)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:545
# I3D_genlock (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:548)
WGL_I3D_genlock = constant.Constant( 'WGL_I3D_genlock', 1 )
wglEnableGenlockI3D = platform.createBaseFunction(
    'wglEnableGenlockI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC],
    doc='wglEnableGenlockI3D( HDC(None) ) -> BOOL', 
    argNames=['None'],
)

wglDisableGenlockI3D = platform.createBaseFunction(
    'wglDisableGenlockI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC],
    doc='wglDisableGenlockI3D( HDC(None) ) -> BOOL', 
    argNames=['None'],
)

wglIsEnabledGenlockI3D = platform.createBaseFunction(
    'wglIsEnabledGenlockI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, POINTER(BOOL)],
    doc='wglIsEnabledGenlockI3D( HDC(None), POINTER(BOOL)() ) -> BOOL', 
    argNames=['None', ''],
)

wglGenlockSourceI3D = platform.createBaseFunction(
    'wglGenlockSourceI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, UINT],
    doc='wglGenlockSourceI3D( HDC(None), UINT(None) ) -> BOOL', 
    argNames=['None', 'None'],
)

wglGetGenlockSourceI3D = platform.createBaseFunction(
    'wglGetGenlockSourceI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, POINTER(UINT)],
    doc='wglGetGenlockSourceI3D( HDC(None), POINTER(UINT)() ) -> BOOL', 
    argNames=['None', ''],
)

wglGenlockSourceEdgeI3D = platform.createBaseFunction(
    'wglGenlockSourceEdgeI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, UINT],
    doc='wglGenlockSourceEdgeI3D( HDC(None), UINT(None) ) -> BOOL', 
    argNames=['None', 'None'],
)

wglGetGenlockSourceEdgeI3D = platform.createBaseFunction(
    'wglGetGenlockSourceEdgeI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, POINTER(UINT)],
    doc='wglGetGenlockSourceEdgeI3D( HDC(None), POINTER(UINT)() ) -> BOOL', 
    argNames=['None', ''],
)

wglGenlockSampleRateI3D = platform.createBaseFunction(
    'wglGenlockSampleRateI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, UINT],
    doc='wglGenlockSampleRateI3D( HDC(None), UINT(None) ) -> BOOL', 
    argNames=['None', 'None'],
)

wglGetGenlockSampleRateI3D = platform.createBaseFunction(
    'wglGetGenlockSampleRateI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, POINTER(UINT)],
    doc='wglGetGenlockSampleRateI3D( HDC(None), POINTER(UINT)() ) -> BOOL', 
    argNames=['None', ''],
)

wglGenlockSourceDelayI3D = platform.createBaseFunction(
    'wglGenlockSourceDelayI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, UINT],
    doc='wglGenlockSourceDelayI3D( HDC(None), UINT(None) ) -> BOOL', 
    argNames=['None', 'None'],
)

wglGetGenlockSourceDelayI3D = platform.createBaseFunction(
    'wglGetGenlockSourceDelayI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, POINTER(UINT)],
    doc='wglGetGenlockSourceDelayI3D( HDC(None), POINTER(UINT)() ) -> BOOL', 
    argNames=['None', ''],
)

wglQueryGenlockMaxSourceDelayI3D = platform.createBaseFunction(
    'wglQueryGenlockMaxSourceDelayI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, POINTER(UINT), POINTER(UINT)],
    doc='wglQueryGenlockMaxSourceDelayI3D( HDC(None), POINTER(UINT)(), POINTER(UINT)() ) -> BOOL', 
    argNames=['None', '', ''],
)

PFNWGLENABLEGENLOCKI3DPROC = CFUNCTYPE(BOOL, HDC) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:564
PFNWGLDISABLEGENLOCKI3DPROC = CFUNCTYPE(BOOL, HDC) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:565
PFNWGLISENABLEDGENLOCKI3DPROC = CFUNCTYPE(BOOL, HDC, POINTER(BOOL)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:566
PFNWGLGENLOCKSOURCEI3DPROC = CFUNCTYPE(BOOL, HDC, UINT) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:567
PFNWGLGETGENLOCKSOURCEI3DPROC = CFUNCTYPE(BOOL, HDC, POINTER(UINT)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:568
PFNWGLGENLOCKSOURCEEDGEI3DPROC = CFUNCTYPE(BOOL, HDC, UINT) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:569
PFNWGLGETGENLOCKSOURCEEDGEI3DPROC = CFUNCTYPE(BOOL, HDC, POINTER(UINT)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:570
PFNWGLGENLOCKSAMPLERATEI3DPROC = CFUNCTYPE(BOOL, HDC, UINT) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:571
PFNWGLGETGENLOCKSAMPLERATEI3DPROC = CFUNCTYPE(BOOL, HDC, POINTER(UINT)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:572
PFNWGLGENLOCKSOURCEDELAYI3DPROC = CFUNCTYPE(BOOL, HDC, UINT) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:573
PFNWGLGETGENLOCKSOURCEDELAYI3DPROC = CFUNCTYPE(BOOL, HDC, POINTER(UINT)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:574
PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC = CFUNCTYPE(BOOL, HDC, POINTER(UINT), POINTER(UINT)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:575
# I3D_image_buffer (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:578)
WGL_I3D_image_buffer = constant.Constant( 'WGL_I3D_image_buffer', 1 )
LPVOID = POINTER(None) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:47
DWORD = c_ulong 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:56
wglCreateImageBufferI3D = platform.createBaseFunction(
    'wglCreateImageBufferI3D', dll=platform.GL, resultType=LPVOID, 
    argTypes=[HDC, DWORD, UINT],
    doc='wglCreateImageBufferI3D( HDC(None), DWORD(None), UINT(None) ) -> LPVOID', 
    argNames=['None', 'None', 'None'],
)

wglDestroyImageBufferI3D = platform.createBaseFunction(
    'wglDestroyImageBufferI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, LPVOID],
    doc='wglDestroyImageBufferI3D( HDC(None), LPVOID(None) ) -> BOOL', 
    argNames=['None', 'None'],
)

wglAssociateImageBufferEventsI3D = platform.createBaseFunction(
    'wglAssociateImageBufferEventsI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, POINTER(HANDLE), POINTER(LPVOID), POINTER(DWORD), UINT],
    doc='wglAssociateImageBufferEventsI3D( HDC(None), POINTER(HANDLE)(), POINTER(LPVOID)(), POINTER(DWORD)(), UINT(None) ) -> BOOL', 
    argNames=['None', '', '', '', 'None'],
)

wglReleaseImageBufferEventsI3D = platform.createBaseFunction(
    'wglReleaseImageBufferEventsI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[HDC, POINTER(LPVOID), UINT],
    doc='wglReleaseImageBufferEventsI3D( HDC(None), POINTER(LPVOID)(), UINT(None) ) -> BOOL', 
    argNames=['None', '', 'None'],
)

PFNWGLCREATEIMAGEBUFFERI3DPROC = CFUNCTYPE(LPVOID, HDC, DWORD, UINT) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:586
PFNWGLDESTROYIMAGEBUFFERI3DPROC = CFUNCTYPE(BOOL, HDC, LPVOID) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:587
PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC = CFUNCTYPE(BOOL, HDC, POINTER(HANDLE), POINTER(LPVOID), POINTER(DWORD), UINT) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:588
PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC = CFUNCTYPE(BOOL, HDC, POINTER(LPVOID), UINT) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:589
# I3D_swap_frame_lock (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:592)
WGL_I3D_swap_frame_lock = constant.Constant( 'WGL_I3D_swap_frame_lock', 1 )
wglEnableFrameLockI3D = platform.createBaseFunction(
    'wglEnableFrameLockI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[],
    doc='wglEnableFrameLockI3D(  ) -> BOOL', 
    argNames=[],
)

wglDisableFrameLockI3D = platform.createBaseFunction(
    'wglDisableFrameLockI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[],
    doc='wglDisableFrameLockI3D(  ) -> BOOL', 
    argNames=[],
)

wglIsEnabledFrameLockI3D = platform.createBaseFunction(
    'wglIsEnabledFrameLockI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[POINTER(BOOL)],
    doc='wglIsEnabledFrameLockI3D( POINTER(BOOL)() ) -> BOOL', 
    argNames=[''],
)

wglQueryFrameLockMasterI3D = platform.createBaseFunction(
    'wglQueryFrameLockMasterI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[POINTER(BOOL)],
    doc='wglQueryFrameLockMasterI3D( POINTER(BOOL)() ) -> BOOL', 
    argNames=[''],
)

PFNWGLENABLEFRAMELOCKI3DPROC = CFUNCTYPE(BOOL) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:600
PFNWGLDISABLEFRAMELOCKI3DPROC = CFUNCTYPE(BOOL) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:601
PFNWGLISENABLEDFRAMELOCKI3DPROC = CFUNCTYPE(BOOL, POINTER(BOOL)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:602
PFNWGLQUERYFRAMELOCKMASTERI3DPROC = CFUNCTYPE(BOOL, POINTER(BOOL)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:603
# I3D_swap_frame_usage (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:606)
WGL_I3D_swap_frame_usage = constant.Constant( 'WGL_I3D_swap_frame_usage', 1 )
wglGetFrameUsageI3D = platform.createBaseFunction(
    'wglGetFrameUsageI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[POINTER(c_float)],
    doc='wglGetFrameUsageI3D( POINTER(c_float)() ) -> BOOL', 
    argNames=[''],
)

wglBeginFrameTrackingI3D = platform.createBaseFunction(
    'wglBeginFrameTrackingI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[],
    doc='wglBeginFrameTrackingI3D(  ) -> BOOL', 
    argNames=[],
)

wglEndFrameTrackingI3D = platform.createBaseFunction(
    'wglEndFrameTrackingI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[],
    doc='wglEndFrameTrackingI3D(  ) -> BOOL', 
    argNames=[],
)

wglQueryFrameTrackingI3D = platform.createBaseFunction(
    'wglQueryFrameTrackingI3D', dll=platform.GL, resultType=BOOL, 
    argTypes=[POINTER(DWORD), POINTER(DWORD), POINTER(c_float)],
    doc='wglQueryFrameTrackingI3D( POINTER(DWORD)(), POINTER(DWORD)(), POINTER(c_float)() ) -> BOOL', 
    argNames=['', '', ''],
)

PFNWGLGETFRAMEUSAGEI3DPROC = CFUNCTYPE(BOOL, POINTER(c_float)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:614
PFNWGLBEGINFRAMETRACKINGI3DPROC = CFUNCTYPE(BOOL) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:615
PFNWGLENDFRAMETRACKINGI3DPROC = CFUNCTYPE(BOOL) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:616
PFNWGLQUERYFRAMETRACKINGI3DPROC = CFUNCTYPE(BOOL, POINTER(DWORD), POINTER(DWORD), POINTER(c_float)) 	# http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:617
# ATI_pixel_format_float (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:620)
WGL_ATI_pixel_format_float = constant.Constant( 'WGL_ATI_pixel_format_float', 1 )
# NV_float_buffer (http://oss.sgi.com/projects/ogl-sample/ABI/wglext.h:624)
WGL_NV_float_buffer = constant.Constant( 'WGL_NV_float_buffer', 1 )

__all__ = ['GLAPI', 'WGL_WGLEXT_VERSION', 'WGL_FRONT_COLOR_BUFFER_BIT_ARB',
'WGL_BACK_COLOR_BUFFER_BIT_ARB', 'WGL_DEPTH_BUFFER_BIT_ARB',
'WGL_STENCIL_BUFFER_BIT_ARB', 'WGL_SAMPLE_BUFFERS_ARB', 'WGL_SAMPLES_ARB',
'WGL_NUMBER_PIXEL_FORMATS_ARB', 'WGL_DRAW_TO_WINDOW_ARB',
'WGL_DRAW_TO_BITMAP_ARB', 'WGL_ACCELERATION_ARB', 'WGL_NEED_PALETTE_ARB',
'WGL_NEED_SYSTEM_PALETTE_ARB', 'WGL_SWAP_LAYER_BUFFERS_ARB',
'WGL_SWAP_METHOD_ARB', 'WGL_NUMBER_OVERLAYS_ARB', 'WGL_NUMBER_UNDERLAYS_ARB',
'WGL_TRANSPARENT_ARB', 'WGL_TRANSPARENT_RED_VALUE_ARB',
'WGL_TRANSPARENT_GREEN_VALUE_ARB', 'WGL_TRANSPARENT_BLUE_VALUE_ARB',
'WGL_TRANSPARENT_ALPHA_VALUE_ARB', 'WGL_TRANSPARENT_INDEX_VALUE_ARB',
'WGL_SHARE_DEPTH_ARB', 'WGL_SHARE_STENCIL_ARB', 'WGL_SHARE_ACCUM_ARB',
'WGL_SUPPORT_GDI_ARB', 'WGL_SUPPORT_OPENGL_ARB', 'WGL_DOUBLE_BUFFER_ARB',
'WGL_STEREO_ARB', 'WGL_PIXEL_TYPE_ARB', 'WGL_COLOR_BITS_ARB',
'WGL_RED_BITS_ARB', 'WGL_RED_SHIFT_ARB', 'WGL_GREEN_BITS_ARB',
'WGL_GREEN_SHIFT_ARB', 'WGL_BLUE_BITS_ARB', 'WGL_BLUE_SHIFT_ARB',
'WGL_ALPHA_BITS_ARB', 'WGL_ALPHA_SHIFT_ARB', 'WGL_ACCUM_BITS_ARB',
'WGL_ACCUM_RED_BITS_ARB', 'WGL_ACCUM_GREEN_BITS_ARB',
'WGL_ACCUM_BLUE_BITS_ARB', 'WGL_ACCUM_ALPHA_BITS_ARB', 'WGL_DEPTH_BITS_ARB',
'WGL_STENCIL_BITS_ARB', 'WGL_AUX_BUFFERS_ARB', 'WGL_NO_ACCELERATION_ARB',
'WGL_GENERIC_ACCELERATION_ARB', 'WGL_FULL_ACCELERATION_ARB',
'WGL_SWAP_EXCHANGE_ARB', 'WGL_SWAP_COPY_ARB', 'WGL_SWAP_UNDEFINED_ARB',
'WGL_TYPE_RGBA_ARB', 'WGL_TYPE_COLORINDEX_ARB',
'ERROR_INVALID_PIXEL_TYPE_ARB', 'ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB',
'WGL_DRAW_TO_PBUFFER_ARB', 'WGL_MAX_PBUFFER_PIXELS_ARB',
'WGL_MAX_PBUFFER_WIDTH_ARB', 'WGL_MAX_PBUFFER_HEIGHT_ARB',
'WGL_PBUFFER_LARGEST_ARB', 'WGL_PBUFFER_WIDTH_ARB', 'WGL_PBUFFER_HEIGHT_ARB',
'WGL_PBUFFER_LOST_ARB', 'WGL_BIND_TO_TEXTURE_RGB_ARB',
'WGL_BIND_TO_TEXTURE_RGBA_ARB', 'WGL_TEXTURE_FORMAT_ARB',
'WGL_TEXTURE_TARGET_ARB', 'WGL_MIPMAP_TEXTURE_ARB', 'WGL_TEXTURE_RGB_ARB',
'WGL_TEXTURE_RGBA_ARB', 'WGL_NO_TEXTURE_ARB', 'WGL_TEXTURE_CUBE_MAP_ARB',
'WGL_TEXTURE_1D_ARB', 'WGL_TEXTURE_2D_ARB', 'WGL_MIPMAP_LEVEL_ARB',
'WGL_CUBE_MAP_FACE_ARB', 'WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB',
'WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB', 'WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB',
'WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB', 'WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB',
'WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB', 'WGL_FRONT_LEFT_ARB',
'WGL_FRONT_RIGHT_ARB', 'WGL_BACK_LEFT_ARB', 'WGL_BACK_RIGHT_ARB',
'WGL_AUX0_ARB', 'WGL_AUX1_ARB', 'WGL_AUX2_ARB', 'WGL_AUX3_ARB',
'WGL_AUX4_ARB', 'WGL_AUX5_ARB', 'WGL_AUX6_ARB', 'WGL_AUX7_ARB',
'WGL_AUX8_ARB', 'WGL_AUX9_ARB', 'WGL_TYPE_RGBA_FLOAT_ARB',
'ERROR_INVALID_PIXEL_TYPE_EXT', 'WGL_NUMBER_PIXEL_FORMATS_EXT',
'WGL_DRAW_TO_WINDOW_EXT', 'WGL_DRAW_TO_BITMAP_EXT', 'WGL_ACCELERATION_EXT',
'WGL_NEED_PALETTE_EXT', 'WGL_NEED_SYSTEM_PALETTE_EXT',
'WGL_SWAP_LAYER_BUFFERS_EXT', 'WGL_SWAP_METHOD_EXT',
'WGL_NUMBER_OVERLAYS_EXT', 'WGL_NUMBER_UNDERLAYS_EXT', 'WGL_TRANSPARENT_EXT',
'WGL_TRANSPARENT_VALUE_EXT', 'WGL_SHARE_DEPTH_EXT', 'WGL_SHARE_STENCIL_EXT',
'WGL_SHARE_ACCUM_EXT', 'WGL_SUPPORT_GDI_EXT', 'WGL_SUPPORT_OPENGL_EXT',
'WGL_DOUBLE_BUFFER_EXT', 'WGL_STEREO_EXT', 'WGL_PIXEL_TYPE_EXT',
'WGL_COLOR_BITS_EXT', 'WGL_RED_BITS_EXT', 'WGL_RED_SHIFT_EXT',
'WGL_GREEN_BITS_EXT', 'WGL_GREEN_SHIFT_EXT', 'WGL_BLUE_BITS_EXT',
'WGL_BLUE_SHIFT_EXT', 'WGL_ALPHA_BITS_EXT', 'WGL_ALPHA_SHIFT_EXT',
'WGL_ACCUM_BITS_EXT', 'WGL_ACCUM_RED_BITS_EXT', 'WGL_ACCUM_GREEN_BITS_EXT',
'WGL_ACCUM_BLUE_BITS_EXT', 'WGL_ACCUM_ALPHA_BITS_EXT', 'WGL_DEPTH_BITS_EXT',
'WGL_STENCIL_BITS_EXT', 'WGL_AUX_BUFFERS_EXT', 'WGL_NO_ACCELERATION_EXT',
'WGL_GENERIC_ACCELERATION_EXT', 'WGL_FULL_ACCELERATION_EXT',
'WGL_SWAP_EXCHANGE_EXT', 'WGL_SWAP_COPY_EXT', 'WGL_SWAP_UNDEFINED_EXT',
'WGL_TYPE_RGBA_EXT', 'WGL_TYPE_COLORINDEX_EXT', 'WGL_DRAW_TO_PBUFFER_EXT',
'WGL_MAX_PBUFFER_PIXELS_EXT', 'WGL_MAX_PBUFFER_WIDTH_EXT',
'WGL_MAX_PBUFFER_HEIGHT_EXT', 'WGL_OPTIMAL_PBUFFER_WIDTH_EXT',
'WGL_OPTIMAL_PBUFFER_HEIGHT_EXT', 'WGL_PBUFFER_LARGEST_EXT',
'WGL_PBUFFER_WIDTH_EXT', 'WGL_PBUFFER_HEIGHT_EXT', 'WGL_DEPTH_FLOAT_EXT',
'WGL_SAMPLE_BUFFERS_3DFX', 'WGL_SAMPLES_3DFX', 'WGL_SAMPLE_BUFFERS_EXT',
'WGL_SAMPLES_EXT', 'WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D',
'WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D',
'WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D',
'WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D', 'WGL_GAMMA_TABLE_SIZE_I3D',
'WGL_GAMMA_EXCLUDE_DESKTOP_I3D', 'WGL_GENLOCK_SOURCE_MULTIVIEW_I3D',
'WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D', 'WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D',
'WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D', 'WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D',
'WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D', 'WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D',
'WGL_GENLOCK_SOURCE_EDGE_RISING_I3D', 'WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D',
'WGL_IMAGE_BUFFER_MIN_ACCESS_I3D', 'WGL_IMAGE_BUFFER_LOCK_I3D',
'WGL_BIND_TO_TEXTURE_DEPTH_NV', 'WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV',
'WGL_DEPTH_TEXTURE_FORMAT_NV', 'WGL_TEXTURE_DEPTH_COMPONENT_NV',
'WGL_DEPTH_COMPONENT_NV', 'WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV',
'WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV', 'WGL_TEXTURE_RECTANGLE_NV',
'WGL_TYPE_RGBA_FLOAT_ATI', 'WGL_FLOAT_COMPONENTS_NV',
'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV',
'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV',
'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV',
'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV', 'WGL_TEXTURE_FLOAT_R_NV',
'WGL_TEXTURE_FLOAT_RG_NV', 'WGL_TEXTURE_FLOAT_RGB_NV',
'WGL_TEXTURE_FLOAT_RGBA_NV', 'HPBUFFERARB', 'HPBUFFEREXT',
'WGL_ARB_buffer_region', 'wglCreateBufferRegionARB',
'wglDeleteBufferRegionARB', 'wglSaveBufferRegionARB',
'wglRestoreBufferRegionARB', 'PFNWGLCREATEBUFFERREGIONARBPROC',
'PFNWGLDELETEBUFFERREGIONARBPROC', 'PFNWGLSAVEBUFFERREGIONARBPROC',
'PFNWGLRESTOREBUFFERREGIONARBPROC', 'WGL_ARB_multisample',
'WGL_ARB_extensions_string', 'wglGetExtensionsStringARB',
'PFNWGLGETEXTENSIONSSTRINGARBPROC', 'WGL_ARB_pixel_format',
'wglGetPixelFormatAttribivARB', 'wglGetPixelFormatAttribfvARB',
'wglChoosePixelFormatARB', 'PFNWGLGETPIXELFORMATATTRIBIVARBPROC',
'PFNWGLGETPIXELFORMATATTRIBFVARBPROC', 'PFNWGLCHOOSEPIXELFORMATARBPROC',
'WGL_ARB_make_current_read', 'wglMakeContextCurrentARB',
'wglGetCurrentReadDCARB', 'PFNWGLMAKECONTEXTCURRENTARBPROC',
'PFNWGLGETCURRENTREADDCARBPROC', 'WGL_ARB_pbuffer', 'wglCreatePbufferARB',
'wglGetPbufferDCARB', 'wglReleasePbufferDCARB', 'wglDestroyPbufferARB',
'wglQueryPbufferARB', 'PFNWGLCREATEPBUFFERARBPROC',
'PFNWGLGETPBUFFERDCARBPROC', 'PFNWGLRELEASEPBUFFERDCARBPROC',
'PFNWGLDESTROYPBUFFERARBPROC', 'PFNWGLQUERYPBUFFERARBPROC',
'WGL_ARB_render_texture', 'wglBindTexImageARB', 'wglReleaseTexImageARB',
'wglSetPbufferAttribARB', 'PFNWGLBINDTEXIMAGEARBPROC',
'PFNWGLRELEASETEXIMAGEARBPROC', 'PFNWGLSETPBUFFERATTRIBARBPROC',
'WGL_ARB_pixel_format_float', 'WGL_EXT_display_color_table',
'wglCreateDisplayColorTableEXT', 'wglLoadDisplayColorTableEXT',
'wglBindDisplayColorTableEXT', 'wglDestroyDisplayColorTableEXT',
'PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC', 'PFNWGLLOADDISPLAYCOLORTABLEEXTPROC',
'PFNWGLBINDDISPLAYCOLORTABLEEXTPROC', 'PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC',
'WGL_EXT_extensions_string', 'wglGetExtensionsStringEXT',
'PFNWGLGETEXTENSIONSSTRINGEXTPROC', 'WGL_EXT_make_current_read',
'wglMakeContextCurrentEXT', 'wglGetCurrentReadDCEXT',
'PFNWGLMAKECONTEXTCURRENTEXTPROC', 'PFNWGLGETCURRENTREADDCEXTPROC',
'WGL_EXT_pbuffer', 'wglCreatePbufferEXT', 'wglGetPbufferDCEXT',
'wglReleasePbufferDCEXT', 'wglDestroyPbufferEXT', 'wglQueryPbufferEXT',
'PFNWGLCREATEPBUFFEREXTPROC', 'PFNWGLGETPBUFFERDCEXTPROC',
'PFNWGLRELEASEPBUFFERDCEXTPROC', 'PFNWGLDESTROYPBUFFEREXTPROC',
'PFNWGLQUERYPBUFFEREXTPROC', 'WGL_EXT_pixel_format',
'wglGetPixelFormatAttribivEXT', 'wglGetPixelFormatAttribfvEXT',
'wglChoosePixelFormatEXT', 'PFNWGLGETPIXELFORMATATTRIBIVEXTPROC',
'PFNWGLGETPIXELFORMATATTRIBFVEXTPROC', 'PFNWGLCHOOSEPIXELFORMATEXTPROC',
'WGL_EXT_swap_control', 'wglSwapIntervalEXT', 'wglGetSwapIntervalEXT',
'PFNWGLSWAPINTERVALEXTPROC', 'PFNWGLGETSWAPINTERVALEXTPROC',
'WGL_EXT_depth_float', 'WGL_NV_vertex_array_range', 'wglAllocateMemoryNV',
'wglFreeMemoryNV', 'PFNWGLALLOCATEMEMORYNVPROC', 'PFNWGLFREEMEMORYNVPROC',
'WGL_3DFX_multisample', 'WGL_EXT_multisample', 'WGL_OML_sync_control',
'wglGetSyncValuesOML', 'wglGetMscRateOML', 'wglSwapBuffersMscOML',
'wglSwapLayerBuffersMscOML', 'wglWaitForMscOML', 'wglWaitForSbcOML',
'PFNWGLGETSYNCVALUESOMLPROC', 'PFNWGLGETMSCRATEOMLPROC',
'PFNWGLSWAPBUFFERSMSCOMLPROC', 'PFNWGLSWAPLAYERBUFFERSMSCOMLPROC',
'PFNWGLWAITFORMSCOMLPROC', 'PFNWGLWAITFORSBCOMLPROC',
'WGL_I3D_digital_video_control', 'wglGetDigitalVideoParametersI3D',
'wglSetDigitalVideoParametersI3D', 'PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC',
'PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC', 'WGL_I3D_gamma',
'wglGetGammaTableParametersI3D', 'wglSetGammaTableParametersI3D',
'wglGetGammaTableI3D', 'wglSetGammaTableI3D',
'PFNWGLGETGAMMATABLEPARAMETERSI3DPROC',
'PFNWGLSETGAMMATABLEPARAMETERSI3DPROC', 'PFNWGLGETGAMMATABLEI3DPROC',
'PFNWGLSETGAMMATABLEI3DPROC', 'WGL_I3D_genlock', 'wglEnableGenlockI3D',
'wglDisableGenlockI3D', 'wglIsEnabledGenlockI3D', 'wglGenlockSourceI3D',
'wglGetGenlockSourceI3D', 'wglGenlockSourceEdgeI3D',
'wglGetGenlockSourceEdgeI3D', 'wglGenlockSampleRateI3D',
'wglGetGenlockSampleRateI3D', 'wglGenlockSourceDelayI3D',
'wglGetGenlockSourceDelayI3D', 'wglQueryGenlockMaxSourceDelayI3D',
'PFNWGLENABLEGENLOCKI3DPROC', 'PFNWGLDISABLEGENLOCKI3DPROC',
'PFNWGLISENABLEDGENLOCKI3DPROC', 'PFNWGLGENLOCKSOURCEI3DPROC',
'PFNWGLGETGENLOCKSOURCEI3DPROC', 'PFNWGLGENLOCKSOURCEEDGEI3DPROC',
'PFNWGLGETGENLOCKSOURCEEDGEI3DPROC', 'PFNWGLGENLOCKSAMPLERATEI3DPROC',
'PFNWGLGETGENLOCKSAMPLERATEI3DPROC', 'PFNWGLGENLOCKSOURCEDELAYI3DPROC',
'PFNWGLGETGENLOCKSOURCEDELAYI3DPROC',
'PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC', 'WGL_I3D_image_buffer',
'wglCreateImageBufferI3D', 'wglDestroyImageBufferI3D',
'wglAssociateImageBufferEventsI3D', 'wglReleaseImageBufferEventsI3D',
'PFNWGLCREATEIMAGEBUFFERI3DPROC', 'PFNWGLDESTROYIMAGEBUFFERI3DPROC',
'PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC',
'PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC', 'WGL_I3D_swap_frame_lock',
'wglEnableFrameLockI3D', 'wglDisableFrameLockI3D', 'wglIsEnabledFrameLockI3D',
'wglQueryFrameLockMasterI3D', 'PFNWGLENABLEFRAMELOCKI3DPROC',
'PFNWGLDISABLEFRAMELOCKI3DPROC', 'PFNWGLISENABLEDFRAMELOCKI3DPROC',
'PFNWGLQUERYFRAMELOCKMASTERI3DPROC', 'WGL_I3D_swap_frame_usage',
'wglGetFrameUsageI3D', 'wglBeginFrameTrackingI3D', 'wglEndFrameTrackingI3D',
'wglQueryFrameTrackingI3D', 'PFNWGLGETFRAMEUSAGEI3DPROC',
'PFNWGLBEGINFRAMETRACKINGI3DPROC', 'PFNWGLENDFRAMETRACKINGI3DPROC',
'PFNWGLQUERYFRAMETRACKINGI3DPROC', 'WGL_ATI_pixel_format_float',
'WGL_NV_float_buffer']
# END GENERATED CONTENT (do not edit above this line)

