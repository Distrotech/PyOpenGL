# BEGIN GENERATED CONTENT (do not edit below this line)

# This content is generated by gengl.py.
# Wrapper for /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h
from OpenGL import platform, constant
from ctypes import *
c_void = None


CONST = constant.Constant( 'CONST', 0 )
GLenum = c_uint 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:19
GLboolean = c_ubyte 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:20
GLbitfield = c_uint 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:21
GLbyte = c_char 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:22
GLshort = c_short 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:23
GLint = c_int 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:24
GLsizei = c_int 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:25
GLubyte = c_ubyte 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:26
GLushort = c_ushort 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:27
GLuint = c_uint 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:28
GLfloat = c_float 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:29
GLclampf = c_float 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:30
GLdouble = c_double 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:31
GLclampd = c_double 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:32
GLvoid = None 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:33
INT8 = c_char 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:35
PINT8 = c_char_p 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:35
INT16 = c_short 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:36
PINT16 = POINTER(c_short) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:36
INT32 = c_int 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:37
PINT32 = POINTER(c_int) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:37
UINT8 = c_ubyte 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:38
PUINT8 = POINTER(c_ubyte) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:38
UINT16 = c_ushort 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:39
PUINT16 = POINTER(c_ushort) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:39
UINT32 = c_uint 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:40
PUINT32 = POINTER(c_uint) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:40
LONG32 = c_int 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:41
PLONG32 = POINTER(c_int) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:41
ULONG32 = c_uint 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:42
PULONG32 = POINTER(c_uint) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:42
DWORD32 = c_uint 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:43
PDWORD32 = POINTER(c_uint) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:43
INT64 = c_longlong 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:44
PINT64 = POINTER(c_longlong) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:44
UINT64 = c_ulonglong 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:45
PUINT64 = POINTER(c_ulonglong) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:45
VOID = None 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:47
LPVOID = POINTER(None) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:47
LPCSTR = c_char_p 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:48
CHAR = c_char 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:49
BYTE = c_ubyte 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:50
WORD = c_ushort 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:51
USHORT = c_ushort 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:51
UINT = c_uint 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:52
INT = c_int 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:53
INT_PTR = POINTER(c_int) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:53
BOOL = c_long 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:54
LONG = c_long 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:55
DWORD = c_ulong 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:56
FLOAT = c_float 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:57
COLORREF = DWORD 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:58
LPCOLORREF = POINTER(DWORD) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:58
HANDLE = POINTER(None) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:60
HGLRC = HANDLE 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:62
HDC = HANDLE 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:63
PROC = CFUNCTYPE(INT_PTR) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:65
wglCopyContext = platform.createBaseFunction(
	'wglCopyContext', dll=platform.GL, resultType=BOOL, 
	argTypes=[HGLRC, HGLRC, UINT],
	doc='wglCopyContext( HGLRC(None), HGLRC(None), UINT(None) ) -> BOOL', 
	argNames=['None', 'None', 'None'],
)

wglCreateContext = platform.createBaseFunction(
	'wglCreateContext', dll=platform.GL, resultType=HGLRC, 
	argTypes=[HDC],
	doc='wglCreateContext( HDC(None) ) -> HGLRC', 
	argNames=['None'],
)

wglCreateLayerContext = platform.createBaseFunction(
	'wglCreateLayerContext', dll=platform.GL, resultType=HGLRC, 
	argTypes=[HDC, c_int],
	doc='wglCreateLayerContext( HDC(None), c_int(None) ) -> HGLRC', 
	argNames=['None', 'None'],
)

wglDeleteContext = platform.createBaseFunction(
	'wglDeleteContext', dll=platform.GL, resultType=BOOL, 
	argTypes=[HGLRC],
	doc='wglDeleteContext( HGLRC(None) ) -> BOOL', 
	argNames=['None'],
)

wglGetCurrentContext = platform.createBaseFunction(
	'wglGetCurrentContext', dll=platform.GL, resultType=HGLRC, 
	argTypes=[],
	doc='wglGetCurrentContext(  ) -> HGLRC', 
	argNames=[],
)

wglGetCurrentDC = platform.createBaseFunction(
	'wglGetCurrentDC', dll=platform.GL, resultType=HDC, 
	argTypes=[],
	doc='wglGetCurrentDC(  ) -> HDC', 
	argNames=[],
)

wglGetProcAddress = platform.createBaseFunction(
	'wglGetProcAddress', dll=platform.GL, resultType=PROC, 
	argTypes=[LPCSTR],
	doc='wglGetProcAddress( LPCSTR(None) ) -> PROC', 
	argNames=['None'],
)

wglMakeCurrent = platform.createBaseFunction(
	'wglMakeCurrent', dll=platform.GL, resultType=BOOL, 
	argTypes=[HDC, HGLRC],
	doc='wglMakeCurrent( HDC(None), HGLRC(None) ) -> BOOL', 
	argNames=['None', 'None'],
)

wglShareLists = platform.createBaseFunction(
	'wglShareLists', dll=platform.GL, resultType=BOOL, 
	argTypes=[HGLRC, HGLRC],
	doc='wglShareLists( HGLRC(None), HGLRC(None) ) -> BOOL', 
	argNames=['None', 'None'],
)

wglUseFontBitmapsA = platform.createBaseFunction(
	'wglUseFontBitmapsA', dll=platform.GL, resultType=BOOL, 
	argTypes=[HDC, DWORD, DWORD, DWORD],
	doc='wglUseFontBitmapsA( HDC(None), DWORD(None), DWORD(None), DWORD(None) ) -> BOOL', 
	argNames=['None', 'None', 'None', 'None'],
)

wglUseFontBitmapsW = platform.createBaseFunction(
	'wglUseFontBitmapsW', dll=platform.GL, resultType=BOOL, 
	argTypes=[HDC, DWORD, DWORD, DWORD],
	doc='wglUseFontBitmapsW( HDC(None), DWORD(None), DWORD(None), DWORD(None) ) -> BOOL', 
	argNames=['None', 'None', 'None', 'None'],
)

SwapBuffers = platform.createBaseFunction(
	'SwapBuffers', dll=platform.GL, resultType=BOOL, 
	argTypes=[HDC],
	doc='SwapBuffers( HDC(None) ) -> BOOL', 
	argNames=['None'],
)

class struct__POINTFLOAT(Structure):
    __slots__ = [
        'x',
        'y',
    ]
struct__POINTFLOAT._fields_ = [
    ('x', FLOAT),
    ('y', FLOAT),
]

POINTFLOAT = struct__POINTFLOAT 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:83
PPOINTFLOAT = POINTER(struct__POINTFLOAT) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:83
class struct__GLYPHMETRICSFLOAT(Structure):
    __slots__ = [
        'gmfBlackBoxX',
        'gmfBlackBoxY',
        'gmfptGlyphOrigin',
        'gmfCellIncX',
        'gmfCellIncY',
    ]
struct__GLYPHMETRICSFLOAT._fields_ = [
    ('gmfBlackBoxX', FLOAT),
    ('gmfBlackBoxY', FLOAT),
    ('gmfptGlyphOrigin', POINTFLOAT),
    ('gmfCellIncX', FLOAT),
    ('gmfCellIncY', FLOAT),
]

GLYPHMETRICSFLOAT = struct__GLYPHMETRICSFLOAT 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:91
PGLYPHMETRICSFLOAT = POINTER(struct__GLYPHMETRICSFLOAT) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:91
LPGLYPHMETRICSFLOAT = POINTER(struct__GLYPHMETRICSFLOAT) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:91
WGL_FONT_LINES = constant.Constant( 'WGL_FONT_LINES', 0 )
WGL_FONT_POLYGONS = constant.Constant( 'WGL_FONT_POLYGONS', 1 )
wglUseFontOutlinesA = platform.createBaseFunction(
	'wglUseFontOutlinesA', dll=platform.GL, resultType=BOOL, 
	argTypes=[HDC, DWORD, DWORD, DWORD, FLOAT, FLOAT, c_int, LPGLYPHMETRICSFLOAT],
	doc='wglUseFontOutlinesA( HDC(None), DWORD(None), DWORD(None), DWORD(None), FLOAT(None), FLOAT(None), c_int(None), LPGLYPHMETRICSFLOAT(None) ) -> BOOL', 
	argNames=['None', 'None', 'None', 'None', 'None', 'None', 'None', 'None'],
)

wglUseFontOutlinesW = platform.createBaseFunction(
	'wglUseFontOutlinesW', dll=platform.GL, resultType=BOOL, 
	argTypes=[HDC, DWORD, DWORD, DWORD, FLOAT, FLOAT, c_int, LPGLYPHMETRICSFLOAT],
	doc='wglUseFontOutlinesW( HDC(None), DWORD(None), DWORD(None), DWORD(None), FLOAT(None), FLOAT(None), c_int(None), LPGLYPHMETRICSFLOAT(None) ) -> BOOL', 
	argNames=['None', 'None', 'None', 'None', 'None', 'None', 'None', 'None'],
)

class struct_tagLAYERPLANEDESCRIPTOR(Structure):
    __slots__ = [
        'nSize',
        'nVersion',
        'dwFlags',
        'iPixelType',
        'cColorBits',
        'cRedBits',
        'cRedShift',
        'cGreenBits',
        'cGreenShift',
        'cBlueBits',
        'cBlueShift',
        'cAlphaBits',
        'cAlphaShift',
        'cAccumBits',
        'cAccumRedBits',
        'cAccumGreenBits',
        'cAccumBlueBits',
        'cAccumAlphaBits',
        'cDepthBits',
        'cStencilBits',
        'cAuxBuffers',
        'iLayerPlane',
        'bReserved',
        'crTransparent',
    ]
struct_tagLAYERPLANEDESCRIPTOR._fields_ = [
    ('nSize', WORD),
    ('nVersion', WORD),
    ('dwFlags', DWORD),
    ('iPixelType', BYTE),
    ('cColorBits', BYTE),
    ('cRedBits', BYTE),
    ('cRedShift', BYTE),
    ('cGreenBits', BYTE),
    ('cGreenShift', BYTE),
    ('cBlueBits', BYTE),
    ('cBlueShift', BYTE),
    ('cAlphaBits', BYTE),
    ('cAlphaShift', BYTE),
    ('cAccumBits', BYTE),
    ('cAccumRedBits', BYTE),
    ('cAccumGreenBits', BYTE),
    ('cAccumBlueBits', BYTE),
    ('cAccumAlphaBits', BYTE),
    ('cDepthBits', BYTE),
    ('cStencilBits', BYTE),
    ('cAuxBuffers', BYTE),
    ('iLayerPlane', BYTE),
    ('bReserved', BYTE),
    ('crTransparent', COLORREF),
]

LAYERPLANEDESCRIPTOR = struct_tagLAYERPLANEDESCRIPTOR 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:127
PLAYERPLANEDESCRIPTOR = POINTER(struct_tagLAYERPLANEDESCRIPTOR) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:127
LPLAYERPLANEDESCRIPTOR = POINTER(struct_tagLAYERPLANEDESCRIPTOR) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:127
LPD_DOUBLEBUFFER = constant.Constant( 'LPD_DOUBLEBUFFER', 1 )
LPD_STEREO = constant.Constant( 'LPD_STEREO', 2 )
LPD_SUPPORT_GDI = constant.Constant( 'LPD_SUPPORT_GDI', 16 )
LPD_SUPPORT_OPENGL = constant.Constant( 'LPD_SUPPORT_OPENGL', 32 )
LPD_SHARE_DEPTH = constant.Constant( 'LPD_SHARE_DEPTH', 64 )
LPD_SHARE_STENCIL = constant.Constant( 'LPD_SHARE_STENCIL', 128 )
LPD_SHARE_ACCUM = constant.Constant( 'LPD_SHARE_ACCUM', 256 )
LPD_SWAP_EXCHANGE = constant.Constant( 'LPD_SWAP_EXCHANGE', 512 )
LPD_SWAP_COPY = constant.Constant( 'LPD_SWAP_COPY', 1024 )
LPD_TRANSPARENT = constant.Constant( 'LPD_TRANSPARENT', 4096 )
LPD_TYPE_RGBA = constant.Constant( 'LPD_TYPE_RGBA', 0 )
LPD_TYPE_COLORINDEX = constant.Constant( 'LPD_TYPE_COLORINDEX', 1 )
WGL_SWAP_MAIN_PLANE = constant.Constant( 'WGL_SWAP_MAIN_PLANE', 1 )
WGL_SWAP_OVERLAY1 = constant.Constant( 'WGL_SWAP_OVERLAY1', 2 )
WGL_SWAP_OVERLAY2 = constant.Constant( 'WGL_SWAP_OVERLAY2', 4 )
WGL_SWAP_OVERLAY3 = constant.Constant( 'WGL_SWAP_OVERLAY3', 8 )
WGL_SWAP_OVERLAY4 = constant.Constant( 'WGL_SWAP_OVERLAY4', 16 )
WGL_SWAP_OVERLAY5 = constant.Constant( 'WGL_SWAP_OVERLAY5', 32 )
WGL_SWAP_OVERLAY6 = constant.Constant( 'WGL_SWAP_OVERLAY6', 64 )
WGL_SWAP_OVERLAY7 = constant.Constant( 'WGL_SWAP_OVERLAY7', 128 )
WGL_SWAP_OVERLAY8 = constant.Constant( 'WGL_SWAP_OVERLAY8', 256 )
WGL_SWAP_OVERLAY9 = constant.Constant( 'WGL_SWAP_OVERLAY9', 512 )
WGL_SWAP_OVERLAY10 = constant.Constant( 'WGL_SWAP_OVERLAY10', 1024 )
WGL_SWAP_OVERLAY11 = constant.Constant( 'WGL_SWAP_OVERLAY11', 2048 )
WGL_SWAP_OVERLAY12 = constant.Constant( 'WGL_SWAP_OVERLAY12', 4096 )
WGL_SWAP_OVERLAY13 = constant.Constant( 'WGL_SWAP_OVERLAY13', 8192 )
WGL_SWAP_OVERLAY14 = constant.Constant( 'WGL_SWAP_OVERLAY14', 16384 )
WGL_SWAP_OVERLAY15 = constant.Constant( 'WGL_SWAP_OVERLAY15', 32768 )
WGL_SWAP_UNDERLAY1 = constant.Constant( 'WGL_SWAP_UNDERLAY1', 65536 )
WGL_SWAP_UNDERLAY2 = constant.Constant( 'WGL_SWAP_UNDERLAY2', 131072 )
WGL_SWAP_UNDERLAY3 = constant.Constant( 'WGL_SWAP_UNDERLAY3', 262144 )
WGL_SWAP_UNDERLAY4 = constant.Constant( 'WGL_SWAP_UNDERLAY4', 524288 )
WGL_SWAP_UNDERLAY5 = constant.Constant( 'WGL_SWAP_UNDERLAY5', 1048576 )
WGL_SWAP_UNDERLAY6 = constant.Constant( 'WGL_SWAP_UNDERLAY6', 2097152 )
WGL_SWAP_UNDERLAY7 = constant.Constant( 'WGL_SWAP_UNDERLAY7', 4194304 )
WGL_SWAP_UNDERLAY8 = constant.Constant( 'WGL_SWAP_UNDERLAY8', 8388608 )
WGL_SWAP_UNDERLAY9 = constant.Constant( 'WGL_SWAP_UNDERLAY9', 16777216 )
WGL_SWAP_UNDERLAY10 = constant.Constant( 'WGL_SWAP_UNDERLAY10', 33554432 )
WGL_SWAP_UNDERLAY11 = constant.Constant( 'WGL_SWAP_UNDERLAY11', 67108864 )
WGL_SWAP_UNDERLAY12 = constant.Constant( 'WGL_SWAP_UNDERLAY12', 134217728 )
WGL_SWAP_UNDERLAY13 = constant.Constant( 'WGL_SWAP_UNDERLAY13', 268435456 )
WGL_SWAP_UNDERLAY14 = constant.Constant( 'WGL_SWAP_UNDERLAY14', 536870912 )
WGL_SWAP_UNDERLAY15 = constant.Constant( 'WGL_SWAP_UNDERLAY15', 1073741824 )
wglDescribeLayerPlane = platform.createBaseFunction(
	'wglDescribeLayerPlane', dll=platform.GL, resultType=BOOL, 
	argTypes=[HDC, c_int, c_int, UINT, LPLAYERPLANEDESCRIPTOR],
	doc='wglDescribeLayerPlane( HDC(None), c_int(None), c_int(None), UINT(None), LPLAYERPLANEDESCRIPTOR(None) ) -> BOOL', 
	argNames=['None', 'None', 'None', 'None', 'None'],
)

wglSetLayerPaletteEntries = platform.createBaseFunction(
	'wglSetLayerPaletteEntries', dll=platform.GL, resultType=c_int, 
	argTypes=[HDC, c_int, c_int, c_int, POINTER(COLORREF)],
	doc='wglSetLayerPaletteEntries( HDC(None), c_int(None), c_int(None), c_int(None), POINTER(COLORREF)() ) -> c_int', 
	argNames=['None', 'None', 'None', 'None', ''],
)

wglGetLayerPaletteEntries = platform.createBaseFunction(
	'wglGetLayerPaletteEntries', dll=platform.GL, resultType=c_int, 
	argTypes=[HDC, c_int, c_int, c_int, POINTER(COLORREF)],
	doc='wglGetLayerPaletteEntries( HDC(None), c_int(None), c_int(None), c_int(None), POINTER(COLORREF)() ) -> c_int', 
	argNames=['None', 'None', 'None', 'None', ''],
)

wglRealizeLayerPalette = platform.createBaseFunction(
	'wglRealizeLayerPalette', dll=platform.GL, resultType=BOOL, 
	argTypes=[HDC, c_int, BOOL],
	doc='wglRealizeLayerPalette( HDC(None), c_int(None), BOOL(None) ) -> BOOL', 
	argNames=['None', 'None', 'None'],
)

wglSwapLayerBuffers = platform.createBaseFunction(
	'wglSwapLayerBuffers', dll=platform.GL, resultType=BOOL, 
	argTypes=[HDC, UINT],
	doc='wglSwapLayerBuffers( HDC(None), UINT(None) ) -> BOOL', 
	argNames=['None', 'None'],
)

class struct__WGLSWAP(Structure):
    __slots__ = [
        'hdc',
        'uiFlags',
    ]
struct__WGLSWAP._fields_ = [
    ('hdc', HDC),
    ('uiFlags', UINT),
]

WGLSWAP = struct__WGLSWAP 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:190
PWGLSWAP = POINTER(struct__WGLSWAP) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:190
LPWGLSWAP = POINTER(struct__WGLSWAP) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:190
WGL_SWAPMULTIPLE_MAX = constant.Constant( 'WGL_SWAPMULTIPLE_MAX', 16 )
wglSwapMultipleBuffers = platform.createBaseFunction(
	'wglSwapMultipleBuffers', dll=platform.GL, resultType=DWORD, 
	argTypes=[UINT, POINTER(WGLSWAP)],
	doc='wglSwapMultipleBuffers( UINT(None), POINTER(WGLSWAP)() ) -> DWORD', 
	argNames=['None', ''],
)

class struct_tagRECT(Structure):
    __slots__ = [
        'left',
        'top',
        'right',
        'bottom',
    ]
struct_tagRECT._fields_ = [
    ('left', LONG),
    ('top', LONG),
    ('right', LONG),
    ('bottom', LONG),
]

RECT = struct_tagRECT 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:202
PRECT = POINTER(struct_tagRECT) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:202
NPRECT = POINTER(struct_tagRECT) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:202
LPRECT = POINTER(struct_tagRECT) 	# /home/mcfletch/pylive/OpenGL-ctypes/src/wgl.h:202

__all__ = ['CONST', 'GLenum', 'GLboolean', 'GLbitfield', 'GLbyte', 'GLshort',
'GLint', 'GLsizei', 'GLubyte', 'GLushort', 'GLuint', 'GLfloat', 'GLclampf',
'GLdouble', 'GLclampd', 'GLvoid', 'INT8', 'PINT8', 'INT16', 'PINT16', 'INT32',
'PINT32', 'UINT8', 'PUINT8', 'UINT16', 'PUINT16', 'UINT32', 'PUINT32',
'LONG32', 'PLONG32', 'ULONG32', 'PULONG32', 'DWORD32', 'PDWORD32', 'INT64',
'PINT64', 'UINT64', 'PUINT64', 'VOID', 'LPVOID', 'LPCSTR', 'CHAR', 'BYTE',
'WORD', 'USHORT', 'UINT', 'INT', 'INT_PTR', 'BOOL', 'LONG', 'DWORD', 'FLOAT',
'COLORREF', 'LPCOLORREF', 'HANDLE', 'HGLRC', 'HDC', 'PROC', 'wglCopyContext',
'wglCreateContext', 'wglCreateLayerContext', 'wglDeleteContext',
'wglGetCurrentContext', 'wglGetCurrentDC', 'wglGetProcAddress',
'wglMakeCurrent', 'wglShareLists', 'wglUseFontBitmapsA', 'wglUseFontBitmapsW',
'SwapBuffers', 'POINTFLOAT', 'PPOINTFLOAT', 'GLYPHMETRICSFLOAT',
'PGLYPHMETRICSFLOAT', 'LPGLYPHMETRICSFLOAT', 'WGL_FONT_LINES',
'WGL_FONT_POLYGONS', 'wglUseFontOutlinesA', 'wglUseFontOutlinesW',
'LAYERPLANEDESCRIPTOR', 'PLAYERPLANEDESCRIPTOR', 'LPLAYERPLANEDESCRIPTOR',
'LPD_DOUBLEBUFFER', 'LPD_STEREO', 'LPD_SUPPORT_GDI', 'LPD_SUPPORT_OPENGL',
'LPD_SHARE_DEPTH', 'LPD_SHARE_STENCIL', 'LPD_SHARE_ACCUM',
'LPD_SWAP_EXCHANGE', 'LPD_SWAP_COPY', 'LPD_TRANSPARENT', 'LPD_TYPE_RGBA',
'LPD_TYPE_COLORINDEX', 'WGL_SWAP_MAIN_PLANE', 'WGL_SWAP_OVERLAY1',
'WGL_SWAP_OVERLAY2', 'WGL_SWAP_OVERLAY3', 'WGL_SWAP_OVERLAY4',
'WGL_SWAP_OVERLAY5', 'WGL_SWAP_OVERLAY6', 'WGL_SWAP_OVERLAY7',
'WGL_SWAP_OVERLAY8', 'WGL_SWAP_OVERLAY9', 'WGL_SWAP_OVERLAY10',
'WGL_SWAP_OVERLAY11', 'WGL_SWAP_OVERLAY12', 'WGL_SWAP_OVERLAY13',
'WGL_SWAP_OVERLAY14', 'WGL_SWAP_OVERLAY15', 'WGL_SWAP_UNDERLAY1',
'WGL_SWAP_UNDERLAY2', 'WGL_SWAP_UNDERLAY3', 'WGL_SWAP_UNDERLAY4',
'WGL_SWAP_UNDERLAY5', 'WGL_SWAP_UNDERLAY6', 'WGL_SWAP_UNDERLAY7',
'WGL_SWAP_UNDERLAY8', 'WGL_SWAP_UNDERLAY9', 'WGL_SWAP_UNDERLAY10',
'WGL_SWAP_UNDERLAY11', 'WGL_SWAP_UNDERLAY12', 'WGL_SWAP_UNDERLAY13',
'WGL_SWAP_UNDERLAY14', 'WGL_SWAP_UNDERLAY15', 'wglDescribeLayerPlane',
'wglSetLayerPaletteEntries', 'wglGetLayerPaletteEntries',
'wglRealizeLayerPalette', 'wglSwapLayerBuffers', 'WGLSWAP', 'PWGLSWAP',
'LPWGLSWAP', 'WGL_SWAPMULTIPLE_MAX', 'wglSwapMultipleBuffers', 'RECT',
'PRECT', 'NPRECT', 'LPRECT']
# END GENERATED CONTENT (do not edit above this line)


