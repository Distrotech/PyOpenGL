'''OpenGL extension VERSION.GL_1_0

This module customises the behaviour of the 
OpenGL.raw.GL.VERSION.GL_1_0 to provide a more 
Python-friendly API

The official definition of this extension is available here:
http://www.opengl.org/registry/specs/VERSION/GL_1_0.txt
'''
from OpenGL import platform, constant, arrays
from OpenGL import extensions, wrapper
import ctypes
from OpenGL.raw.GL import _types, _glgets
from OpenGL.raw.GL.VERSION.GL_1_0 import *
from OpenGL.raw.GL.VERSION.GL_1_0 import _EXTENSION_NAME

def glInitGl10VERSION():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( _EXTENSION_NAME )

# COMPSIZE(format,type,width,height) glReadPixels=wrapper.wrapper(glReadPixels)
glGetBooleanv=wrapper.wrapper(glGetBooleanv).setOutput(#
    'data',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetDoublev=wrapper.wrapper(glGetDoublev).setOutput(#
    'data',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetFloatv=wrapper.wrapper(glGetFloatv).setOutput(#
    'data',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetIntegerv=wrapper.wrapper(glGetIntegerv).setOutput(#
    'data',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
# COMPSIZE(target,level,format,type) glGetTexImage=wrapper.wrapper(glGetTexImage)
glGetTexParameterfv=wrapper.wrapper(glGetTexParameterfv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetTexParameteriv=wrapper.wrapper(glGetTexParameteriv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetTexLevelParameterfv=wrapper.wrapper(glGetTexLevelParameterfv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetTexLevelParameteriv=wrapper.wrapper(glGetTexLevelParameteriv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glFeedbackBuffer=wrapper.wrapper(glFeedbackBuffer).setOutput(#
    'buffer',size=lambda x:(x,),pnameArg='size',orPassIn=True
)
glSelectBuffer=wrapper.wrapper(glSelectBuffer).setOutput(#
    'buffer',size=lambda x:(x,),pnameArg='size',orPassIn=True
)
glGetClipPlane=wrapper.wrapper(glGetClipPlane).setOutput(#
    'equation',size=(4,),orPassIn=True
)
glGetLightfv=wrapper.wrapper(glGetLightfv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetLightiv=wrapper.wrapper(glGetLightiv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
# COMPSIZE(target,query) glGetMapdv=wrapper.wrapper(glGetMapdv)
# COMPSIZE(target,query) glGetMapfv=wrapper.wrapper(glGetMapfv)
# COMPSIZE(target,query) glGetMapiv=wrapper.wrapper(glGetMapiv)
glGetMaterialfv=wrapper.wrapper(glGetMaterialfv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetMaterialiv=wrapper.wrapper(glGetMaterialiv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetPixelMapfv=wrapper.wrapper(glGetPixelMapfv).setOutput(#
    'values',size=_glgets._glget_size_mapping,pnameArg='map',orPassIn=True
)
glGetPixelMapuiv=wrapper.wrapper(glGetPixelMapuiv).setOutput(#
    'values',size=_glgets._glget_size_mapping,pnameArg='map',orPassIn=True
)
glGetPixelMapusv=wrapper.wrapper(glGetPixelMapusv).setOutput(#
    'values',size=_glgets._glget_size_mapping,pnameArg='map',orPassIn=True
)
glGetPolygonStipple=wrapper.wrapper(glGetPolygonStipple).setOutput(#
    'mask',size=(128,),orPassIn=True
)
glGetTexEnvfv=wrapper.wrapper(glGetTexEnvfv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetTexEnviv=wrapper.wrapper(glGetTexEnviv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetTexGendv=wrapper.wrapper(glGetTexGendv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetTexGenfv=wrapper.wrapper(glGetTexGenfv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
glGetTexGeniv=wrapper.wrapper(glGetTexGeniv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
### END AUTOGENERATED SECTION