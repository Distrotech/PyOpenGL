'''OpenGL extension VERSION.GL_3_1

This module customises the behaviour of the 
OpenGL.raw.GL.VERSION.GL_3_1 to provide a more 
Python-friendly API

The official definition of this extension is available here:
http://www.opengl.org/registry/specs/VERSION/GL_3_1.txt
'''
from OpenGL import platform, constant, arrays
from OpenGL import extensions, wrapper
import ctypes
from OpenGL.raw.GL import _types, _glgets
from OpenGL.raw.GL.VERSION.GL_3_1 import *
from OpenGL.raw.GL.VERSION.GL_3_1 import _EXTENSION_NAME

def glInitGl31VERSION():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( _EXTENSION_NAME )

glGetUniformIndices=wrapper.wrapper(glGetUniformIndices).setOutput(#
    'uniformIndices',size=_glgets._glget_size_mapping,pnameArg='uniformCount',orPassIn=True
)
glGetActiveUniformsiv=wrapper.wrapper(glGetActiveUniformsiv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
# OUTPUT MULTIPLE glGetActiveUniformName
# OUTPUT MULTIPLE glGetActiveUniformName
glGetActiveUniformBlockiv=wrapper.wrapper(glGetActiveUniformBlockiv).setOutput(#
    'params',size=_glgets._glget_size_mapping,pnameArg='pname',orPassIn=True
)
# OUTPUT MULTIPLE glGetActiveUniformBlockName
# OUTPUT MULTIPLE glGetActiveUniformBlockName
### END AUTOGENERATED SECTION
from OpenGL.GL.ARB.copy_buffer import *
from OpenGL.GL.ARB.uniform_buffer_object import *
