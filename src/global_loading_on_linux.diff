Index: ctypes/__init__.py
===================================================================
RCS file: /cvsroot/ctypes/ctypes/ctypes/__init__.py,v
retrieving revision 1.61.2.7
diff -C3 -r1.61.2.7 __init__.py
*** ctypes/__init__.py	10 Jun 2005 18:21:40 -0000	1.61.2.7
--- ctypes/__init__.py	24 Jul 2005 22:49:39 -0000
***************
*** 14,19 ****
--- 14,23 ----
  from _ctypes import _Pointer
  from _ctypes import CFuncPtr as _CFuncPtr
  from _ctypes import __version__ as _ctypes_version
+ try:
+     from _ctypes import RTLD_LOCAL, RTLD_GLOBAL
+ except (ImportError,AttributeError), err:
+     RTLD_LOCAL = 0
  
  from _ctypes import ArgumentError
  
***************
*** 317,326 ****
          _restype_ = c_int # default, can be overridden in instances
  
      _handle = 0
!     def __init__(self, name, handle=None):
          self._name = name
          if handle is None:
!             self._handle = _LoadLibrary(self._name)
          else:
              self._handle = handle
  
--- 321,330 ----
          _restype_ = c_int # default, can be overridden in instances
  
      _handle = 0
!     def __init__(self, name, handle=None, mode=RTLD_LOCAL):
          self._name = name
          if handle is None:
!             self._handle = _LoadLibrary(self._name, mode)
          else:
              self._handle = handle
  
Index: source/_ctypes.c
===================================================================
RCS file: /cvsroot/ctypes/ctypes/source/_ctypes.c,v
retrieving revision 1.226.2.14
diff -C3 -r1.226.2.14 _ctypes.c
*** source/_ctypes.c	30 Jun 2005 14:36:52 -0000	1.226.2.14
--- source/_ctypes.c	24 Jul 2005 22:49:42 -0000
***************
*** 3977,3982 ****
--- 3977,3986 ----
  #endif
  	PyModule_AddObject(m, "FUNCFLAG_CDECL", PyInt_FromLong(FUNCFLAG_CDECL));
  	PyModule_AddObject(m, "FUNCFLAG_PYTHONAPI", PyInt_FromLong(FUNCFLAG_PYTHONAPI));
+ #ifdef RTLD_LOCAL   
+ 	PyModule_AddObject(m, "RTLD_GLOBAL", PyInt_FromLong(RTLD_GLOBAL));
+ 	PyModule_AddObject(m, "RTLD_LOCAL", PyInt_FromLong(RTLD_LOCAL));
+ #endif
  	PyModule_AddStringConstant(m, "__version__", "0.9.8");
  	
  	PyExc_ArgError = PyErr_NewException("ctypes.ArgumentError", NULL, NULL);
Index: source/callproc.c
===================================================================
RCS file: /cvsroot/ctypes/ctypes/source/callproc.c,v
retrieving revision 1.127.2.5
diff -C3 -r1.127.2.5 callproc.c
*** source/callproc.c	19 Apr 2005 13:06:34 -0000	1.127.2.5
--- source/callproc.c	24 Jul 2005 22:49:42 -0000
***************
*** 972,978 ****
  {
  	char *name;
  	HMODULE hMod;
! 	if (!PyArg_ParseTuple(args, "s:LoadLibrary", &name))
  		return NULL;
  	hMod = LoadLibrary(name);
  	if (!hMod)
--- 972,978 ----
  {
  	char *name;
  	HMODULE hMod;
! 	if (!PyArg_ParseTuple(args, "s|i:LoadLibrary", &name))
  		return NULL;
  	hMod = LoadLibrary(name);
  	if (!hMod)
***************
*** 1091,1098 ****
  	/* cygwin doesn't define RTLD_LOCAL */
  	int mode = RTLD_NOW;
  #endif
! 	if (!PyArg_ParseTuple(args, "z:dlopen", &name))
  		return NULL;
  	handle = dlopen(name, mode);
  	if (!handle) {
  		PyErr_SetString(PyExc_OSError,
--- 1091,1099 ----
  	/* cygwin doesn't define RTLD_LOCAL */
  	int mode = RTLD_NOW;
  #endif
! 	if (!PyArg_ParseTuple(args, "z|i:dlopen", &name, &mode))
  		return NULL;
+ 	mode = mode | RTLD_NOW;
  	handle = dlopen(name, mode);
  	if (!handle) {
  		PyErr_SetString(PyExc_OSError,
***************
*** 1503,1509 ****
  	{"call_commethod", call_commethod, METH_VARARGS },
  	{"_check_HRESULT", check_hresult, METH_VARARGS},
  #else
! 	{"dlopen", py_dl_open, METH_VARARGS, "dlopen a library"},
  	{"dlclose", py_dl_close, METH_VARARGS, "dlclose a library"},
  	{"dlsym", py_dl_sym, METH_VARARGS, "find symbol in shared library"},
  #endif
--- 1504,1510 ----
  	{"call_commethod", call_commethod, METH_VARARGS },
  	{"_check_HRESULT", check_hresult, METH_VARARGS},
  #else
! 	{"dlopen", py_dl_open, METH_VARARGS, "dlopen(name,flag={RTLD_GLOBAL|RTLD_LOCAL}) open a shared library"},
  	{"dlclose", py_dl_close, METH_VARARGS, "dlclose a library"},
  	{"dlsym", py_dl_sym, METH_VARARGS, "find symbol in shared library"},
  #endif
